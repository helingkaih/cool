{"ast":null,"code":"import _inherits from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, ViewContainerRef, ComponentFactoryResolver, Renderer2, ChangeDetectorRef, Optional, ViewChild, TemplateRef, Host, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { isPresetColor } from 'ng-zorro-antd/core/color';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { DEFAULT_TOOLTIP_POSITIONS, POSITION_MAP, getPlacementName, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { toBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"overlay\"];\n\nfunction NzToolTipComponent_ng_template_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzTitle);\n  }\n}\n\nfunction NzToolTipComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelement(3, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(5, NzToolTipComponent_ng_template_0_ng_container_5_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-tooltip-rtl\", ctx_r1.dir === \"rtl\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1._classMap)(\"ngStyle\", ctx_r1.nzOverlayStyle)(\"@.disabled\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"@zoomBigMotion\", \"active\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1._contentStyleMap);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1._contentStyleMap);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzTitle);\n  }\n}\n\nvar NzTooltipBaseDirective = /*@__PURE__*/function () {\n  var NzTooltipBaseDirective = /*#__PURE__*/function () {\n    function NzTooltipBaseDirective(elementRef, hostView, resolver, renderer, noAnimation, nzConfigService) {\n      _classCallCheck(this, NzTooltipBaseDirective);\n\n      this.elementRef = elementRef;\n      this.hostView = hostView;\n      this.resolver = resolver;\n      this.renderer = renderer;\n      this.noAnimation = noAnimation;\n      this.nzConfigService = nzConfigService;\n      this.visibleChange = new EventEmitter();\n      this.internalVisible = false;\n      this.destroy$ = new Subject();\n      this.triggerDisposables = [];\n    }\n    /**\n     * This true title that would be used in other parts on this component.\n     */\n\n\n    _createClass(NzTooltipBaseDirective, [{\n      key: \"_title\",\n      get: function get() {\n        return this.title || this.directiveTitle || null;\n      }\n    }, {\n      key: \"_content\",\n      get: function get() {\n        return this.content || this.directiveContent || null;\n      }\n    }, {\n      key: \"_trigger\",\n      get: function get() {\n        return typeof this.trigger !== 'undefined' ? this.trigger : 'hover';\n      }\n    }, {\n      key: \"_placement\",\n      get: function get() {\n        var p = this.placement;\n        return Array.isArray(p) && p.length > 0 ? p : typeof p === 'string' && p ? [p] : ['top'];\n      }\n    }, {\n      key: \"_visible\",\n      get: function get() {\n        return (typeof this.visible !== 'undefined' ? this.visible : this.internalVisible) || false;\n      }\n    }, {\n      key: \"_mouseEnterDelay\",\n      get: function get() {\n        return this.mouseEnterDelay || 0.15;\n      }\n    }, {\n      key: \"_mouseLeaveDelay\",\n      get: function get() {\n        return this.mouseLeaveDelay || 0.1;\n      }\n    }, {\n      key: \"_overlayClassName\",\n      get: function get() {\n        return this.overlayClassName || null;\n      }\n    }, {\n      key: \"_overlayStyle\",\n      get: function get() {\n        return this.overlayStyle || null;\n      }\n    }, {\n      key: \"getProxyPropertyMap\",\n      value: function getProxyPropertyMap() {\n        var _this = this;\n\n        return {\n          noAnimation: ['noAnimation', function () {\n            return _this.noAnimation;\n          }]\n        };\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var trigger = changes.trigger;\n\n        if (trigger && !trigger.isFirstChange()) {\n          this.registerTriggers();\n        }\n\n        if (this.component) {\n          this.updatePropertiesByChanges(changes);\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.createComponent();\n        this.registerTriggers();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete(); // Clear toggling timer. Issue #3875 #4317 #4386\n\n        this.clearTogglingTimer();\n        this.removeTriggerListeners();\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        var _a;\n\n        (_a = this.component) === null || _a === void 0 ? void 0 : _a.show();\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _a;\n\n        (_a = this.component) === null || _a === void 0 ? void 0 : _a.hide();\n      }\n      /**\n       * Force the component to update its position.\n       */\n\n    }, {\n      key: \"updatePosition\",\n      value: function updatePosition() {\n        if (this.component) {\n          this.component.updatePosition();\n        }\n      }\n      /**\n       * Create a dynamic tooltip component. This method can be override.\n       */\n\n    }, {\n      key: \"createComponent\",\n      value: function createComponent() {\n        var _this2 = this;\n\n        var componentRef = this.hostView.createComponent(this.componentFactory);\n        this.component = componentRef.instance; // Remove the component's DOM because it should be in the overlay container.\n\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), componentRef.location.nativeElement);\n        this.component.setOverlayOrigin({\n          elementRef: this.origin || this.elementRef\n        });\n        this.initProperties();\n        this.component.nzVisibleChange.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(function (visible) {\n          _this2.internalVisible = visible;\n\n          _this2.visibleChange.emit(visible);\n        });\n      }\n    }, {\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this3 = this;\n\n        // When the method gets invoked, all properties has been synced to the dynamic component.\n        // After removing the old API, we can just check the directive's own `nzTrigger`.\n        var el = this.elementRef.nativeElement;\n        var trigger = this.trigger;\n        this.removeTriggerListeners();\n\n        if (trigger === 'hover') {\n          var overlayElement;\n          this.triggerDisposables.push(this.renderer.listen(el, 'mouseenter', function () {\n            _this3.delayEnterLeave(true, true, _this3._mouseEnterDelay);\n          }));\n          this.triggerDisposables.push(this.renderer.listen(el, 'mouseleave', function () {\n            var _a;\n\n            _this3.delayEnterLeave(true, false, _this3._mouseLeaveDelay);\n\n            if (((_a = _this3.component) === null || _a === void 0 ? void 0 : _a.overlay.overlayRef) && !overlayElement) {\n              overlayElement = _this3.component.overlay.overlayRef.overlayElement;\n\n              _this3.triggerDisposables.push(_this3.renderer.listen(overlayElement, 'mouseenter', function () {\n                _this3.delayEnterLeave(false, true, _this3._mouseEnterDelay);\n              }));\n\n              _this3.triggerDisposables.push(_this3.renderer.listen(overlayElement, 'mouseleave', function () {\n                _this3.delayEnterLeave(false, false, _this3._mouseLeaveDelay);\n              }));\n            }\n          }));\n        } else if (trigger === 'focus') {\n          this.triggerDisposables.push(this.renderer.listen(el, 'focus', function () {\n            return _this3.show();\n          }));\n          this.triggerDisposables.push(this.renderer.listen(el, 'blur', function () {\n            return _this3.hide();\n          }));\n        } else if (trigger === 'click') {\n          this.triggerDisposables.push(this.renderer.listen(el, 'click', function (e) {\n            e.preventDefault();\n\n            _this3.show();\n          }));\n        } // Else do nothing because user wants to control the visibility programmatically.\n\n      }\n    }, {\n      key: \"updatePropertiesByChanges\",\n      value: function updatePropertiesByChanges(changes) {\n        this.updatePropertiesByKeys(Object.keys(changes));\n      }\n    }, {\n      key: \"updatePropertiesByKeys\",\n      value: function updatePropertiesByKeys(keys) {\n        var _this4 = this;\n\n        var _a;\n\n        var mappingProperties = Object.assign({\n          // common mappings\n          title: ['nzTitle', function () {\n            return _this4._title;\n          }],\n          directiveTitle: ['nzTitle', function () {\n            return _this4._title;\n          }],\n          content: ['nzContent', function () {\n            return _this4._content;\n          }],\n          directiveContent: ['nzContent', function () {\n            return _this4._content;\n          }],\n          trigger: ['nzTrigger', function () {\n            return _this4._trigger;\n          }],\n          placement: ['nzPlacement', function () {\n            return _this4._placement;\n          }],\n          visible: ['nzVisible', function () {\n            return _this4._visible;\n          }],\n          mouseEnterDelay: ['nzMouseEnterDelay', function () {\n            return _this4._mouseEnterDelay;\n          }],\n          mouseLeaveDelay: ['nzMouseLeaveDelay', function () {\n            return _this4._mouseLeaveDelay;\n          }],\n          overlayClassName: ['nzOverlayClassName', function () {\n            return _this4._overlayClassName;\n          }],\n          overlayStyle: ['nzOverlayStyle', function () {\n            return _this4._overlayStyle;\n          }]\n        }, this.getProxyPropertyMap());\n        (keys || Object.keys(mappingProperties).filter(function (key) {\n          return !key.startsWith('directive');\n        })).forEach(function (property) {\n          if (mappingProperties[property]) {\n            var _mappingProperties$pr = _slicedToArray(mappingProperties[property], 2),\n                name = _mappingProperties$pr[0],\n                valueFn = _mappingProperties$pr[1];\n\n            _this4.updateComponentValue(name, valueFn());\n          }\n        });\n        (_a = this.component) === null || _a === void 0 ? void 0 : _a.updateByDirective();\n      }\n    }, {\n      key: \"initProperties\",\n      value: function initProperties() {\n        this.updatePropertiesByKeys();\n      }\n    }, {\n      key: \"updateComponentValue\",\n      value: function updateComponentValue(key, value) {\n        if (typeof value !== 'undefined') {\n          // @ts-ignore\n          this.component[key] = value;\n        }\n      }\n    }, {\n      key: \"delayEnterLeave\",\n      value: function delayEnterLeave(isOrigin, isEnter) {\n        var _this5 = this;\n\n        var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n        if (this.delayTimer) {\n          this.clearTogglingTimer();\n        } else if (delay > 0) {\n          this.delayTimer = setTimeout(function () {\n            _this5.delayTimer = undefined;\n            isEnter ? _this5.show() : _this5.hide();\n          }, delay * 1000);\n        } else {\n          // `isOrigin` is used due to the tooltip will not hide immediately\n          // (may caused by the fade-out animation).\n          isEnter && isOrigin ? this.show() : this.hide();\n        }\n      }\n    }, {\n      key: \"removeTriggerListeners\",\n      value: function removeTriggerListeners() {\n        this.triggerDisposables.forEach(function (dispose) {\n          return dispose();\n        });\n        this.triggerDisposables.length = 0;\n      }\n    }, {\n      key: \"clearTogglingTimer\",\n      value: function clearTogglingTimer() {\n        if (this.delayTimer) {\n          clearTimeout(this.delayTimer);\n          this.delayTimer = undefined;\n        }\n      }\n    }]);\n\n    return NzTooltipBaseDirective;\n  }();\n\n  NzTooltipBaseDirective.ɵfac = function NzTooltipBaseDirective_Factory(t) {\n    return new (t || NzTooltipBaseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzConfigService));\n  };\n\n  NzTooltipBaseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzTooltipBaseDirective,\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NzTooltipBaseDirective;\n}();\n\nvar NzTooltipBaseComponent = /*@__PURE__*/function () {\n  var NzTooltipBaseComponent = /*#__PURE__*/function () {\n    function NzTooltipBaseComponent(cdr, directionality, noAnimation) {\n      _classCallCheck(this, NzTooltipBaseComponent);\n\n      this.cdr = cdr;\n      this.directionality = directionality;\n      this.noAnimation = noAnimation;\n      this.nzTitle = null;\n      this.nzContent = null;\n      this.nzOverlayStyle = {};\n      this.nzBackdrop = false;\n      this.nzVisibleChange = new Subject();\n      this._visible = false;\n      this._trigger = 'hover';\n      this.preferredPlacement = 'top';\n      this.dir = 'ltr';\n      this._classMap = {};\n      this._prefix = 'ant-tooltip';\n      this._positions = _toConsumableArray(DEFAULT_TOOLTIP_POSITIONS);\n      this.destroy$ = new Subject();\n    }\n\n    _createClass(NzTooltipBaseComponent, [{\n      key: \"nzVisible\",\n      get: function get() {\n        return this._visible;\n      },\n      set: function set(value) {\n        var visible = toBoolean(value);\n\n        if (this._visible !== visible) {\n          this._visible = visible;\n          this.nzVisibleChange.next(visible);\n        }\n      }\n    }, {\n      key: \"nzTrigger\",\n      get: function get() {\n        return this._trigger;\n      },\n      set: function set(value) {\n        this._trigger = value;\n      }\n    }, {\n      key: \"nzPlacement\",\n      set: function set(value) {\n        var preferredPosition = value.map(function (placement) {\n          return POSITION_MAP[placement];\n        });\n        this._positions = [].concat(_toConsumableArray(preferredPosition), _toConsumableArray(DEFAULT_TOOLTIP_POSITIONS));\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this6 = this;\n\n        var _a;\n\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n          _this6.dir = direction;\n\n          _this6.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.nzVisibleChange.complete();\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        if (this.nzVisible) {\n          return;\n        }\n\n        if (!this.isEmpty()) {\n          this.nzVisible = true;\n          this.nzVisibleChange.next(true);\n          this.cdr.detectChanges();\n        } // for ltr for overlay to display tooltip in correct placement in rtl direction.\n\n\n        if (this.origin && this.overlay && this.overlay.overlayRef && this.overlay.overlayRef.getDirection() === 'rtl') {\n          this.overlay.overlayRef.setDirection('ltr');\n        }\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        if (!this.nzVisible) {\n          return;\n        }\n\n        this.nzVisible = false;\n        this.nzVisibleChange.next(false);\n        this.cdr.detectChanges();\n      }\n    }, {\n      key: \"updateByDirective\",\n      value: function updateByDirective() {\n        var _this7 = this;\n\n        this.updateStyles();\n        this.cdr.detectChanges();\n        Promise.resolve().then(function () {\n          _this7.updatePosition();\n\n          _this7.updateVisibilityByTitle();\n        });\n      }\n      /**\n       * Force the component to update its position.\n       */\n\n    }, {\n      key: \"updatePosition\",\n      value: function updatePosition() {\n        if (this.origin && this.overlay && this.overlay.overlayRef) {\n          this.overlay.overlayRef.updatePosition();\n        }\n      }\n    }, {\n      key: \"onPositionChange\",\n      value: function onPositionChange(position) {\n        this.preferredPlacement = getPlacementName(position);\n        this.updateStyles(); // We have to trigger immediate change detection or the element would blink.\n\n        this.cdr.detectChanges();\n      }\n    }, {\n      key: \"updateStyles\",\n      value: function updateStyles() {\n        var _this$_classMap;\n\n        this._classMap = (_this$_classMap = {}, _defineProperty(_this$_classMap, this.nzOverlayClassName, true), _defineProperty(_this$_classMap, \"\".concat(this._prefix, \"-placement-\").concat(this.preferredPlacement), true), _this$_classMap);\n      }\n    }, {\n      key: \"setOverlayOrigin\",\n      value: function setOverlayOrigin(origin) {\n        this.origin = origin;\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"onClickOutside\",\n      value: function onClickOutside(event) {\n        if (!this.origin.elementRef.nativeElement.contains(event.target) && this.nzTrigger !== null) {\n          this.hide();\n        }\n      }\n      /**\n       * Hide the component while the content is empty.\n       */\n\n    }, {\n      key: \"updateVisibilityByTitle\",\n      value: function updateVisibilityByTitle() {\n        if (this.isEmpty()) {\n          this.hide();\n        }\n      }\n    }]);\n\n    return NzTooltipBaseComponent;\n  }();\n\n  NzTooltipBaseComponent.ɵfac = function NzTooltipBaseComponent_Factory(t) {\n    return new (t || NzTooltipBaseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective));\n  };\n\n  NzTooltipBaseComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzTooltipBaseComponent,\n    viewQuery: function NzTooltipBaseComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n      }\n    }\n  });\n  return NzTooltipBaseComponent;\n}();\n\nfunction isTooltipEmpty(value) {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n\nvar NzTooltipDirective = /*@__PURE__*/function () {\n  var NzTooltipDirective = /*#__PURE__*/function (_NzTooltipBaseDirecti) {\n    _inherits(NzTooltipDirective, _NzTooltipBaseDirecti);\n\n    var _super = _createSuper(NzTooltipDirective);\n\n    function NzTooltipDirective(elementRef, hostView, resolver, renderer, noAnimation) {\n      var _this8;\n\n      _classCallCheck(this, NzTooltipDirective);\n\n      _this8 = _super.call(this, elementRef, hostView, resolver, renderer, noAnimation);\n      _this8.trigger = 'hover';\n      _this8.placement = 'top'; // tslint:disable-next-line:no-output-rename\n\n      _this8.visibleChange = new EventEmitter();\n      _this8.componentFactory = _this8.resolver.resolveComponentFactory(NzToolTipComponent);\n      return _this8;\n    }\n\n    _createClass(NzTooltipDirective, [{\n      key: \"getProxyPropertyMap\",\n      value: function getProxyPropertyMap() {\n        var _this9 = this;\n\n        return {\n          nzTooltipColor: ['nzColor', function () {\n            return _this9.nzTooltipColor;\n          }]\n        };\n      }\n    }]);\n\n    return NzTooltipDirective;\n  }(NzTooltipBaseDirective);\n\n  NzTooltipDirective.ɵfac = function NzTooltipDirective_Factory(t) {\n    return new (t || NzTooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n  };\n\n  NzTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzTooltipDirective,\n    selectors: [[\"\", \"nz-tooltip\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NzTooltipDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-tooltip-open\", ctx.visible);\n      }\n    },\n    inputs: {\n      trigger: [\"nzTooltipTrigger\", \"trigger\"],\n      placement: [\"nzTooltipPlacement\", \"placement\"],\n      title: [\"nzTooltipTitle\", \"title\"],\n      directiveTitle: [\"nz-tooltip\", \"directiveTitle\"],\n      origin: [\"nzTooltipOrigin\", \"origin\"],\n      visible: [\"nzTooltipVisible\", \"visible\"],\n      mouseEnterDelay: [\"nzTooltipMouseEnterDelay\", \"mouseEnterDelay\"],\n      mouseLeaveDelay: [\"nzTooltipMouseLeaveDelay\", \"mouseLeaveDelay\"],\n      overlayClassName: [\"nzTooltipOverlayClassName\", \"overlayClassName\"],\n      overlayStyle: [\"nzTooltipOverlayStyle\", \"overlayStyle\"],\n      nzTooltipColor: \"nzTooltipColor\"\n    },\n    outputs: {\n      visibleChange: \"nzTooltipVisibleChange\"\n    },\n    exportAs: [\"nzTooltip\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NzTooltipDirective;\n}();\n\nvar NzToolTipComponent = /*@__PURE__*/function () {\n  var NzToolTipComponent = /*#__PURE__*/function (_NzTooltipBaseCompone) {\n    _inherits(NzToolTipComponent, _NzTooltipBaseCompone);\n\n    var _super2 = _createSuper(NzToolTipComponent);\n\n    function NzToolTipComponent(cdr, directionality, noAnimation) {\n      var _this10;\n\n      _classCallCheck(this, NzToolTipComponent);\n\n      _this10 = _super2.call(this, cdr, directionality, noAnimation);\n      _this10.noAnimation = noAnimation;\n      _this10.nzTitle = null;\n      _this10._contentStyleMap = {};\n      return _this10;\n    }\n\n    _createClass(NzToolTipComponent, [{\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return isTooltipEmpty(this.nzTitle);\n      }\n    }, {\n      key: \"updateStyles\",\n      value: function updateStyles() {\n        var _this$_classMap2;\n\n        var isColorPreset = this.nzColor && isPresetColor(this.nzColor);\n        this._classMap = (_this$_classMap2 = {}, _defineProperty(_this$_classMap2, this.nzOverlayClassName, true), _defineProperty(_this$_classMap2, \"\".concat(this._prefix, \"-placement-\").concat(this.preferredPlacement), true), _defineProperty(_this$_classMap2, \"\".concat(this._prefix, \"-\").concat(this.nzColor), isColorPreset), _this$_classMap2);\n        this._contentStyleMap = {\n          backgroundColor: !!this.nzColor && !isColorPreset ? this.nzColor : null\n        };\n      }\n    }]);\n\n    return NzToolTipComponent;\n  }(NzTooltipBaseComponent);\n\n  NzToolTipComponent.ɵfac = function NzToolTipComponent_Factory(t) {\n    return new (t || NzToolTipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n  };\n\n  NzToolTipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzToolTipComponent,\n    selectors: [[\"nz-tooltip\"]],\n    exportAs: [\"nzTooltipComponent\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPush\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [\"overlay\", \"cdkConnectedOverlay\"], [1, \"ant-tooltip\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [1, \"ant-tooltip-content\"], [1, \"ant-tooltip-arrow\"], [1, \"ant-tooltip-arrow-content\", 3, \"ngStyle\"], [1, \"ant-tooltip-inner\", 3, \"ngStyle\"], [4, \"nzStringTemplateOutlet\"]],\n    template: function NzToolTipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzToolTipComponent_ng_template_0_Template, 6, 10, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵlistener(\"overlayOutsideClick\", function NzToolTipComponent_Template_ng_template_overlayOutsideClick_0_listener($event) {\n          return ctx.onClickOutside($event);\n        })(\"detach\", function NzToolTipComponent_Template_ng_template_detach_0_listener() {\n          return ctx.hide();\n        })(\"positionChange\", function NzToolTipComponent_Template_ng_template_positionChange_0_listener($event) {\n          return ctx.onPositionChange($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", ctx.origin)(\"cdkConnectedOverlayOpen\", ctx._visible)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayPush\", true);\n      }\n    },\n    directives: [ɵngcc4.CdkConnectedOverlay, ɵngcc5.NzConnectedOverlayDirective, ɵngcc6.NgClass, ɵngcc6.NgStyle, ɵngcc1.NzNoAnimationDirective, ɵngcc7.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    data: {\n      animation: [zoomBigMotion]\n    },\n    changeDetection: 0\n  });\n  return NzToolTipComponent;\n}();\n\nvar NzToolTipModule = /*@__PURE__*/function () {\n  var NzToolTipModule = function NzToolTipModule() {\n    _classCallCheck(this, NzToolTipModule);\n  };\n\n  NzToolTipModule.ɵfac = function NzToolTipModule_Factory(t) {\n    return new (t || NzToolTipModule)();\n  };\n\n  NzToolTipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzToolTipModule\n  });\n  NzToolTipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]]\n  });\n  return NzToolTipModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzToolTipModule, {\n    declarations: function declarations() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule];\n    },\n    exports: function exports() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzToolTipComponent, NzToolTipModule, NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipDirective, isTooltipEmpty }; //# sourceMappingURL=ng-zorro-antd-tooltip.js.map","map":null,"metadata":{},"sourceType":"module"}