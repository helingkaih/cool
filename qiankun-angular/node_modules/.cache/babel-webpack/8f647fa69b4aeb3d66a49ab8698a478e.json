{"ast":null,"code":"import _slicedToArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Clipboard, ClipboardModule } from '@angular/cdk/clipboard';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, Output, NgZone, ViewChild, ViewContainerRef, Renderer2, Inject, Optional, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/clipboard';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/trans-button';\nimport * as ɵngcc4 from 'ng-zorro-antd/tooltip';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from 'ng-zorro-antd/input';\nimport * as ɵngcc9 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc10 from '@angular/cdk/platform';\nimport * as ɵngcc11 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc12 from '@angular/cdk/bidi';\n\nfunction NzTextCopyComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var icon_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\n\nvar _c0 = [\"textarea\"];\n\nfunction NzTextEditComponent_button_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var icon_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", icon_r3);\n  }\n}\n\nfunction NzTextEditComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onClick();\n    });\n    ɵngcc0.ɵɵtemplate(1, NzTextEditComponent_button_0_ng_container_1_Template, 2, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx_r0.tooltip === null ? null : ctx_r0.tooltip || (ctx_r0.locale == null ? null : ctx_r0.locale.edit));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.icon);\n  }\n}\n\nfunction NzTextEditComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"textarea\", 5, 6);\n    ɵngcc0.ɵɵlistener(\"input\", function NzTextEditComponent_ng_container_1_Template_textarea_input_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onInput($event);\n    })(\"blur\", function NzTextEditComponent_ng_container_1_Template_textarea_blur_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.confirm();\n    })(\"keydown.esc\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_esc_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onCancel();\n    })(\"keydown.enter\", function NzTextEditComponent_ng_container_1_Template_textarea_keydown_enter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onEnter($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_container_1_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.confirm();\n    });\n    ɵngcc0.ɵɵelement(4, \"i\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nvar _c1 = [\"ellipsisContainer\"];\nvar _c2 = [\"expandable\"];\nvar _c3 = [\"contentTemplate\"];\n\nfunction NzTypographyComponent_ng_template_0_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"!content\"]);\n  }\n}\n\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_ng_content_0_Template, 1, 0, \"ng-content\", 1);\n    ɵngcc0.ɵɵtext(1);\n  }\n\n  if (rf & 2) {\n    var content_r5 = ctx.content;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !content_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", content_r5, \" \");\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11.nzSuffix);\n  }\n}\n\nvar _c4 = function _c4(a0) {\n  return {\n    content: a0\n  };\n};\n\nfunction NzTypographyComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c4, ctx_r7.nzContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13.ellipsisStr);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.nzSuffix);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r17.onExpand();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r15.locale == null ? null : ctx_r15.locale.expand);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", null, 7);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template, 3, 1, \"a\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.isEllipsis);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzSuffix);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.nzExpandable && ctx_r9.isEllipsis);\n  }\n}\n\nfunction NzTypographyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_Template, 5, 3, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var _r8 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.expanded || !ctx_r2.hasOperationsWithEllipsis && ctx_r2.nzEllipsisRows === 1 && !ctx_r2.hasEllipsisObservers || ctx_r2.canCssEllipsis || ctx_r2.nzSuffix && ctx_r2.expanded)(\"ngIfElse\", _r8);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_edit_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-edit\", 11);\n    ɵngcc0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.onEndEditing($event);\n    })(\"startEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      return ctx_r21.onStartEditing();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r3.nzContent)(\"icon\", ctx_r3.nzEditIcon)(\"tooltip\", ctx_r3.nzEditTooltip);\n  }\n}\n\nfunction NzTypographyComponent_nz_text_copy_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-text-copy\", 12);\n    ɵngcc0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.onTextCopy($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r4.copyText)(\"tooltips\", ctx_r4.nzCopyTooltips)(\"icons\", ctx_r4.nzCopyIcons);\n  }\n}\n\nvar _c5 = [\"*\"];\n\nvar NzTextCopyComponent = /*@__PURE__*/function () {\n  var NzTextCopyComponent = /*#__PURE__*/function () {\n    function NzTextCopyComponent(host, cdr, clipboard, i18n) {\n      _classCallCheck(this, NzTextCopyComponent);\n\n      this.host = host;\n      this.cdr = cdr;\n      this.clipboard = clipboard;\n      this.i18n = i18n;\n      this.copied = false;\n      this.copyId = -1;\n      this.nativeElement = this.host.nativeElement;\n      this.copyTooltip = null;\n      this.copedTooltip = null;\n      this.copyIcon = 'copy';\n      this.copedIcon = 'check';\n      this.destroy$ = new Subject();\n      this.icons = ['copy', 'check'];\n      this.textCopy = new EventEmitter();\n    }\n\n    _createClass(NzTextCopyComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this.locale = _this.i18n.getLocaleData('Text');\n\n          _this.updateTooltips();\n\n          _this.cdr.markForCheck();\n        });\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var tooltips = changes.tooltips,\n            icons = changes.icons;\n\n        if (tooltips) {\n          this.updateTooltips();\n        }\n\n        if (icons) {\n          this.updateIcons();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick() {\n        if (this.copied) {\n          return;\n        }\n\n        this.copied = true;\n        this.cdr.detectChanges();\n        var text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n      }\n    }, {\n      key: \"onCopied\",\n      value: function onCopied() {\n        var _this2 = this;\n\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(function () {\n          _this2.copied = false;\n\n          _this2.cdr.detectChanges();\n        }, 3000);\n      }\n    }, {\n      key: \"updateTooltips\",\n      value: function updateTooltips() {\n        var _a, _b, _c, _d;\n\n        if (this.tooltips === null) {\n          this.copedTooltip = null;\n          this.copyTooltip = null;\n        } else if (Array.isArray(this.tooltips)) {\n          var _this$tooltips = _slicedToArray(this.tooltips, 2),\n              copyTooltip = _this$tooltips[0],\n              copedTooltip = _this$tooltips[1];\n\n          this.copyTooltip = copyTooltip || ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.copy);\n          this.copedTooltip = copedTooltip || ((_b = this.locale) === null || _b === void 0 ? void 0 : _b.copied);\n        } else {\n          this.copyTooltip = (_c = this.locale) === null || _c === void 0 ? void 0 : _c.copy;\n          this.copedTooltip = (_d = this.locale) === null || _d === void 0 ? void 0 : _d.copied;\n        }\n\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"updateIcons\",\n      value: function updateIcons() {\n        var _this$icons = _slicedToArray(this.icons, 2),\n            copyIcon = _this$icons[0],\n            copedIcon = _this$icons[1];\n\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n      }\n    }]);\n\n    return NzTextCopyComponent;\n  }();\n\n  NzTextCopyComponent.ɵfac = function NzTextCopyComponent_Factory(t) {\n    return new (t || NzTextCopyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService));\n  };\n\n  NzTextCopyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTextCopyComponent,\n    selectors: [[\"nz-text-copy\"]],\n    inputs: {\n      icons: \"icons\",\n      text: \"text\",\n      tooltips: \"tooltips\"\n    },\n    outputs: {\n      textCopy: \"textCopy\"\n    },\n    exportAs: [\"nzTextCopy\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[\"type\", \"button\", \"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n    template: function NzTextCopyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() {\n          return ctx.onClick();\n        });\n        ɵngcc0.ɵɵtemplate(1, NzTextCopyComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n        ɵngcc0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.copedTooltip : ctx.copyTooltip);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.copied ? ctx.copedIcon : ctx.copyIcon);\n      }\n    },\n    directives: [ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzTextCopyComponent;\n}();\n\nvar NzTextEditComponent = /*@__PURE__*/function () {\n  var NzTextEditComponent = /*#__PURE__*/function () {\n    function NzTextEditComponent(zone, host, cdr, i18n) {\n      _classCallCheck(this, NzTextEditComponent);\n\n      this.zone = zone;\n      this.host = host;\n      this.cdr = cdr;\n      this.i18n = i18n;\n      this.editing = false;\n      this.destroy$ = new Subject();\n      this.icon = 'edit';\n      this.startEditing = new EventEmitter();\n      this.endEditing = new EventEmitter(true);\n      this.nativeElement = this.host.nativeElement;\n    }\n\n    _createClass(NzTextEditComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this3 = this;\n\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this3.locale = _this3.i18n.getLocaleData('Text');\n\n          _this3.cdr.markForCheck();\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n      }\n    }, {\n      key: \"confirm\",\n      value: function confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n      }\n    }, {\n      key: \"onInput\",\n      value: function onInput(event) {\n        var target = event.target;\n        this.currentText = target.value;\n      }\n    }, {\n      key: \"onEnter\",\n      value: function onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n      }\n    }, {\n      key: \"onCancel\",\n      value: function onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n      }\n    }, {\n      key: \"focusAndSetValue\",\n      value: function focusAndSetValue() {\n        var _this4 = this;\n\n        this.zone.onStable.pipe(take(1), takeUntil(this.destroy$)).subscribe(function () {\n          var _a;\n\n          if ((_a = _this4.textarea) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n            _this4.textarea.nativeElement.focus();\n\n            _this4.textarea.nativeElement.value = _this4.currentText || '';\n\n            _this4.autosizeDirective.resizeToFitContent();\n\n            _this4.cdr.markForCheck();\n          }\n        });\n      }\n    }]);\n\n    return NzTextEditComponent;\n  }();\n\n  NzTextEditComponent.ɵfac = function NzTextEditComponent_Factory(t) {\n    return new (t || NzTextEditComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService));\n  };\n\n  NzTextEditComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTextEditComponent,\n    selectors: [[\"nz-text-edit\"]],\n    viewQuery: function NzTextEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(NzAutosizeDirective, 1);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n      }\n    },\n    inputs: {\n      icon: \"icon\",\n      text: \"text\",\n      tooltip: \"tooltip\"\n    },\n    outputs: {\n      startEditing: \"startEditing\",\n      endEditing: \"endEditing\"\n    },\n    exportAs: [\"nzTextEdit\"],\n    decls: 2,\n    vars: 2,\n    consts: [[\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", \"class\", \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"input\", \"blur\", \"keydown.esc\", \"keydown.enter\"], [\"textarea\", \"\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"enter\"]],\n    template: function NzTextEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTextEditComponent_button_0_Template, 2, 2, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzTextEditComponent_ng_container_1_Template, 5, 0, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editing);\n      }\n    },\n    directives: [ɵngcc7.NgIf, ɵngcc3.NzTransButtonDirective, ɵngcc4.NzTooltipDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective, ɵngcc8.NzInputDirective, ɵngcc8.NzAutosizeDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzTextEditComponent;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME = 'typography';\nvar EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\n\nvar NzTypographyComponent = /*@__PURE__*/function () {\n  var NzTypographyComponent = /*#__PURE__*/function () {\n    function NzTypographyComponent(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n      _classCallCheck(this, NzTypographyComponent);\n\n      this.nzConfigService = nzConfigService;\n      this.host = host;\n      this.cdr = cdr;\n      this.viewContainerRef = viewContainerRef;\n      this.renderer = renderer;\n      this.platform = platform;\n      this.i18n = i18n;\n      this.resizeService = resizeService;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzCopyable = false;\n      this.nzEditable = false;\n      this.nzDisabled = false;\n      this.nzExpandable = false;\n      this.nzEllipsis = false;\n      this.nzCopyTooltips = undefined;\n      this.nzCopyIcons = ['copy', 'check'];\n      this.nzEditTooltip = undefined;\n      this.nzEditIcon = 'edit';\n      this.nzEllipsisRows = 1;\n      this.nzContentChange = new EventEmitter();\n      this.nzCopy = new EventEmitter();\n      this.nzExpandChange = new EventEmitter(); // This is not a two-way binding output with {@link nzEllipsis}\n\n      this.nzOnEllipsis = new EventEmitter();\n      this.expandableBtnElementCache = null;\n      this.editing = false;\n      this.cssEllipsis = false;\n      this.isEllipsis = true;\n      this.expanded = false;\n      this.ellipsisStr = '...';\n      this.dir = 'ltr';\n      this.viewInit = false;\n      this.rfaId = -1;\n      this.destroy$ = new Subject();\n      this.windowResizeSubscription = Subscription.EMPTY;\n      this.document = document;\n    }\n\n    _createClass(NzTypographyComponent, [{\n      key: \"hasEllipsisObservers\",\n      get: function get() {\n        return this.nzOnEllipsis.observers.length > 0;\n      }\n    }, {\n      key: \"canCssEllipsis\",\n      get: function get() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n      }\n    }, {\n      key: \"hasOperationsWithEllipsis\",\n      get: function get() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n      }\n    }, {\n      key: \"copyText\",\n      get: function get() {\n        return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n      }\n    }, {\n      key: \"onTextCopy\",\n      value: function onTextCopy(text) {\n        this.nzCopy.emit(text);\n      }\n    }, {\n      key: \"onStartEditing\",\n      value: function onStartEditing() {\n        this.editing = true;\n      }\n    }, {\n      key: \"onEndEditing\",\n      value: function onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n\n        if (this.nzContent === text) {\n          this.renderOnNextFrame();\n        }\n\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"onExpand\",\n      value: function onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n      }\n    }, {\n      key: \"canUseCSSEllipsis\",\n      value: function canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n          return false;\n        } // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n\n\n        if (this.hasEllipsisObservers) {\n          return false;\n        }\n\n        if (this.nzEllipsisRows === 1) {\n          return isStyleSupport('textOverflow');\n        } else {\n          return isStyleSupport('webkitLineClamp');\n        }\n      }\n    }, {\n      key: \"renderOnNextFrame\",\n      value: function renderOnNextFrame() {\n        var _this5 = this;\n\n        cancelRequestAnimationFrame(this.rfaId);\n\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n          return;\n        }\n\n        this.rfaId = reqAnimFrame(function () {\n          _this5.syncEllipsis();\n        });\n      }\n    }, {\n      key: \"getOriginContentViewRef\",\n      value: function getOriginContentViewRef() {\n        var _this6 = this;\n\n        var viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n          content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n          viewRef: viewRef,\n          removeView: function removeView() {\n            _this6.viewContainerRef.remove(_this6.viewContainerRef.indexOf(viewRef));\n          }\n        };\n      }\n    }, {\n      key: \"syncEllipsis\",\n      value: function syncEllipsis() {\n        var _this7 = this;\n\n        if (this.cssEllipsis) {\n          return;\n        }\n\n        var _this$getOriginConten = this.getOriginContentViewRef(),\n            viewRef = _this$getOriginConten.viewRef,\n            removeView = _this$getOriginConten.removeView;\n\n        var fixedNodes = [this.textCopyRef, this.textEditRef].filter(function (e) {\n          return e && e.nativeElement;\n        }).map(function (e) {\n          return e.nativeElement;\n        });\n        var expandableBtnElement = this.getExpandableBtnElement();\n\n        if (expandableBtnElement) {\n          fixedNodes.push(expandableBtnElement);\n        }\n\n        var _measure = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix),\n            contentNodes = _measure.contentNodes,\n            text = _measure.text,\n            ellipsis = _measure.ellipsis;\n\n        removeView();\n        this.ellipsisText = text;\n\n        if (ellipsis !== this.isEllipsis) {\n          this.isEllipsis = ellipsis;\n          this.nzOnEllipsis.emit(ellipsis);\n        }\n\n        var ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n\n        while (ellipsisContainerNativeElement.firstChild) {\n          this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n\n        contentNodes.forEach(function (n) {\n          _this7.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n      } // Need to create the element for calculation size before view init\n\n    }, {\n      key: \"getExpandableBtnElement\",\n      value: function getExpandableBtnElement() {\n        if (this.nzExpandable) {\n          var expandText = this.locale ? this.locale.expand : '';\n          var cache = this.expandableBtnElementCache;\n\n          if (!cache || cache.innerText === expandText) {\n            var el = this.document.createElement('a');\n            el.className = EXPAND_ELEMENT_CLASSNAME;\n            el.innerText = expandText;\n            this.expandableBtnElementCache = el;\n          }\n\n          return this.expandableBtnElementCache;\n        } else {\n          this.expandableBtnElementCache = null;\n          return null;\n        }\n      }\n    }, {\n      key: \"renderAndSubscribeWindowResize\",\n      value: function renderAndSubscribeWindowResize() {\n        var _this8 = this;\n\n        if (this.platform.isBrowser) {\n          this.windowResizeSubscription.unsubscribe();\n          this.cssEllipsis = this.canUseCSSEllipsis();\n          this.renderOnNextFrame();\n          this.windowResizeSubscription = this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(function () {\n            return _this8.renderOnNextFrame();\n          });\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this9 = this;\n\n        var _a;\n\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this9.locale = _this9.i18n.getLocaleData('Text');\n\n          _this9.cdr.markForCheck();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n          _this9.dir = direction;\n\n          _this9.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzCopyable = changes.nzCopyable,\n            nzEditable = changes.nzEditable,\n            nzExpandable = changes.nzExpandable,\n            nzEllipsis = changes.nzEllipsis,\n            nzContent = changes.nzContent,\n            nzEllipsisRows = changes.nzEllipsisRows,\n            nzSuffix = changes.nzSuffix;\n\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n          if (this.nzEllipsis) {\n            if (this.expanded) {\n              this.windowResizeSubscription.unsubscribe();\n            } else {\n              this.renderAndSubscribeWindowResize();\n            }\n          }\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n      }\n    }]);\n\n    return NzTypographyComponent;\n  }();\n\n  NzTypographyComponent.ɵfac = function NzTypographyComponent_Factory(t) {\n    return new (t || NzTypographyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc9.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc11.NzResizeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.Directionality, 8));\n  };\n\n  NzTypographyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTypographyComponent,\n    selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]],\n    viewQuery: function NzTypographyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NzTextEditComponent, 1);\n        ɵngcc0.ɵɵviewQuery(NzTextCopyComponent, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n      }\n    },\n    hostVars: 24,\n    hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n        ɵngcc0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-rtl\", ctx.dir === \"rtl\")(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-success\", ctx.nzType === \"success\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n      }\n    },\n    inputs: {\n      nzCopyable: \"nzCopyable\",\n      nzEditable: \"nzEditable\",\n      nzDisabled: \"nzDisabled\",\n      nzExpandable: \"nzExpandable\",\n      nzEllipsis: \"nzEllipsis\",\n      nzCopyTooltips: \"nzCopyTooltips\",\n      nzCopyIcons: \"nzCopyIcons\",\n      nzEditTooltip: \"nzEditTooltip\",\n      nzEditIcon: \"nzEditIcon\",\n      nzEllipsisRows: \"nzEllipsisRows\",\n      nzContent: \"nzContent\",\n      nzType: \"nzType\",\n      nzCopyText: \"nzCopyText\",\n      nzSuffix: \"nzSuffix\"\n    },\n    outputs: {\n      nzContentChange: \"nzContentChange\",\n      nzCopy: \"nzCopy\",\n      nzExpandChange: \"nzExpandChange\",\n      nzOnEllipsis: \"nzOnEllipsis\"\n    },\n    exportAs: [\"nzTypography\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c5,\n    decls: 5,\n    vars: 3,\n    consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\", 4, \"ngIf\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"jsEllipsis\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ellipsisContainer\", \"\"], [\"class\", \"ant-typography-expand\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-typography-expand\", 3, \"click\"], [\"expandable\", \"\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\"]],\n    template: function NzTypographyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_Template, 4, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, NzTypographyComponent_nz_text_edit_3_Template, 1, 3, \"nz-text-edit\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzTypographyComponent_nz_text_copy_4_Template, 1, 3, \"nz-text-copy\", 3);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzEditable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzCopyable && !ctx.editing);\n      }\n    },\n    directives: [ɵngcc7.NgIf, ɵngcc7.NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Array)], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n\n  __decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\n\n  return NzTypographyComponent;\n}();\n\nvar NzTypographyModule = /*@__PURE__*/function () {\n  var NzTypographyModule = function NzTypographyModule() {\n    _classCallCheck(this, NzTypographyModule);\n  };\n\n  NzTypographyModule.ɵfac = function NzTypographyModule_Factory(t) {\n    return new (t || NzTypographyModule)();\n  };\n\n  NzTypographyModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzTypographyModule\n  });\n  NzTypographyModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule, NzOutletModule], PlatformModule]\n  });\n  return NzTypographyModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTypographyModule, {\n    declarations: function declarations() {\n      return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, NzIconModule, NzToolTipModule, NzInputModule, NzI18nModule, NzTransButtonModule, ClipboardModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule }; //# sourceMappingURL=ng-zorro-antd-typography.js.map","map":null,"metadata":{},"sourceType":"module"}