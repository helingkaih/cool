{"ast":null,"code":"import _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Optional, Input, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { __rest, __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { isNotNil, InputNumber } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r5.icon);\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var formatter_r9 = ctx.$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", formatter_r9(ctx_r8.nzPercent), \" \");\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r7.formatter)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r7.nzPercent));\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_ng_template_0_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_ng_template_0_span_0_ng_template_2_Template, 1, 4, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r6 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r4.status === \"exception\" || ctx_r4.status === \"success\") && !ctx_r4.nzFormat)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_Template, 4, 2, \"span\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzShowInfo);\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r14.nzSuccessPercent, \"%\")(\"border-radius\", ctx_r14.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"height\", ctx_r14.strokeWidth, \"px\");\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template, 1, 6, \"div\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r12.nzPercent, \"%\")(\"border-radius\", ctx_r12.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"background\", !ctx_r12.isGradient ? ctx_r12.nzStrokeColor : null)(\"background-image\", ctx_r12.isGradient ? ctx_r12.lineGradient : null)(\"height\", ctx_r12.strokeWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.nzSuccessPercent || ctx_r12.nzSuccessPercent === 0);\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_ng_template_2_Template(rf, ctx) {}\n\nfunction NzProgressComponent_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_div_1_Template, 4, 11, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_ng_container_1_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r10.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction NzProgressComponent_div_3_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 20);\n  }\n\n  if (rf & 2) {\n    var step_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngStyle\", step_r17);\n  }\n}\n\nfunction NzProgressComponent_div_3_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzProgressComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_div_2_div_1_Template, 1, 1, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r11.steps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction NzProgressComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_Template, 3, 2, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isSteps);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    var i_r23 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"offset\", i_r23.offset)(\"stop-color\", i_r23.color);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_defs_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"defs\");\n    ɵngcc0.ɵɵelementStart(1, \"linearGradient\", 24);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template, 1, 2, \"stop\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", \"gradient-\" + ctx_r19.gradientId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.circleGradient);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_path_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"path\", 26);\n  }\n\n  if (rf & 2) {\n    var p_r24 = ctx.$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", p_r24.strokePathStyle);\n    ɵngcc0.ɵɵattribute(\"d\", ctx_r20.pathString)(\"stroke-linecap\", ctx_r20.nzStrokeLinecap)(\"stroke\", p_r24.stroke)(\"stroke-width\", ctx_r20.nzPercent ? ctx_r20.strokeWidth : 0);\n  }\n}\n\nfunction NzProgressComponent_div_4_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n  }\n}\n\nfunction NzProgressComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 21);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2_Template, 3, 2, \"defs\", 2);\n    ɵngcc0.ɵɵelement(3, \"path\", 22);\n    ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4__svg_path_4_Template, 1, 5, \"path\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzProgressComponent_div_4_ng_template_5_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r3.nzWidth, \"px\")(\"height\", ctx_r3.nzWidth, \"px\")(\"font-size\", ctx_r3.nzWidth * 0.15 + 6, \"px\");\n    ɵngcc0.ɵɵclassProp(\"ant-progress-circle-gradient\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r3.trailPathStyle);\n    ɵngcc0.ɵɵattribute(\"stroke-width\", ctx_r3.strokeWidth)(\"d\", ctx_r3.pathString);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.progressCirclePath)(\"ngForTrackBy\", ctx_r3.trackByFn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction stripPercentToNumber(percent) {\n  return +percent.replace('%', '');\n}\n\nvar sortGradient = function sortGradient(gradients) {\n  var tempArr = [];\n  Object.keys(gradients).forEach(function (key) {\n    var value = gradients[key];\n    var formatKey = stripPercentToNumber(key);\n\n    if (!isNaN(formatKey)) {\n      tempArr.push({\n        key: formatKey,\n        value: value\n      });\n    }\n  });\n  tempArr = tempArr.sort(function (a, b) {\n    return a.key - b.key;\n  });\n  return tempArr;\n};\n\nvar handleCircleGradient = function handleCircleGradient(strokeColor) {\n  return sortGradient(strokeColor).map(function (_ref) {\n    var key = _ref.key,\n        value = _ref.value;\n    return {\n      offset: \"\".concat(key, \"%\"),\n      color: value\n    };\n  });\n};\n\nvar handleLinearGradient = function handleLinearGradient(strokeColor) {\n  var _strokeColor$from = strokeColor.from,\n      from = _strokeColor$from === void 0 ? '#1890ff' : _strokeColor$from,\n      _strokeColor$to = strokeColor.to,\n      to = _strokeColor$to === void 0 ? '#1890ff' : _strokeColor$to,\n      _strokeColor$directio = strokeColor.direction,\n      direction = _strokeColor$directio === void 0 ? 'to right' : _strokeColor$directio,\n      rest = __rest(strokeColor, [\"from\", \"to\", \"direction\"]);\n\n  if (Object.keys(rest).length !== 0) {\n    var sortedGradients = sortGradient(rest).map(function (_ref2) {\n      var key = _ref2.key,\n          value = _ref2.value;\n      return \"\".concat(value, \" \").concat(key, \"%\");\n    }).join(', ');\n    return \"linear-gradient(\".concat(direction, \", \").concat(sortedGradients, \")\");\n  }\n\n  return \"linear-gradient(\".concat(direction, \", \").concat(from, \", \").concat(to, \")\");\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar gradientIdSeed = 0;\nvar NZ_CONFIG_MODULE_NAME = 'progress';\nvar statusIconNameMap = new Map([['success', 'check'], ['exception', 'close']]);\nvar statusColorMap = new Map([['normal', '#108ee9'], ['exception', '#ff5500'], ['success', '#87d068']]);\n\nvar defaultFormatter = function defaultFormatter(p) {\n  return \"\".concat(p, \"%\");\n};\n\nvar ɵ0 = defaultFormatter;\n\nvar NzProgressComponent = /*@__PURE__*/function () {\n  var NzProgressComponent = /*#__PURE__*/function () {\n    function NzProgressComponent(cdr, nzConfigService, directionality) {\n      _classCallCheck(this, NzProgressComponent);\n\n      this.cdr = cdr;\n      this.nzConfigService = nzConfigService;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzShowInfo = true;\n      this.nzWidth = 132;\n      this.nzStrokeColor = undefined;\n      this.nzSize = 'default';\n      this.nzPercent = 0;\n      this.nzStrokeWidth = undefined;\n      this.nzGapDegree = undefined;\n      this.nzType = 'line';\n      this.nzGapPosition = 'top';\n      this.nzStrokeLinecap = 'round';\n      this.nzSteps = 0;\n      this.steps = [];\n      /** Gradient style when `nzType` is `line`. */\n\n      this.lineGradient = null;\n      /** If user uses gradient color. */\n\n      this.isGradient = false;\n      /** If the linear progress is a step progress. */\n\n      this.isSteps = false;\n      /**\n       * Each progress whose `nzType` is circle or dashboard should have unique id to\n       * define `<linearGradient>`.\n       */\n\n      this.gradientId = gradientIdSeed++;\n      /** Paths to rendered in the template. */\n\n      this.progressCirclePath = [];\n      this.trailPathStyle = null;\n      this.dir = 'ltr';\n\n      this.trackByFn = function (index) {\n        return \"\".concat(index);\n      };\n\n      this.cachedStatus = 'normal';\n      this.inferredStatus = 'normal';\n      this.destroy$ = new Subject();\n    }\n\n    _createClass(NzProgressComponent, [{\n      key: \"formatter\",\n      get: function get() {\n        return this.nzFormat || defaultFormatter;\n      }\n    }, {\n      key: \"status\",\n      get: function get() {\n        return this.nzStatus || this.inferredStatus;\n      }\n    }, {\n      key: \"strokeWidth\",\n      get: function get() {\n        return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\n      }\n    }, {\n      key: \"isCircleStyle\",\n      get: function get() {\n        return this.nzType === 'circle' || this.nzType === 'dashboard';\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzSteps = changes.nzSteps,\n            nzGapPosition = changes.nzGapPosition,\n            nzStrokeLinecap = changes.nzStrokeLinecap,\n            nzStrokeColor = changes.nzStrokeColor,\n            nzGapDegree = changes.nzGapDegree,\n            nzType = changes.nzType,\n            nzStatus = changes.nzStatus,\n            nzPercent = changes.nzPercent,\n            nzSuccessPercent = changes.nzSuccessPercent,\n            nzStrokeWidth = changes.nzStrokeWidth;\n\n        if (nzStatus) {\n          this.cachedStatus = this.nzStatus || this.cachedStatus;\n        }\n\n        if (nzPercent || nzSuccessPercent) {\n          var fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\n\n          if (fillAll) {\n            if (isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent >= 100 || this.nzSuccessPercent === undefined) {\n              this.inferredStatus = 'success';\n            }\n          } else {\n            this.inferredStatus = this.cachedStatus;\n          }\n        }\n\n        if (nzStatus || nzPercent || nzSuccessPercent || nzStrokeColor) {\n          this.updateIcon();\n        }\n\n        if (nzStrokeColor) {\n          this.setStrokeColor();\n        }\n\n        if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor || nzStrokeColor) {\n          this.getCirclePaths();\n        }\n\n        if (nzPercent || nzSteps || nzStrokeWidth) {\n          this.isSteps = this.nzSteps > 0;\n\n          if (this.isSteps) {\n            this.getSteps();\n          }\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        var _a;\n\n        this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this.updateIcon();\n\n          _this.setStrokeColor();\n\n          _this.getCirclePaths();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n          _this.dir = direction;\n\n          _this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }, {\n      key: \"updateIcon\",\n      value: function updateIcon() {\n        var ret = statusIconNameMap.get(this.status);\n        this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\n      }\n      /**\n       * Calculate step render configs.\n       */\n\n    }, {\n      key: \"getSteps\",\n      value: function getSteps() {\n        var current = Math.floor(this.nzSteps * (this.nzPercent / 100));\n        var stepWidth = this.nzSize === 'small' ? 2 : 14;\n        var steps = [];\n\n        for (var i = 0; i < this.nzSteps; i++) {\n          var color = void 0;\n\n          if (i <= current - 1) {\n            color = this.nzStrokeColor;\n          }\n\n          var stepStyle = {\n            backgroundColor: \"\".concat(color),\n            width: \"\".concat(stepWidth, \"px\"),\n            height: \"\".concat(this.strokeWidth, \"px\")\n          };\n          steps.push(stepStyle);\n        }\n\n        this.steps = steps;\n      }\n      /**\n       * Calculate paths when the type is circle or dashboard.\n       */\n\n    }, {\n      key: \"getCirclePaths\",\n      value: function getCirclePaths() {\n        var _this2 = this;\n\n        if (!this.isCircleStyle) {\n          return;\n        }\n\n        var values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent, this.nzPercent] : [this.nzPercent]; // Calculate shared styles.\n\n        var radius = 50 - this.strokeWidth / 2;\n        var gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\n        var len = Math.PI * 2 * radius;\n        var gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\n        var beginPositionX = 0;\n        var beginPositionY = -radius;\n        var endPositionX = 0;\n        var endPositionY = radius * -2;\n\n        switch (gapPosition) {\n          case 'left':\n            beginPositionX = -radius;\n            beginPositionY = 0;\n            endPositionX = radius * 2;\n            endPositionY = 0;\n            break;\n\n          case 'right':\n            beginPositionX = radius;\n            beginPositionY = 0;\n            endPositionX = radius * -2;\n            endPositionY = 0;\n            break;\n\n          case 'bottom':\n            beginPositionY = radius;\n            endPositionY = radius * 2;\n            break;\n\n          default:\n        }\n\n        this.pathString = \"M 50,50 m \".concat(beginPositionX, \",\").concat(beginPositionY, \"\\n       a \").concat(radius, \",\").concat(radius, \" 0 1 1 \").concat(endPositionX, \",\").concat(-endPositionY, \"\\n       a \").concat(radius, \",\").concat(radius, \" 0 1 1 \").concat(-endPositionX, \",\").concat(endPositionY);\n        this.trailPathStyle = {\n          strokeDasharray: \"\".concat(len - gapDegree, \"px \").concat(len, \"px\"),\n          strokeDashoffset: \"-\".concat(gapDegree / 2, \"px\"),\n          transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\n        }; // Calculate styles for each path.\n\n        this.progressCirclePath = values.map(function (value, index) {\n          var isSuccessPercent = values.length === 2 && index === 0;\n          return {\n            stroke: _this2.isGradient && !isSuccessPercent ? \"url(#gradient-\".concat(_this2.gradientId, \")\") : null,\n            strokePathStyle: {\n              stroke: !_this2.isGradient ? isSuccessPercent ? statusColorMap.get('success') : _this2.nzStrokeColor : null,\n              transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\n              strokeDasharray: \"\".concat((value || 0) / 100 * (len - gapDegree), \"px \").concat(len, \"px\"),\n              strokeDashoffset: \"-\".concat(gapDegree / 2, \"px\")\n            }\n          };\n        }).reverse();\n      }\n    }, {\n      key: \"setStrokeColor\",\n      value: function setStrokeColor() {\n        var color = this.nzStrokeColor;\n        var isGradient = this.isGradient = !!color && typeof color !== 'string';\n\n        if (isGradient && !this.isCircleStyle) {\n          this.lineGradient = handleLinearGradient(color);\n        } else if (isGradient && this.isCircleStyle) {\n          this.circleGradient = handleCircleGradient(this.nzStrokeColor);\n        } else {\n          this.lineGradient = null;\n          this.circleGradient = [];\n        }\n      }\n    }]);\n\n    return NzProgressComponent;\n  }();\n\n  NzProgressComponent.ɵfac = function NzProgressComponent_Factory(t) {\n    return new (t || NzProgressComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n  };\n\n  NzProgressComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzProgressComponent,\n    selectors: [[\"nz-progress\"]],\n    inputs: {\n      nzShowInfo: \"nzShowInfo\",\n      nzWidth: \"nzWidth\",\n      nzStrokeColor: \"nzStrokeColor\",\n      nzSize: \"nzSize\",\n      nzPercent: \"nzPercent\",\n      nzStrokeWidth: \"nzStrokeWidth\",\n      nzGapDegree: \"nzGapDegree\",\n      nzType: \"nzType\",\n      nzGapPosition: \"nzGapPosition\",\n      nzStrokeLinecap: \"nzStrokeLinecap\",\n      nzSteps: \"nzSteps\",\n      nzFormat: \"nzFormat\",\n      nzSuccessPercent: \"nzSuccessPercent\",\n      nzStatus: \"nzStatus\"\n    },\n    exportAs: [\"nzProgress\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 15,\n    consts: [[\"progressInfoTemplate\", \"\"], [3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"ant-progress-inner\", 3, \"width\", \"height\", \"fontSize\", \"ant-progress-circle-gradient\", 4, \"ngIf\"], [\"class\", \"ant-progress-text\", 4, \"ngIf\"], [1, \"ant-progress-text\"], [4, \"ngIf\", \"ngIfElse\"], [\"formatTemplate\", \"\"], [\"nz-icon\", \"\", 3, \"nzType\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"class\", \"ant-progress-steps-outer\", 4, \"ngIf\"], [\"class\", \"ant-progress-outer\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-progress-outer\"], [1, \"ant-progress-inner\"], [1, \"ant-progress-bg\"], [\"class\", \"ant-progress-success-bg\", 3, \"width\", \"border-radius\", \"height\", 4, \"ngIf\"], [1, \"ant-progress-success-bg\"], [1, \"ant-progress-steps-outer\"], [\"class\", \"ant-progress-steps-item\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-progress-steps-item\", 3, \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", 1, \"ant-progress-circle\"], [\"stroke\", \"#f3f3f3\", \"fill-opacity\", \"0\", 1, \"ant-progress-circle-trail\", 3, \"ngStyle\"], [\"class\", \"ant-progress-circle-path\", \"fill-opacity\", \"0\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"x1\", \"100%\", \"y1\", \"0%\", \"x2\", \"0%\", \"y2\", \"0%\", 3, \"id\"], [4, \"ngFor\", \"ngForOf\"], [\"fill-opacity\", \"0\", 1, \"ant-progress-circle-path\", 3, \"ngStyle\"]],\n    template: function NzProgressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_Template, 3, 2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4_Template, 6, 15, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"ant-progress-line\", ctx.nzType == \"line\")(\"ant-progress-small\", ctx.nzSize == \"small\")(\"ant-progress-show-info\", ctx.nzShowInfo)(\"ant-progress-circle\", ctx.isCircleStyle)(\"ant-progress-steps\", ctx.isSteps)(\"ant-progress-rtl\", ctx.dir === \"rtl\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-progress ant-progress-status-\" + ctx.status);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzType === \"line\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCircleStyle);\n      }\n    },\n    directives: [ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgForOf, ɵngcc3.NgStyle],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Boolean)], NzProgressComponent.prototype, \"nzShowInfo\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzProgressComponent.prototype, \"nzStrokeColor\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzSize\", void 0);\n\n  __decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzSuccessPercent\", void 0);\n\n  __decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzPercent\", void 0);\n\n  __decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzStrokeWidth\", void 0);\n\n  __decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzGapDegree\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzGapPosition\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzStrokeLinecap\", void 0);\n\n  __decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzSteps\", void 0);\n\n  return NzProgressComponent;\n}();\n\nvar NzProgressModule = /*@__PURE__*/function () {\n  var NzProgressModule = function NzProgressModule() {\n    _classCallCheck(this, NzProgressModule);\n  };\n\n  NzProgressModule.ɵfac = function NzProgressModule_Factory(t) {\n    return new (t || NzProgressModule)();\n  };\n\n  NzProgressModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzProgressModule\n  });\n  NzProgressModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, NzIconModule, NzOutletModule]]\n  });\n  return NzProgressModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzProgressModule, {\n    declarations: function declarations() {\n      return [NzProgressComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, NzIconModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzProgressComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzProgressComponent, NzProgressModule }; //# sourceMappingURL=ng-zorro-antd-progress.js.map","map":null,"metadata":{},"sourceType":"module"}