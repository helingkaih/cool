{"ast":null,"code":"import _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, BACKSPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ElementRef, Renderer2, Input, Injectable, EventEmitter, forwardRef, Optional, Host, ViewChild, ViewChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_CASCADER_POSITIONS, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { isNotNil, arraysEqual, toArray, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/highlight';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc6 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc7 from '@angular/cdk/bidi';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc9 from '@angular/cdk/overlay';\nimport * as ɵngcc10 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc11 from 'ng-zorro-antd/input';\nimport * as ɵngcc12 from '@angular/forms';\nimport * as ɵngcc13 from 'ng-zorro-antd/empty';\nvar _c0 = [\"nz-cascader-option\", \"\"];\n\nfunction NzCascaderOptionComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction NzCascaderOptionComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.optionTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.option, ctx_r0.columnIndex));\n  }\n}\n\nfunction NzCascaderOptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 4);\n    ɵngcc0.ɵɵpipe(1, \"nzHighlight\");\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind4(1, 1, ctx_r2.optionLabel, ctx_r2.highlightText, \"g\", \"ant-cascader-menu-item-keyword\"), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzCascaderOptionComponent_span_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzCascaderOptionComponent_span_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r8.expandIcon);\n  }\n}\n\nfunction NzCascaderOptionComponent_span_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzCascaderOptionComponent_span_3_ng_template_2_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r7.expandIcon);\n  }\n}\n\nfunction NzCascaderOptionComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderOptionComponent_span_3_i_1_Template, 1, 0, \"i\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzCascaderOptionComponent_span_3_ng_template_2_Template, 1, 1, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r6 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.option.loading)(\"ngIfElse\", _r6);\n  }\n}\n\nvar _c2 = [\"input\"];\nvar _c3 = [\"menu\"];\n\nfunction NzCascaderComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NzCascaderComponent_div_3_i_3_Template_i_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.clearSelection($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_container_4_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-picker-arrow-expand\", ctx_r13.menuVisible);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r13.nzSuffixIcon);\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderComponent_div_3_ng_container_4_i_1_Template, 1, 3, \"i\", 13);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.nzShowArrow && !ctx_r6.isLoading);\n  }\n}\n\nfunction NzCascaderComponent_div_3_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 15);\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.labelRenderText);\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_template_8_ng_template_0_Template(rf, ctx) {}\n\nfunction NzCascaderComponent_div_3_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzCascaderComponent_div_3_ng_template_8_ng_template_0_Template, 0, 0, \"ng-template\", 16);\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.nzLabelRender)(\"ngTemplateOutletContext\", ctx_r10.labelRenderContext);\n  }\n}\n\nfunction NzCascaderComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzCascaderComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.inputValue = $event;\n    })(\"blur\", function NzCascaderComponent_div_3_Template_input_blur_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.handleInputBlur();\n    })(\"focus\", function NzCascaderComponent_div_3_Template_input_focus_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.handleInputFocus();\n    })(\"change\", function NzCascaderComponent_div_3_Template_input_change_1_listener($event) {\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_div_3_i_3_Template, 1, 0, \"i\", 6);\n    ɵngcc0.ɵɵtemplate(4, NzCascaderComponent_div_3_ng_container_4_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(5, NzCascaderComponent_div_3_i_5_Template, 1, 0, \"i\", 8);\n    ɵngcc0.ɵɵelementStart(6, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(7, NzCascaderComponent_div_3_ng_container_7_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(8, NzCascaderComponent_div_3_ng_template_8_Template, 1, 2, \"ng-template\", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r9 = ɵngcc0.ɵɵreference(9);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-input-disabled\", ctx_r2.nzDisabled)(\"ant-cascader-input-lg\", ctx_r2.nzSize === \"large\")(\"ant-cascader-input-sm\", ctx_r2.nzSize === \"small\");\n    ɵngcc0.ɵɵproperty(\"readonly\", !ctx_r2.nzShowSearch)(\"disabled\", ctx_r2.nzDisabled)(\"nzSize\", ctx_r2.nzSize)(\"ngModel\", ctx_r2.inputValue);\n    ɵngcc0.ɵɵattribute(\"autoComplete\", \"off\")(\"placeholder\", ctx_r2.showPlaceholder ? ctx_r2.nzPlaceHolder || (ctx_r2.locale == null ? null : ctx_r2.locale.placeholder) : null)(\"autofocus\", ctx_r2.nzAutoFocus ? \"autofocus\" : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.clearIconVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzSuffixIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-picker-show-search\", !!ctx_r2.nzShowSearch)(\"ant-cascader-picker-focused\", !!ctx_r2.nzShowSearch && ctx_r2.isFocused && !ctx_r2.inputValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.isLabelRenderTemplate)(\"ngIfElse\", _r9);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 21);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 22);\n    ɵngcc0.ɵɵelement(2, \"nz-embed-empty\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r21.dropdownWidthStyle)(\"height\", ctx_r21.dropdownHeightStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzComponentName\", \"cascader\")(\"specificContent\", ctx_r21.nzNotFoundContent);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 27);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_mouseenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var option_r28 = ctx.$implicit;\n      var i_r26 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r29 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r29.onOptionMouseEnter(option_r28, i_r26, $event);\n    })(\"mouseleave\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_mouseleave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var option_r28 = ctx.$implicit;\n      var i_r26 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r32 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r32.onOptionMouseLeave(option_r28, i_r26, $event);\n    })(\"click\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var option_r28 = ctx.$implicit;\n      var i_r26 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r34 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r34.onOptionClick(option_r28, i_r26, $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r28 = ctx.$implicit;\n    var i_r26 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"expandIcon\", ctx_r27.nzExpandIcon)(\"columnIndex\", i_r26)(\"nzLabelProperty\", ctx_r27.nzLabelProperty)(\"optionTemplate\", ctx_r27.nzOptionRender)(\"activated\", ctx_r27.isOptionActivated(option_r28, i_r26))(\"highlightText\", ctx_r27.inSearchingMode ? ctx_r27.inputValue : \"\")(\"option\", option_r28)(\"dir\", ctx_r27.dir);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 25);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template, 1, 8, \"li\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var options_r25 = ctx.$implicit;\n    var ctx_r24 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r24.dropdownHeightStyle)(\"width\", ctx_r24.dropdownWidthStyle);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r24.menuColumnCls);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", options_r25);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzCascaderComponent_ng_template_5_ng_template_3_ul_0_Template, 2, 6, \"ul\", 24);\n  }\n\n  if (rf & 2) {\n    var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r23.cascaderService.columns);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r38 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17, 18);\n    ɵngcc0.ɵɵlistener(\"mouseleave\", function NzCascaderComponent_ng_template_5_Template_div_mouseleave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r38);\n      var ctx_r37 = ɵngcc0.ɵɵnextContext();\n      return ctx_r37.onTriggerMouseLeave($event);\n    });\n    ɵngcc0.ɵɵtemplate(2, NzCascaderComponent_ng_template_5_ul_2_Template, 3, 6, \"ul\", 19);\n    ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_ng_template_5_ng_template_3_Template, 1, 1, \"ng-template\", null, 20, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r22 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-menu-rtl\", ctx_r3.dir === \"rtl\")(\"ant-cascader-menus-hidden\", !ctx_r3.menuVisible);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.menuCls)(\"ngStyle\", ctx_r3.nzMenuStyle)(\"@.disabled\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"@slideMotion\", \"enter\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.shouldShowEmpty)(\"ngIfElse\", _r22);\n  }\n}\n\nvar _c4 = [\"*\"];\n\nfunction isShowSearchObject(options) {\n  return typeof options !== 'boolean';\n}\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction isChildOption(o) {\n  return o.isLeaf || !o.children || !o.children.length;\n}\n\nfunction isParentOption(o) {\n  return !!o.children && !!o.children.length && !o.isLeaf;\n}\n\nvar NzCascaderOptionComponent = /*@__PURE__*/function () {\n  var NzCascaderOptionComponent = /*#__PURE__*/function () {\n    function NzCascaderOptionComponent(cdr, elementRef, renderer) {\n      _classCallCheck(this, NzCascaderOptionComponent);\n\n      this.cdr = cdr;\n      this.optionTemplate = null;\n      this.activated = false;\n      this.nzLabelProperty = 'label';\n      this.expandIcon = '';\n      this.dir = 'ltr';\n      renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n      this.nativeElement = elementRef.nativeElement;\n    }\n\n    _createClass(NzCascaderOptionComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.expandIcon === '' && this.dir === 'rtl') {\n          this.expandIcon = 'left';\n        } else if (this.expandIcon === '') {\n          this.expandIcon = 'right';\n        }\n      }\n    }, {\n      key: \"optionLabel\",\n      get: function get() {\n        return this.option[this.nzLabelProperty];\n      }\n    }, {\n      key: \"markForCheck\",\n      value: function markForCheck() {\n        this.cdr.markForCheck();\n      }\n    }]);\n\n    return NzCascaderOptionComponent;\n  }();\n\n  NzCascaderOptionComponent.ɵfac = function NzCascaderOptionComponent_Factory(t) {\n    return new (t || NzCascaderOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NzCascaderOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzCascaderOptionComponent,\n    selectors: [[\"\", \"nz-cascader-option\", \"\"]],\n    hostVars: 7,\n    hostBindings: function NzCascaderOptionComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.option.title || ctx.optionLabel);\n        ɵngcc0.ɵɵclassProp(\"ant-cascader-menu-item-active\", ctx.activated)(\"ant-cascader-menu-item-expand\", !ctx.option.isLeaf)(\"ant-cascader-menu-item-disabled\", ctx.option.disabled);\n      }\n    },\n    inputs: {\n      optionTemplate: \"optionTemplate\",\n      activated: \"activated\",\n      nzLabelProperty: \"nzLabelProperty\",\n      expandIcon: \"expandIcon\",\n      dir: \"dir\",\n      option: \"option\",\n      highlightText: \"highlightText\",\n      columnIndex: \"columnIndex\"\n    },\n    exportAs: [\"nzCascaderOption\"],\n    attrs: _c0,\n    decls: 4,\n    vars: 3,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultOptionTemplate\", \"\"], [\"class\", \"ant-cascader-menu-item-expand-icon\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"], [1, \"ant-cascader-menu-item-expand-icon\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"icon\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n    template: function NzCascaderOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzCascaderOptionComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_template_1_Template, 2, 6, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(3, NzCascaderOptionComponent_span_3_Template, 4, 2, \"span\", 2);\n      }\n\n      if (rf & 2) {\n        var _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optionTemplate)(\"ngIfElse\", _r1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.option.isLeaf || (ctx.option.children == null ? null : ctx.option.children.length) || ctx.option.loading);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.NzIconDirective, ɵngcc3.NzStringTemplateOutletDirective],\n    pipes: [ɵngcc4.NzHighlightPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NzCascaderOptionComponent;\n}();\n\nvar NzCascaderService = /*@__PURE__*/function () {\n  var NzCascaderService = /*#__PURE__*/function () {\n    function NzCascaderService() {\n      _classCallCheck(this, NzCascaderService);\n\n      /** Activated options in each column. */\n      this.activatedOptions = [];\n      /** An array to store cascader items arranged in different layers. */\n\n      this.columns = [];\n      /** If user has entered searching mode. */\n\n      this.inSearchingMode = false;\n      /** Selected options would be output to user. */\n\n      this.selectedOptions = [];\n      this.values = [];\n      this.$loading = new BehaviorSubject(false);\n      /**\n       * Emit an event to notify cascader it needs to redraw because activated or\n       * selected options are changed.\n       */\n\n      this.$redraw = new Subject();\n      /**\n       * Emit an event when an option gets selected.\n       * Emit true if a leaf options is selected.\n       */\n\n      this.$optionSelected = new Subject();\n      /**\n       * Emit an event to notify cascader it needs to quit searching mode.\n       * Only emit when user do select a searching option.\n       */\n\n      this.$quitSearching = new Subject();\n      /** To hold columns before entering searching mode. */\n\n      this.columnsSnapshot = [[]];\n      /** To hold activated options before entering searching mode. */\n\n      this.activatedOptionsSnapshot = [];\n    }\n    /** Return cascader options in the first layer. */\n\n\n    _createClass(NzCascaderService, [{\n      key: \"nzOptions\",\n      get: function get() {\n        return this.columns[0];\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.$redraw.complete();\n        this.$quitSearching.complete();\n        this.$optionSelected.complete();\n        this.$loading.complete();\n      }\n      /**\n       * Make sure that value matches what is displayed in the dropdown.\n       */\n\n    }, {\n      key: \"syncOptions\",\n      value: function syncOptions() {\n        var _this = this;\n\n        var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var values = this.values;\n        var hasValue = values && values.length;\n        var lastColumnIndex = values.length - 1;\n\n        var initColumnWithIndex = function initColumnWithIndex(columnIndex) {\n          var activatedOptionSetter = function activatedOptionSetter() {\n            var _ref;\n\n            var currentValue = values[columnIndex];\n\n            if (!isNotNil(currentValue)) {\n              _this.$redraw.next();\n\n              return;\n            }\n\n            var option = _this.findOptionWithValue(columnIndex, values[columnIndex]) || (typeof currentValue === 'object' ? currentValue : (_ref = {}, _defineProperty(_ref, \"\".concat(_this.cascaderComponent.nzValueProperty), currentValue), _defineProperty(_ref, \"\".concat(_this.cascaderComponent.nzLabelProperty), currentValue), _ref));\n\n            _this.setOptionActivated(option, columnIndex, false, false);\n\n            if (columnIndex < lastColumnIndex) {\n              initColumnWithIndex(columnIndex + 1);\n            } else {\n              _this.dropBehindColumns(columnIndex);\n\n              _this.selectedOptions = _toConsumableArray(_this.activatedOptions);\n\n              _this.$redraw.next();\n            }\n          };\n\n          if (_this.isLoaded(columnIndex) || !_this.cascaderComponent.nzLoadData) {\n            activatedOptionSetter();\n          } else {\n            var option = _this.activatedOptions[columnIndex - 1] || {};\n\n            _this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n          }\n        };\n\n        this.activatedOptions = [];\n        this.selectedOptions = [];\n\n        if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n          // Should also notify the component that value changes. Fix #3480.\n          this.$redraw.next();\n          return;\n        } else {\n          initColumnWithIndex(0);\n        }\n      }\n      /**\n       * Bind cascader component so this service could use inputs.\n       */\n\n    }, {\n      key: \"withComponent\",\n      value: function withComponent(cascaderComponent) {\n        this.cascaderComponent = cascaderComponent;\n      }\n      /**\n       * Reset all options. Rebuild searching options if in searching mode.\n       */\n\n    }, {\n      key: \"withOptions\",\n      value: function withOptions(options) {\n        this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n\n        if (this.inSearchingMode) {\n          this.prepareSearchOptions(this.cascaderComponent.inputValue);\n        } else if (this.columns.length) {\n          this.syncOptions();\n        }\n      }\n      /**\n       * Try to set a option as activated.\n       * @param option Cascader option\n       * @param columnIndex Of which column this option is in\n       * @param performSelect Select\n       * @param loadingChildren Try to load children asynchronously.\n       */\n\n    }, {\n      key: \"setOptionActivated\",\n      value: function setOptionActivated(option, columnIndex) {\n        var performSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var loadingChildren = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n        if (option.disabled) {\n          return;\n        }\n\n        this.activatedOptions[columnIndex] = option;\n        this.trackAncestorActivatedOptions(columnIndex);\n        this.dropBehindActivatedOptions(columnIndex);\n        var isParent = isParentOption(option);\n\n        if (isParent) {\n          // Parent option that has children.\n          this.setColumnData(option.children, columnIndex + 1, option);\n        } else if (!option.isLeaf && loadingChildren) {\n          // Parent option that should try to load children asynchronously.\n          this.loadChildren(option, columnIndex);\n        } else if (option.isLeaf) {\n          // Leaf option.\n          this.dropBehindColumns(columnIndex);\n        } // Actually perform selection to make an options not only activated but also selected.\n\n\n        if (performSelect) {\n          this.setOptionSelected(option, columnIndex);\n        }\n\n        this.$redraw.next();\n      }\n    }, {\n      key: \"setOptionSelected\",\n      value: function setOptionSelected(option, index) {\n        var changeOn = this.cascaderComponent.nzChangeOn;\n\n        var shouldPerformSelection = function shouldPerformSelection(o, i) {\n          return typeof changeOn === 'function' ? changeOn(o, i) : false;\n        };\n\n        if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n          this.selectedOptions = _toConsumableArray(this.activatedOptions);\n          this.prepareEmitValue();\n          this.$redraw.next();\n          this.$optionSelected.next({\n            option: option,\n            index: index\n          });\n        }\n      }\n    }, {\n      key: \"setOptionDeactivatedSinceColumn\",\n      value: function setOptionDeactivatedSinceColumn(column) {\n        this.dropBehindActivatedOptions(column - 1);\n        this.dropBehindColumns(column);\n        this.$redraw.next();\n      }\n      /**\n       * Set a searching option as selected, finishing up things.\n       * @param option\n       */\n\n    }, {\n      key: \"setSearchOptionSelected\",\n      value: function setSearchOptionSelected(option) {\n        var _this2 = this;\n\n        this.activatedOptions = [option];\n        this.selectedOptions = _toConsumableArray(option.path);\n        this.prepareEmitValue();\n        this.$redraw.next();\n        this.$optionSelected.next({\n          option: option,\n          index: 0\n        });\n        setTimeout(function () {\n          // Reset data and tell UI only to remove input and reset dropdown width style.\n          _this2.$quitSearching.next();\n\n          _this2.$redraw.next();\n\n          _this2.inSearchingMode = false;\n          _this2.columns = _toConsumableArray(_this2.columnsSnapshot);\n          _this2.activatedOptions = _toConsumableArray(_this2.selectedOptions);\n        }, 200);\n      }\n      /**\n       * Filter cascader options to reset `columns`.\n       * @param searchValue The string user wants to search.\n       */\n\n    }, {\n      key: \"prepareSearchOptions\",\n      value: function prepareSearchOptions(searchValue) {\n        var _this3 = this;\n\n        var results = []; // Search results only have one layer.\n\n        var path = [];\n\n        var defaultFilter = function defaultFilter(i, p) {\n          return p.some(function (o) {\n            var label = _this3.getOptionLabel(o);\n\n            return !!label && label.indexOf(i) !== -1;\n          });\n        };\n\n        var showSearch = this.cascaderComponent.nzShowSearch;\n        var filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n        var sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n\n        var loopChild = function loopChild(node) {\n          var forceDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          path.push(node);\n          var cPath = Array.from(path);\n\n          if (filter(searchValue, cPath)) {\n            var disabled = forceDisabled || node.disabled;\n\n            var option = _defineProperty({\n              disabled: disabled,\n              isLeaf: true,\n              path: cPath\n            }, _this3.cascaderComponent.nzLabelProperty, cPath.map(function (p) {\n              return _this3.getOptionLabel(p);\n            }).join(' / '));\n\n            results.push(option);\n          }\n\n          path.pop();\n        };\n\n        var loopParent = function loopParent(node) {\n          var forceDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          var disabled = forceDisabled || node.disabled;\n          path.push(node);\n          node.children.forEach(function (sNode) {\n            if (!sNode.parent) {\n              sNode.parent = node;\n            }\n\n            if (!sNode.isLeaf) {\n              loopParent(sNode, disabled);\n            }\n\n            if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n              loopChild(sNode, disabled);\n            }\n          });\n          path.pop();\n        };\n\n        if (!this.columnsSnapshot.length) {\n          this.columns = [[]];\n          return;\n        }\n\n        this.columnsSnapshot[0].forEach(function (o) {\n          return isChildOption(o) ? loopChild(o) : loopParent(o);\n        });\n\n        if (sorter) {\n          results.sort(function (a, b) {\n            return sorter(a.path, b.path, searchValue);\n          });\n        }\n\n        this.columns = [results];\n        this.$redraw.next(); // Search results may be empty, so should redraw.\n      }\n      /**\n       * Toggle searching mode by UI. It deals with things not directly related to UI.\n       * @param toSearching If this cascader is entering searching mode\n       */\n\n    }, {\n      key: \"toggleSearchingMode\",\n      value: function toggleSearchingMode(toSearching) {\n        this.inSearchingMode = toSearching;\n\n        if (toSearching) {\n          this.activatedOptionsSnapshot = _toConsumableArray(this.activatedOptions);\n          this.activatedOptions = [];\n          this.selectedOptions = [];\n          this.$redraw.next();\n        } else {\n          // User quit searching mode without selecting an option.\n          this.activatedOptions = _toConsumableArray(this.activatedOptionsSnapshot);\n          this.selectedOptions = _toConsumableArray(this.activatedOptions);\n          this.columns = _toConsumableArray(this.columnsSnapshot);\n          this.syncOptions();\n          this.$redraw.next();\n        }\n      }\n      /**\n       * Clear selected options.\n       */\n\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.values = [];\n        this.selectedOptions = [];\n        this.activatedOptions = [];\n        this.dropBehindColumns(0);\n        this.prepareEmitValue();\n        this.$redraw.next();\n        this.$optionSelected.next(null);\n      }\n    }, {\n      key: \"getOptionLabel\",\n      value: function getOptionLabel(o) {\n        return o[this.cascaderComponent.nzLabelProperty || 'label'];\n      }\n    }, {\n      key: \"getOptionValue\",\n      value: function getOptionValue(o) {\n        return o[this.cascaderComponent.nzValueProperty || 'value'];\n      }\n      /**\n       * Try to insert options into a column.\n       * @param options Options to insert\n       * @param columnIndex Position\n       */\n\n    }, {\n      key: \"setColumnData\",\n      value: function setColumnData(options, columnIndex, parent) {\n        var existingOptions = this.columns[columnIndex];\n\n        if (!arraysEqual(existingOptions, options)) {\n          options.forEach(function (o) {\n            return o.parent = parent;\n          });\n          this.columns[columnIndex] = options;\n          this.dropBehindColumns(columnIndex);\n        }\n      }\n      /**\n       * Set all ancestor options as activated.\n       */\n\n    }, {\n      key: \"trackAncestorActivatedOptions\",\n      value: function trackAncestorActivatedOptions(startIndex) {\n        for (var i = startIndex - 1; i >= 0; i--) {\n          if (!this.activatedOptions[i]) {\n            this.activatedOptions[i] = this.activatedOptions[i + 1].parent;\n          }\n        }\n      }\n    }, {\n      key: \"dropBehindActivatedOptions\",\n      value: function dropBehindActivatedOptions(lastReserveIndex) {\n        this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n      }\n    }, {\n      key: \"dropBehindColumns\",\n      value: function dropBehindColumns(lastReserveIndex) {\n        if (lastReserveIndex < this.columns.length - 1) {\n          this.columns = this.columns.slice(0, lastReserveIndex + 1);\n        }\n      }\n      /**\n       * Load children of an option asynchronously.\n       */\n\n    }, {\n      key: \"loadChildren\",\n      value: function loadChildren(option, columnIndex, success, failure) {\n        var _this4 = this;\n\n        var loadFn = this.cascaderComponent.nzLoadData;\n\n        if (loadFn) {\n          // If there isn't any option in columns.\n          this.$loading.next(columnIndex < 0);\n\n          if (typeof option === 'object') {\n            option.loading = true;\n          }\n\n          loadFn(option, columnIndex).then(function () {\n            option.loading = false;\n\n            if (option.children) {\n              _this4.setColumnData(option.children, columnIndex + 1, option);\n            }\n\n            if (success) {\n              success();\n            }\n\n            _this4.$loading.next(false);\n\n            _this4.$redraw.next();\n          }, function () {\n            option.loading = false;\n            option.isLeaf = true;\n\n            if (failure) {\n              failure();\n            }\n\n            _this4.$redraw.next();\n          });\n        }\n      }\n    }, {\n      key: \"isLoaded\",\n      value: function isLoaded(index) {\n        return this.columns[index] && this.columns[index].length > 0;\n      }\n      /**\n       * Find a option that has a given value in a given column.\n       */\n\n    }, {\n      key: \"findOptionWithValue\",\n      value: function findOptionWithValue(columnIndex, value) {\n        var _this5 = this;\n\n        var targetColumn = this.columns[columnIndex];\n\n        if (targetColumn) {\n          var v = typeof value === 'object' ? this.getOptionValue(value) : value;\n          return targetColumn.find(function (o) {\n            return v === _this5.getOptionValue(o);\n          });\n        }\n\n        return null;\n      }\n    }, {\n      key: \"prepareEmitValue\",\n      value: function prepareEmitValue() {\n        var _this6 = this;\n\n        this.values = this.selectedOptions.map(function (o) {\n          return _this6.getOptionValue(o);\n        });\n      }\n    }]);\n\n    return NzCascaderService;\n  }();\n\n  NzCascaderService.ɵfac = function NzCascaderService_Factory(t) {\n    return new (t || NzCascaderService)();\n  };\n\n  NzCascaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: NzCascaderService,\n    factory: NzCascaderService.ɵfac\n  });\n  return NzCascaderService;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CONFIG_MODULE_NAME = 'cascader';\n\nvar defaultDisplayRender = function defaultDisplayRender(labels) {\n  return labels.join(' / ');\n};\n\nvar ɵ0 = defaultDisplayRender;\n\nvar NzCascaderComponent = /*@__PURE__*/function () {\n  var NzCascaderComponent = /*#__PURE__*/function () {\n    function NzCascaderComponent(cascaderService, nzConfigService, cdr, i18nService, elementRef, renderer, directionality, noAnimation) {\n      _classCallCheck(this, NzCascaderComponent);\n\n      this.cascaderService = cascaderService;\n      this.nzConfigService = nzConfigService;\n      this.cdr = cdr;\n      this.i18nService = i18nService;\n      this.directionality = directionality;\n      this.noAnimation = noAnimation;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzOptionRender = null;\n      this.nzShowInput = true;\n      this.nzShowArrow = true;\n      this.nzAllowClear = true;\n      this.nzAutoFocus = false;\n      this.nzChangeOnSelect = false;\n      this.nzDisabled = false;\n      this.nzExpandTrigger = 'click';\n      this.nzValueProperty = 'value';\n      this.nzLabelRender = null;\n      this.nzLabelProperty = 'label';\n      this.nzSize = 'default';\n      this.nzBackdrop = false;\n      this.nzShowSearch = false;\n      this.nzPlaceHolder = '';\n      this.nzMenuStyle = null;\n      this.nzMouseEnterDelay = 150; // ms\n\n      this.nzMouseLeaveDelay = 150; // ms\n\n      this.nzTriggerAction = ['click']; // TODO: RTL\n\n      this.nzSuffixIcon = 'down';\n      this.nzExpandIcon = '';\n      this.nzVisibleChange = new EventEmitter();\n      this.nzSelectionChange = new EventEmitter();\n      this.nzSelect = new EventEmitter();\n      this.nzClear = new EventEmitter();\n      /**\n       * If the dropdown should show the empty content.\n       * `true` if there's no options.\n       */\n\n      this.shouldShowEmpty = false;\n      this.menuVisible = false;\n      this.isLoading = false;\n      this.labelRenderContext = {};\n      this.onChange = Function.prototype;\n      this.onTouched = Function.prototype;\n      this.positions = _toConsumableArray(DEFAULT_CASCADER_POSITIONS);\n      this.dropdownHeightStyle = '';\n      this.isFocused = false;\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n      this.inputString = '';\n      this.isOpening = false;\n      this.delayMenuTimer = null;\n      this.delaySelectTimer = null;\n      this.el = elementRef.nativeElement;\n      this.cascaderService.withComponent(this);\n      renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n      renderer.addClass(elementRef.nativeElement, 'ant-cascader-picker');\n    }\n\n    _createClass(NzCascaderComponent, [{\n      key: \"nzOptions\",\n      get: function get() {\n        return this.cascaderService.nzOptions;\n      },\n      set: function set(options) {\n        this.cascaderService.withOptions(options);\n      }\n    }, {\n      key: \"inSearchingMode\",\n      get: function get() {\n        return this.cascaderService.inSearchingMode;\n      }\n    }, {\n      key: \"inputValue\",\n      get: function get() {\n        return this.inputString;\n      },\n      set: function set(inputValue) {\n        this.inputString = inputValue;\n        this.toggleSearchingMode(!!inputValue);\n      }\n    }, {\n      key: \"menuCls\",\n      get: function get() {\n        return _defineProperty({}, \"\".concat(this.nzMenuClassName), !!this.nzMenuClassName);\n      }\n    }, {\n      key: \"menuColumnCls\",\n      get: function get() {\n        return _defineProperty({}, \"\".concat(this.nzColumnClassName), !!this.nzColumnClassName);\n      }\n    }, {\n      key: \"hasInput\",\n      get: function get() {\n        return !!this.inputValue;\n      }\n    }, {\n      key: \"hasValue\",\n      get: function get() {\n        return this.cascaderService.values && this.cascaderService.values.length > 0;\n      }\n    }, {\n      key: \"showPlaceholder\",\n      get: function get() {\n        return !(this.hasInput || this.hasValue);\n      }\n    }, {\n      key: \"clearIconVisible\",\n      get: function get() {\n        return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n      }\n    }, {\n      key: \"isLabelRenderTemplate\",\n      get: function get() {\n        return !!this.nzLabelRender;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this7 = this;\n\n        var _a;\n\n        var srv = this.cascaderService;\n        srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          // These operations would not mutate data.\n          _this7.checkChildren();\n\n          _this7.setDisplayLabel();\n\n          _this7.reposition();\n\n          _this7.setDropdownStyles();\n\n          _this7.cdr.markForCheck();\n        });\n        srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(function (loading) {\n          _this7.isLoading = loading;\n        });\n        srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(function (data) {\n          if (!data) {\n            _this7.onChange([]);\n\n            _this7.nzSelect.emit(null);\n\n            _this7.nzSelectionChange.emit([]);\n          } else {\n            var option = data.option,\n                index = data.index;\n            var shouldClose = option.isLeaf || _this7.nzChangeOnSelect && _this7.nzExpandTrigger === 'hover';\n\n            if (shouldClose) {\n              _this7.delaySetMenuVisible(false);\n            }\n\n            _this7.onChange(_this7.cascaderService.values);\n\n            _this7.nzSelectionChange.emit(_this7.cascaderService.selectedOptions);\n\n            _this7.nzSelect.emit({\n              option: option,\n              index: index\n            });\n\n            _this7.cdr.markForCheck();\n          }\n        });\n        srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this7.inputString = '';\n          _this7.dropdownWidthStyle = '';\n        });\n        this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(function () {\n          _this7.setLocale();\n        });\n        this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this7.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this7.dir = _this7.directionality.value;\n          srv.$redraw.next();\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.clearDelayMenuTimer();\n        this.clearDelaySelectTimer();\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouched = fn;\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.cascaderService.values = toArray(value);\n        this.cascaderService.syncOptions(true);\n      }\n    }, {\n      key: \"delaySetMenuVisible\",\n      value: function delaySetMenuVisible(visible) {\n        var _this8 = this;\n\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n        var setOpening = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        this.clearDelayMenuTimer();\n\n        if (delay) {\n          if (visible && setOpening) {\n            this.isOpening = true;\n          }\n\n          this.delayMenuTimer = setTimeout(function () {\n            _this8.setMenuVisible(visible);\n\n            _this8.cdr.detectChanges();\n\n            _this8.clearDelayMenuTimer();\n\n            if (visible) {\n              setTimeout(function () {\n                _this8.isOpening = false;\n              }, 100);\n            }\n          }, delay);\n        } else {\n          this.setMenuVisible(visible);\n        }\n      }\n    }, {\n      key: \"setMenuVisible\",\n      value: function setMenuVisible(visible) {\n        if (this.nzDisabled || this.menuVisible === visible) {\n          return;\n        }\n\n        if (visible) {\n          this.cascaderService.syncOptions();\n          this.scrollToActivatedOptions();\n        }\n\n        if (!visible) {\n          this.inputValue = '';\n        }\n\n        this.menuVisible = visible;\n        this.nzVisibleChange.emit(visible);\n        this.cdr.detectChanges();\n      }\n    }, {\n      key: \"clearDelayMenuTimer\",\n      value: function clearDelayMenuTimer() {\n        if (this.delayMenuTimer) {\n          clearTimeout(this.delayMenuTimer);\n          this.delayMenuTimer = null;\n        }\n      }\n    }, {\n      key: \"clearSelection\",\n      value: function clearSelection(event) {\n        if (event) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        this.labelRenderText = '';\n        this.labelRenderContext = {};\n        this.inputValue = '';\n        this.setMenuVisible(false);\n        this.cascaderService.clear();\n      }\n    }, {\n      key: \"getSubmitValue\",\n      value: function getSubmitValue() {\n        var _this9 = this;\n\n        return this.cascaderService.selectedOptions.map(function (o) {\n          return _this9.cascaderService.getOptionValue(o);\n        });\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        if (!this.isFocused) {\n          (this.input ? this.input.nativeElement : this.el).focus();\n          this.isFocused = true;\n        }\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        if (this.isFocused) {\n          (this.input ? this.input.nativeElement : this.el).blur();\n          this.isFocused = false;\n        }\n      }\n    }, {\n      key: \"handleInputBlur\",\n      value: function handleInputBlur() {\n        this.menuVisible ? this.focus() : this.blur();\n      }\n    }, {\n      key: \"handleInputFocus\",\n      value: function handleInputFocus() {\n        this.focus();\n      }\n    }, {\n      key: \"onKeyDown\",\n      value: function onKeyDown(event) {\n        var keyCode = event.keyCode;\n\n        if (keyCode !== DOWN_ARROW && keyCode !== UP_ARROW && keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== ENTER && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n          return;\n        } // Press any keys above to reopen menu.\n\n\n        if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n          return this.setMenuVisible(true);\n        } // Make these keys work as default in searching mode.\n\n\n        if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n          return;\n        } // Interact with the component.\n\n\n        if (this.menuVisible) {\n          event.preventDefault();\n\n          if (keyCode === DOWN_ARROW) {\n            this.moveUpOrDown(false);\n          } else if (keyCode === UP_ARROW) {\n            this.moveUpOrDown(true);\n          } else if (keyCode === LEFT_ARROW) {\n            this.moveLeft();\n          } else if (keyCode === RIGHT_ARROW) {\n            this.moveRight();\n          } else if (keyCode === ENTER) {\n            this.onEnter();\n          }\n        }\n      }\n    }, {\n      key: \"onTriggerClick\",\n      value: function onTriggerClick() {\n        if (this.nzDisabled) {\n          return;\n        }\n\n        if (this.nzShowSearch) {\n          this.focus();\n        }\n\n        if (this.isActionTrigger('click')) {\n          this.delaySetMenuVisible(!this.menuVisible, 100);\n        }\n\n        this.onTouched();\n      }\n    }, {\n      key: \"onTriggerMouseEnter\",\n      value: function onTriggerMouseEnter() {\n        if (this.nzDisabled || !this.isActionTrigger('hover')) {\n          return;\n        }\n\n        this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n      }\n    }, {\n      key: \"onTriggerMouseLeave\",\n      value: function onTriggerMouseLeave(event) {\n        if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n          event.preventDefault();\n          return;\n        }\n\n        var mouseTarget = event.relatedTarget;\n        var hostEl = this.el;\n        var menuEl = this.menu && this.menu.nativeElement;\n\n        if (hostEl.contains(mouseTarget) || menuEl && menuEl.contains(mouseTarget)) {\n          return;\n        }\n\n        this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n      }\n    }, {\n      key: \"onOptionMouseEnter\",\n      value: function onOptionMouseEnter(option, columnIndex, event) {\n        event.preventDefault();\n\n        if (this.nzExpandTrigger === 'hover') {\n          if (!option.isLeaf) {\n            this.delaySetOptionActivated(option, columnIndex, false);\n          } else {\n            this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n          }\n        }\n      }\n    }, {\n      key: \"onOptionMouseLeave\",\n      value: function onOptionMouseLeave(option, _columnIndex, event) {\n        event.preventDefault();\n\n        if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n          this.clearDelaySelectTimer();\n        }\n      }\n    }, {\n      key: \"onOptionClick\",\n      value: function onOptionClick(option, columnIndex, event) {\n        if (event) {\n          event.preventDefault();\n        }\n\n        if (option && option.disabled) {\n          return;\n        }\n\n        this.el.focus();\n        this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n      }\n    }, {\n      key: \"onClickOutside\",\n      value: function onClickOutside(event) {\n        if (!this.el.contains(event.target)) {\n          this.closeMenu();\n        }\n      }\n    }, {\n      key: \"isActionTrigger\",\n      value: function isActionTrigger(action) {\n        return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;\n      }\n    }, {\n      key: \"onEnter\",\n      value: function onEnter() {\n        var columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n        var option = this.cascaderService.activatedOptions[columnIndex];\n\n        if (option && !option.disabled) {\n          this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n        }\n      }\n    }, {\n      key: \"moveUpOrDown\",\n      value: function moveUpOrDown(isUp) {\n        var columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n        var activeOption = this.cascaderService.activatedOptions[columnIndex];\n        var options = this.cascaderService.columns[columnIndex] || [];\n        var length = options.length;\n        var nextIndex = -1;\n\n        if (!activeOption) {\n          // Not selected options in this column\n          nextIndex = isUp ? length : -1;\n        } else {\n          nextIndex = options.indexOf(activeOption);\n        }\n\n        while (true) {\n          nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n\n          if (nextIndex < 0 || nextIndex >= length) {\n            break;\n          }\n\n          var nextOption = options[nextIndex];\n\n          if (!nextOption || nextOption.disabled) {\n            continue;\n          }\n\n          this.cascaderService.setOptionActivated(nextOption, columnIndex);\n          break;\n        }\n      }\n    }, {\n      key: \"moveLeft\",\n      value: function moveLeft() {\n        var options = this.cascaderService.activatedOptions;\n\n        if (options.length) {\n          options.pop(); // Remove the last one\n        }\n      }\n    }, {\n      key: \"moveRight\",\n      value: function moveRight() {\n        var length = this.cascaderService.activatedOptions.length;\n        var options = this.cascaderService.columns[length];\n\n        if (options && options.length) {\n          var nextOpt = options.find(function (o) {\n            return !o.disabled;\n          });\n\n          if (nextOpt) {\n            this.cascaderService.setOptionActivated(nextOpt, length);\n          }\n        }\n      }\n    }, {\n      key: \"clearDelaySelectTimer\",\n      value: function clearDelaySelectTimer() {\n        if (this.delaySelectTimer) {\n          clearTimeout(this.delaySelectTimer);\n          this.delaySelectTimer = null;\n        }\n      }\n    }, {\n      key: \"delaySetOptionActivated\",\n      value: function delaySetOptionActivated(option, columnIndex, performSelect) {\n        var _this10 = this;\n\n        this.clearDelaySelectTimer();\n        this.delaySelectTimer = setTimeout(function () {\n          _this10.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n\n          _this10.delaySelectTimer = null;\n        }, 150);\n      }\n    }, {\n      key: \"toggleSearchingMode\",\n      value: function toggleSearchingMode(toSearching) {\n        if (this.inSearchingMode !== toSearching) {\n          this.cascaderService.toggleSearchingMode(toSearching);\n        }\n\n        if (this.inSearchingMode) {\n          this.cascaderService.prepareSearchOptions(this.inputValue);\n        }\n      }\n    }, {\n      key: \"isOptionActivated\",\n      value: function isOptionActivated(option, index) {\n        var activeOpt = this.cascaderService.activatedOptions[index];\n        return activeOpt === option;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        if (isDisabled) {\n          this.closeMenu();\n        }\n\n        this.nzDisabled = isDisabled;\n      }\n    }, {\n      key: \"closeMenu\",\n      value: function closeMenu() {\n        this.blur();\n        this.clearDelayMenuTimer();\n        this.setMenuVisible(false);\n      }\n      /**\n       * Reposition the cascader panel. When a menu opens, the cascader expands\n       * and may exceed the boundary of browser's window.\n       */\n\n    }, {\n      key: \"reposition\",\n      value: function reposition() {\n        var _this11 = this;\n\n        if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n          Promise.resolve().then(function () {\n            _this11.overlay.overlayRef.updatePosition();\n          });\n        }\n      }\n      /**\n       * When a cascader options is changed, a child needs to know that it should re-render.\n       */\n\n    }, {\n      key: \"checkChildren\",\n      value: function checkChildren() {\n        if (this.cascaderItems) {\n          this.cascaderItems.forEach(function (item) {\n            return item.markForCheck();\n          });\n        }\n      }\n    }, {\n      key: \"setDisplayLabel\",\n      value: function setDisplayLabel() {\n        var _this12 = this;\n\n        var selectedOptions = this.cascaderService.selectedOptions;\n        var labels = selectedOptions.map(function (o) {\n          return _this12.cascaderService.getOptionLabel(o);\n        });\n\n        if (this.isLabelRenderTemplate) {\n          this.labelRenderContext = {\n            labels: labels,\n            selectedOptions: selectedOptions\n          };\n        } else {\n          this.labelRenderText = defaultDisplayRender.call(this, labels);\n        }\n      }\n    }, {\n      key: \"setDropdownStyles\",\n      value: function setDropdownStyles() {\n        var firstColumn = this.cascaderService.columns[0];\n        this.shouldShowEmpty = this.inSearchingMode && (!firstColumn || !firstColumn.length) || // Should show empty when there's no searching result\n        !(this.nzOptions && this.nzOptions.length) && !this.nzLoadData; // Should show when there's no options and developer does not use nzLoadData\n\n        this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n\n        if (this.input) {\n          this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? \"\".concat(this.input.nativeElement.offsetWidth, \"px\") : '';\n        }\n      }\n    }, {\n      key: \"setLocale\",\n      value: function setLocale() {\n        this.locale = this.i18nService.getLocaleData('global');\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"scrollToActivatedOptions\",\n      value: function scrollToActivatedOptions() {\n        var _this13 = this;\n\n        // scroll only until option menu view is ready\n        Promise.resolve().then(function () {\n          _this13.cascaderItems.toArray().filter(function (e) {\n            return e.activated;\n          }).forEach(function (e) {\n            var _a;\n\n            (_a = e.nativeElement) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n              block: 'start',\n              inline: 'nearest'\n            });\n          });\n        });\n      }\n    }]);\n\n    return NzCascaderComponent;\n  }();\n\n  NzCascaderComponent.ɵfac = function NzCascaderComponent_Factory(t) {\n    return new (t || NzCascaderComponent)(ɵngcc0.ɵɵdirectiveInject(NzCascaderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NzI18nService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.NzNoAnimationDirective, 9));\n  };\n\n  NzCascaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzCascaderComponent,\n    selectors: [[\"nz-cascader\"], [\"\", \"nz-cascader\", \"\"]],\n    viewQuery: function NzCascaderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 1);\n        ɵngcc0.ɵɵviewQuery(NzCascaderOptionComponent, 1);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cascaderItems = _t);\n      }\n    },\n    hostVars: 15,\n    hostBindings: function NzCascaderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NzCascaderComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"click\", function NzCascaderComponent_click_HostBindingHandler() {\n          return ctx.onTriggerClick();\n        })(\"mouseenter\", function NzCascaderComponent_mouseenter_HostBindingHandler() {\n          return ctx.onTriggerMouseEnter();\n        })(\"mouseleave\", function NzCascaderComponent_mouseleave_HostBindingHandler($event) {\n          return ctx.onTriggerMouseLeave($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabIndex\", \"0\");\n        ɵngcc0.ɵɵclassProp(\"ant-cascader-lg\", ctx.nzSize === \"large\")(\"ant-cascader-sm\", ctx.nzSize === \"small\")(\"ant-cascader-picker-disabled\", ctx.nzDisabled)(\"ant-cascader-picker-open\", ctx.menuVisible)(\"ant-cascader-picker-with-value\", !!ctx.inputValue)(\"ant-cascader-focused\", ctx.isFocused)(\"ant-cascader-picker-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzOptionRender: \"nzOptionRender\",\n      nzShowInput: \"nzShowInput\",\n      nzShowArrow: \"nzShowArrow\",\n      nzAllowClear: \"nzAllowClear\",\n      nzAutoFocus: \"nzAutoFocus\",\n      nzChangeOnSelect: \"nzChangeOnSelect\",\n      nzDisabled: \"nzDisabled\",\n      nzExpandTrigger: \"nzExpandTrigger\",\n      nzValueProperty: \"nzValueProperty\",\n      nzLabelRender: \"nzLabelRender\",\n      nzLabelProperty: \"nzLabelProperty\",\n      nzSize: \"nzSize\",\n      nzBackdrop: \"nzBackdrop\",\n      nzShowSearch: \"nzShowSearch\",\n      nzPlaceHolder: \"nzPlaceHolder\",\n      nzMenuStyle: \"nzMenuStyle\",\n      nzMouseEnterDelay: \"nzMouseEnterDelay\",\n      nzMouseLeaveDelay: \"nzMouseLeaveDelay\",\n      nzTriggerAction: \"nzTriggerAction\",\n      nzSuffixIcon: \"nzSuffixIcon\",\n      nzExpandIcon: \"nzExpandIcon\",\n      nzOptions: \"nzOptions\",\n      nzColumnClassName: \"nzColumnClassName\",\n      nzNotFoundContent: \"nzNotFoundContent\",\n      nzMenuClassName: \"nzMenuClassName\",\n      nzChangeOn: \"nzChangeOn\",\n      nzLoadData: \"nzLoadData\"\n    },\n    outputs: {\n      nzVisibleChange: \"nzVisibleChange\",\n      nzSelectionChange: \"nzSelectionChange\",\n      nzSelect: \"nzSelect\",\n      nzClear: \"nzClear\"\n    },\n    exportAs: [\"nzCascader\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(function () {\n        return NzCascaderComponent;\n      }),\n      multi: true\n    }, NzCascaderService])],\n    ngContentSelectors: _c4,\n    decls: 6,\n    vars: 6,\n    consts: [[\"cdkOverlayOrigin\", \"\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [4, \"ngIf\"], [\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayOpen\", \"overlayOutsideClick\", \"detach\"], [\"nz-input\", \"\", 1, \"ant-cascader-input\", 3, \"readonly\", \"disabled\", \"nzSize\", \"ngModel\", \"ngModelChange\", \"blur\", \"focus\", \"change\"], [\"input\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", \"class\", \"ant-cascader-picker-clear\", 3, \"click\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-cascader-picker-arrow\", 4, \"ngIf\"], [1, \"ant-cascader-picker-label\"], [4, \"ngIf\", \"ngIfElse\"], [\"labelTemplate\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", 1, \"ant-cascader-picker-clear\", 3, \"click\"], [\"nz-icon\", \"\", \"class\", \"ant-cascader-picker-arrow\", 3, \"nzType\", \"ant-cascader-picker-arrow-expand\", 4, \"ngIf\"], [\"nz-icon\", \"\", 1, \"ant-cascader-picker-arrow\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-cascader-picker-arrow\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-cascader-menus\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\", \"mouseleave\"], [\"menu\", \"\"], [\"class\", \"ant-cascader-menu\", 3, \"width\", \"height\", 4, \"ngIf\", \"ngIfElse\"], [\"hasOptionsTemplate\", \"\"], [1, \"ant-cascader-menu\"], [1, \"ant-cascader-menu-item\", \"ant-cascader-menu-item-expanded\", \"ant-cascader-menu-item-disabled\"], [3, \"nzComponentName\", \"specificContent\"], [\"class\", \"ant-cascader-menu\", 3, \"ngClass\", \"height\", \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-cascader-menu\", 3, \"ngClass\"], [\"nz-cascader-option\", \"\", 3, \"expandIcon\", \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"dir\", \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-cascader-option\", \"\", 3, \"expandIcon\", \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"dir\", \"mouseenter\", \"mouseleave\", \"click\"]],\n    template: function NzCascaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_div_3_Template, 10, 22, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, NzCascaderComponent_ng_template_5_Template, 5, 11, \"ng-template\", 3);\n        ɵngcc0.ɵɵlistener(\"overlayOutsideClick\", function NzCascaderComponent_Template_ng_template_overlayOutsideClick_5_listener($event) {\n          return ctx.onClickOutside($event);\n        })(\"detach\", function NzCascaderComponent_Template_ng_template_detach_5_listener() {\n          return ctx.closeMenu();\n        });\n      }\n\n      if (rf & 2) {\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowInput);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayPositions\", ctx.positions)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-cascader-menus\")(\"cdkConnectedOverlayOpen\", ctx.menuVisible);\n      }\n    },\n    directives: [ɵngcc9.CdkOverlayOrigin, ɵngcc1.NgIf, ɵngcc9.CdkConnectedOverlay, ɵngcc10.NzConnectedOverlayDirective, ɵngcc11.NzInputDirective, ɵngcc12.DefaultValueAccessor, ɵngcc12.NgControlStatus, ɵngcc12.NgModel, ɵngcc3.NzStringTemplateOutletDirective, ɵngcc2.NzIconDirective, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc8.NzNoAnimationDirective, ɵngcc13.NzEmbedEmptyComponent, ɵngcc1.NgForOf, NzCascaderOptionComponent, ɵngcc7.Dir],\n    encapsulation: 2,\n    data: {\n      animation: [slideMotion]\n    },\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzShowInput\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzShowArrow\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzAllowClear\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzAutoFocus\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzChangeOnSelect\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzCascaderComponent.prototype, \"nzSize\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzBackdrop\", void 0);\n\n  return NzCascaderComponent;\n}();\n\nvar NzCascaderModule = /*@__PURE__*/function () {\n  var NzCascaderModule = function NzCascaderModule() {\n    _classCallCheck(this, NzCascaderModule);\n  };\n\n  NzCascaderModule.ɵfac = function NzCascaderModule_Factory(t) {\n    return new (t || NzCascaderModule)();\n  };\n\n  NzCascaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzCascaderModule\n  });\n  NzCascaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule]]\n  });\n  return NzCascaderModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCascaderModule, {\n    declarations: function declarations() {\n      return [NzCascaderComponent, NzCascaderOptionComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule];\n    },\n    exports: function exports() {\n      return [NzCascaderComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCascaderComponent, NzCascaderModule, NzCascaderOptionComponent, NzCascaderService, isChildOption, isParentOption, isShowSearchObject, ɵ0 }; //# sourceMappingURL=ng-zorro-antd-cascader.js.map","map":null,"metadata":{},"sourceType":"module"}