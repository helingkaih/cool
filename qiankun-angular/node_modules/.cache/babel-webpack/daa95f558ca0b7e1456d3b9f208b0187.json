{"ast":null,"code":"import _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Renderer2, ChangeDetectorRef, Optional, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { isValid } from 'date-fns';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { isNil, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { NzI18nService, DateHelperService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { Subject, of } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/forms';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc10 from 'ng-zorro-antd/icon';\nimport * as ɵngcc11 from 'ng-zorro-antd/core/transition-patch';\nimport * as ɵngcc12 from 'ng-zorro-antd/button';\nimport * as ɵngcc13 from 'ng-zorro-antd/core/wave';\nvar _c0 = [\"inputElement\"];\n\nfunction NzTimePickerComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var suffixIcon_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", suffixIcon_r4);\n  }\n}\n\nfunction NzTimePickerComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerComponent_span_6_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onClickClearBtn($event);\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.nzClearText)(\"title\", ctx_r2.nzClearText);\n  }\n}\n\nfunction NzTimePickerComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(3, \"nz-time-picker-panel\", 13);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTimePickerComponent_ng_template_7_Template_nz_time_picker_panel_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.value = $event;\n    })(\"ngModelChange\", function NzTimePickerComponent_ng_template_7_Template_nz_time_picker_panel_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onPanelValueChange($event);\n    })(\"closePanel\", function NzTimePickerComponent_ng_template_7_Template_nz_time_picker_panel_closePanel_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.setCurrentValueAndClose();\n    });\n    ɵngcc0.ɵɵpipe(4, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@slideMotion\", \"enter\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.nzPopupClassName)(\"format\", ctx_r3.nzFormat)(\"nzHourStep\", ctx_r3.nzHourStep)(\"nzMinuteStep\", ctx_r3.nzMinuteStep)(\"nzSecondStep\", ctx_r3.nzSecondStep)(\"nzDisabledHours\", ctx_r3.nzDisabledHours)(\"nzDisabledMinutes\", ctx_r3.nzDisabledMinutes)(\"nzDisabledSeconds\", ctx_r3.nzDisabledSeconds)(\"nzPlaceHolder\", ctx_r3.nzPlaceHolder || ɵngcc0.ɵɵpipeBind1(4, 19, ctx_r3.i18nPlaceHolder$))(\"nzHideDisabledOptions\", ctx_r3.nzHideDisabledOptions)(\"nzUse12Hours\", ctx_r3.nzUse12Hours)(\"nzDefaultOpenValue\", ctx_r3.nzDefaultOpenValue)(\"nzAddOn\", ctx_r3.nzAddOn)(\"nzClearText\", ctx_r3.nzClearText)(\"nzNowText\", ctx_r3.nzNowText)(\"nzOkText\", ctx_r3.nzOkText)(\"nzAllowEmpty\", ctx_r3.nzAllowEmpty)(\"ngModel\", ctx_r3.value);\n  }\n}\n\nvar _c1 = [\"hourListElement\"];\nvar _c2 = [\"minuteListElement\"];\nvar _c3 = [\"secondListElement\"];\nvar _c4 = [\"use12HoursListElement\"];\n\nfunction NzTimePickerPanelComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.dateHelper.format(ctx_r0.time == null ? null : ctx_r0.time.value, ctx_r0.format) || \"\\xA0\");\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_2_ng_container_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_ul_2_ng_container_2_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var hour_r8 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.selectHour(hour_r8);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"number\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var hour_r8 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-picker-time-panel-cell-selected\", ctx_r9.isSelectedHour(hour_r8))(\"ant-picker-time-panel-cell-disabled\", hour_r8.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(3, 5, hour_r8.index, \"2.0-0\"));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_ul_2_ng_container_2_li_1_Template, 4, 8, \"li\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var hour_r8 = ctx.$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r7.nzHideDisabledOptions && hour_r8.disabled));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 6, 7);\n    ɵngcc0.ɵɵtemplate(2, NzTimePickerPanelComponent_ul_2_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.hourRange)(\"ngForTrackBy\", ctx_r1.trackByFn);\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_3_ng_container_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_ul_3_ng_container_2_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var minute_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.selectMinute(minute_r16);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"number\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var minute_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-picker-time-panel-cell-selected\", ctx_r17.isSelectedMinute(minute_r16))(\"ant-picker-time-panel-cell-disabled\", minute_r16.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(3, 5, minute_r16.index, \"2.0-0\"));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_ul_3_ng_container_2_li_1_Template, 4, 8, \"li\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var minute_r16 = ctx.$implicit;\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r15.nzHideDisabledOptions && minute_r16.disabled));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 6, 12);\n    ɵngcc0.ɵɵtemplate(2, NzTimePickerPanelComponent_ul_3_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.minuteRange)(\"ngForTrackBy\", ctx_r2.trackByFn);\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_4_ng_container_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_ul_4_ng_container_2_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var second_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r26.selectSecond(second_r24);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"number\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var second_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-picker-time-panel-cell-selected\", ctx_r25.isSelectedSecond(second_r24))(\"ant-picker-time-panel-cell-disabled\", second_r24.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(3, 5, second_r24.index, \"2.0-0\"));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_ul_4_ng_container_2_li_1_Template, 4, 8, \"li\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var second_r24 = ctx.$implicit;\n    var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r23.nzHideDisabledOptions && second_r24.disabled));\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 6, 13);\n    ɵngcc0.ɵɵtemplate(2, NzTimePickerPanelComponent_ul_4_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.secondRange)(\"ngForTrackBy\", ctx_r3.trackByFn);\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_5_ng_container_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r36 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_ul_5_ng_container_2_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r36);\n      var range_r32 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r34 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r34.select12Hours(range_r32);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var range_r32 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-picker-time-panel-cell-selected\", ctx_r33.isSelected12Hours(range_r32));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(range_r32.value);\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_ul_5_ng_container_2_li_1_Template, 3, 3, \"li\", 16);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r31 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r31.nzHideDisabledOptions);\n  }\n}\n\nfunction NzTimePickerPanelComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 6, 14);\n    ɵngcc0.ɵɵtemplate(2, NzTimePickerPanelComponent_ul_5_ng_container_2_Template, 2, 1, \"ng-container\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.use12HoursRange);\n  }\n}\n\nfunction NzTimePickerPanelComponent_div_6_div_1_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTimePickerPanelComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_div_6_div_1_ng_template_1_Template, 0, 0, \"ng-template\", 25);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r38 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r38.nzAddOn);\n  }\n}\n\nfunction NzTimePickerPanelComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r41 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(1, NzTimePickerPanelComponent_div_6_div_1_Template, 2, 1, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 19);\n    ɵngcc0.ɵɵelementStart(3, \"li\", 20);\n    ɵngcc0.ɵɵelementStart(4, \"a\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_div_6_Template_a_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r41);\n      var ctx_r40 = ɵngcc0.ɵɵnextContext();\n      return ctx_r40.onClickNow();\n    });\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵpipe(6, \"nzI18n\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"li\", 22);\n    ɵngcc0.ɵɵelementStart(8, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerPanelComponent_div_6_Template_button_click_8_listener() {\n      ɵngcc0.ɵɵrestoreView(_r41);\n      var ctx_r42 = ɵngcc0.ɵɵnextContext();\n      return ctx_r42.onClickOk();\n    });\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵpipe(10, \"nzI18n\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.nzAddOn);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.nzNowText || ɵngcc0.ɵɵpipeBind1(6, 3, \"Calendar.lang.now\"), \" \");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.nzOkText || ɵngcc0.ɵɵpipeBind1(10, 5, \"Calendar.lang.ok\"), \" \");\n  }\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'timePicker';\n\nvar NzTimePickerComponent = /*@__PURE__*/function () {\n  var NzTimePickerComponent = /*#__PURE__*/function () {\n    function NzTimePickerComponent(nzConfigService, i18n, element, renderer, cdr, dateHelper, platform, elementRef, directionality) {\n      _classCallCheck(this, NzTimePickerComponent);\n\n      this.nzConfigService = nzConfigService;\n      this.i18n = i18n;\n      this.element = element;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.dateHelper = dateHelper;\n      this.platform = platform;\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.destroy$ = new Subject();\n      this.isInit = false;\n      this.focused = false;\n      this.inputValue = '';\n      this.value = null;\n      this.preValue = null;\n      this.i18nPlaceHolder$ = of(undefined);\n      this.overlayPositions = [{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetY: 3\n      }];\n      this.dir = 'ltr';\n      this.nzId = null;\n      this.nzSize = null;\n      this.nzHourStep = 1;\n      this.nzMinuteStep = 1;\n      this.nzSecondStep = 1;\n      this.nzClearText = 'clear';\n      this.nzNowText = '';\n      this.nzOkText = '';\n      this.nzPopupClassName = '';\n      this.nzPlaceHolder = '';\n      this.nzFormat = 'HH:mm:ss';\n      this.nzOpen = false;\n      this.nzUse12Hours = false;\n      this.nzSuffixIcon = 'clock-circle';\n      this.nzOpenChange = new EventEmitter();\n      this.nzHideDisabledOptions = false;\n      this.nzAllowEmpty = true;\n      this.nzDisabled = false;\n      this.nzAutoFocus = false;\n      this.nzBackdrop = false; // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-picker');\n    }\n\n    _createClass(NzTimePickerComponent, [{\n      key: \"emitValue\",\n      value: function emitValue(value) {\n        this.setValue(value, true);\n\n        if (this._onChange) {\n          this._onChange(this.value);\n        }\n\n        if (this._onTouched) {\n          this._onTouched();\n        }\n      }\n    }, {\n      key: \"setValue\",\n      value: function setValue(value) {\n        var syncPreValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (syncPreValue) {\n          this.preValue = isValid(value) ? new Date(value) : null;\n        }\n\n        this.value = isValid(value) ? new Date(value) : null;\n        this.inputValue = this.dateHelper.format(value, this.nzFormat);\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"open\",\n      value: function open() {\n        if (this.nzDisabled || this.nzOpen) {\n          return;\n        }\n\n        this.focus();\n        this.nzOpen = true;\n        this.nzOpenChange.emit(this.nzOpen);\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this.nzOpen = false;\n        this.cdr.markForCheck();\n        this.nzOpenChange.emit(this.nzOpen);\n      }\n    }, {\n      key: \"updateAutoFocus\",\n      value: function updateAutoFocus() {\n        if (this.isInit && !this.nzDisabled) {\n          if (this.nzAutoFocus) {\n            this.renderer.setAttribute(this.inputRef.nativeElement, 'autofocus', 'autofocus');\n          } else {\n            this.renderer.removeAttribute(this.inputRef.nativeElement, 'autofocus');\n          }\n        }\n      }\n    }, {\n      key: \"onClickClearBtn\",\n      value: function onClickClearBtn(event) {\n        event.stopPropagation();\n        this.emitValue(null);\n      }\n    }, {\n      key: \"onClickOutside\",\n      value: function onClickOutside(event) {\n        if (!this.element.nativeElement.contains(event.target)) {\n          this.setCurrentValueAndClose();\n        }\n      }\n    }, {\n      key: \"onFocus\",\n      value: function onFocus(value) {\n        this.focused = value;\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        if (this.inputRef.nativeElement) {\n          this.inputRef.nativeElement.focus();\n        }\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        if (this.inputRef.nativeElement) {\n          this.inputRef.nativeElement.blur();\n        }\n      }\n    }, {\n      key: \"onKeyupEsc\",\n      value: function onKeyupEsc() {\n        this.setValue(this.preValue);\n      }\n    }, {\n      key: \"onKeyupEnter\",\n      value: function onKeyupEnter() {\n        if (this.nzOpen && isValid(this.value)) {\n          this.setCurrentValueAndClose();\n        } else if (!this.nzOpen) {\n          this.open();\n        }\n      }\n    }, {\n      key: \"onInputChange\",\n      value: function onInputChange(str) {\n        if (!this.platform.TRIDENT && document.activeElement === this.inputRef.nativeElement) {\n          this.open();\n          this.parseTimeString(str);\n        }\n      }\n    }, {\n      key: \"onPanelValueChange\",\n      value: function onPanelValueChange(value) {\n        this.setValue(value);\n        this.focus();\n      }\n    }, {\n      key: \"setCurrentValueAndClose\",\n      value: function setCurrentValueAndClose() {\n        this.emitValue(this.value);\n        this.close();\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        var _a;\n\n        this.inputSize = Math.max(8, this.nzFormat.length) + 2;\n        this.origin = new CdkOverlayOrigin(this.element);\n        this.i18nPlaceHolder$ = this.i18n.localeChange.pipe(map(function (nzLocale) {\n          return nzLocale.TimePicker.placeholder;\n        }));\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n          _this.dir = direction;\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzUse12Hours = changes.nzUse12Hours,\n            nzFormat = changes.nzFormat,\n            nzDisabled = changes.nzDisabled,\n            nzAutoFocus = changes.nzAutoFocus;\n\n        if (nzUse12Hours && !nzUse12Hours.previousValue && nzUse12Hours.currentValue && !nzFormat) {\n          this.nzFormat = 'h:mm:ss a';\n        }\n\n        if (nzDisabled) {\n          var value = nzDisabled.currentValue;\n          var input = this.inputRef.nativeElement;\n\n          if (value) {\n            this.renderer.setAttribute(input, 'disabled', '');\n          } else {\n            this.renderer.removeAttribute(input, 'disabled');\n          }\n        }\n\n        if (nzAutoFocus) {\n          this.updateAutoFocus();\n        }\n      }\n    }, {\n      key: \"parseTimeString\",\n      value: function parseTimeString(str) {\n        var value = this.dateHelper.parseTime(str, this.nzFormat) || null;\n\n        if (isValid(value)) {\n          this.value = value;\n          this.cdr.markForCheck();\n        }\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.isInit = true;\n        this.updateAutoFocus();\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(time) {\n        var result;\n\n        if (time instanceof Date) {\n          result = time;\n        } else if (isNil(time)) {\n          result = null;\n        } else {\n          warn('Non-Date type is not recommended for time-picker, use \"Date\" type.');\n          result = new Date(time);\n        }\n\n        this.setValue(result, true);\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this._onChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this._onTouched = fn;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(isDisabled) {\n        this.nzDisabled = isDisabled;\n        this.cdr.markForCheck();\n      }\n    }]);\n\n    return NzTimePickerComponent;\n  }();\n\n  NzTimePickerComponent.ɵfac = function NzTimePickerComponent_Factory(t) {\n    return new (t || NzTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateHelperService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8));\n  };\n\n  NzTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTimePickerComponent,\n    selectors: [[\"nz-time-picker\"]],\n    viewQuery: function NzTimePickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 3);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputRef = _t.first);\n      }\n    },\n    hostVars: 10,\n    hostBindings: function NzTimePickerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzTimePickerComponent_click_HostBindingHandler() {\n          return ctx.open();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-picker-large\", ctx.nzSize === \"large\")(\"ant-picker-small\", ctx.nzSize === \"small\")(\"ant-picker-disabled\", ctx.nzDisabled)(\"ant-picker-focused\", ctx.focused)(\"ant-picker-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzId: \"nzId\",\n      nzSize: \"nzSize\",\n      nzHourStep: \"nzHourStep\",\n      nzMinuteStep: \"nzMinuteStep\",\n      nzSecondStep: \"nzSecondStep\",\n      nzClearText: \"nzClearText\",\n      nzNowText: \"nzNowText\",\n      nzOkText: \"nzOkText\",\n      nzPopupClassName: \"nzPopupClassName\",\n      nzPlaceHolder: \"nzPlaceHolder\",\n      nzFormat: \"nzFormat\",\n      nzOpen: \"nzOpen\",\n      nzUse12Hours: \"nzUse12Hours\",\n      nzSuffixIcon: \"nzSuffixIcon\",\n      nzHideDisabledOptions: \"nzHideDisabledOptions\",\n      nzAllowEmpty: \"nzAllowEmpty\",\n      nzDisabled: \"nzDisabled\",\n      nzAutoFocus: \"nzAutoFocus\",\n      nzBackdrop: \"nzBackdrop\",\n      nzAddOn: \"nzAddOn\",\n      nzDefaultOpenValue: \"nzDefaultOpenValue\",\n      nzDisabledHours: \"nzDisabledHours\",\n      nzDisabledMinutes: \"nzDisabledMinutes\",\n      nzDisabledSeconds: \"nzDisabledSeconds\"\n    },\n    outputs: {\n      nzOpenChange: \"nzOpenChange\"\n    },\n    exportAs: [\"nzTimePicker\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: NzTimePickerComponent,\n      multi: true\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 15,\n    consts: [[1, \"ant-picker-input\"], [\"type\", \"text\", 3, \"size\", \"placeholder\", \"ngModel\", \"disabled\", \"ngModelChange\", \"focus\", \"blur\", \"keyup.enter\", \"keyup.escape\"], [\"inputElement\", \"\"], [1, \"ant-picker-suffix\"], [4, \"nzStringTemplateOutlet\"], [\"class\", \"ant-picker-clear\", 3, \"click\", 4, \"ngIf\"], [\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayTransformOriginOn\", \"detach\", \"overlayOutsideClick\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-picker-clear\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\"], [1, \"ant-picker-dropdown\"], [1, \"ant-picker-panel-container\"], [\"tabindex\", \"-1\", 1, \"ant-picker-panel\"], [3, \"ngClass\", \"format\", \"nzHourStep\", \"nzMinuteStep\", \"nzSecondStep\", \"nzDisabledHours\", \"nzDisabledMinutes\", \"nzDisabledSeconds\", \"nzPlaceHolder\", \"nzHideDisabledOptions\", \"nzUse12Hours\", \"nzDefaultOpenValue\", \"nzAddOn\", \"nzClearText\", \"nzNowText\", \"nzOkText\", \"nzAllowEmpty\", \"ngModel\", \"ngModelChange\", \"closePanel\"]],\n    template: function NzTimePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTimePickerComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.inputValue = $event;\n        })(\"focus\", function NzTimePickerComponent_Template_input_focus_1_listener() {\n          return ctx.onFocus(true);\n        })(\"blur\", function NzTimePickerComponent_Template_input_blur_1_listener() {\n          return ctx.onFocus(false);\n        })(\"keyup.enter\", function NzTimePickerComponent_Template_input_keyup_enter_1_listener() {\n          return ctx.onKeyupEnter();\n        })(\"keyup.escape\", function NzTimePickerComponent_Template_input_keyup_escape_1_listener() {\n          return ctx.onKeyupEsc();\n        })(\"ngModelChange\", function NzTimePickerComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.onInputChange($event);\n        });\n        ɵngcc0.ɵɵpipe(3, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, NzTimePickerComponent_ng_container_5_Template, 2, 1, \"ng-container\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NzTimePickerComponent_span_6_Template, 2, 2, \"span\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, NzTimePickerComponent_ng_template_7_Template, 5, 21, \"ng-template\", 6);\n        ɵngcc0.ɵɵlistener(\"detach\", function NzTimePickerComponent_Template_ng_template_detach_7_listener() {\n          return ctx.close();\n        })(\"overlayOutsideClick\", function NzTimePickerComponent_Template_ng_template_overlayOutsideClick_7_listener($event) {\n          return ctx.onClickOutside($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"size\", ctx.inputSize)(\"placeholder\", ctx.nzPlaceHolder || ɵngcc0.ɵɵpipeBind1(3, 13, ctx.i18nPlaceHolder$))(\"ngModel\", ctx.inputValue)(\"disabled\", ctx.nzDisabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.nzId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzSuffixIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzAllowEmpty && !ctx.nzDisabled && ctx.value);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayPositions\", ctx.overlayPositions)(\"cdkConnectedOverlayOrigin\", ctx.origin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayOffsetY\", -2)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-picker-dropdown\");\n      }\n    },\n    directives: function directives() {\n      return [ɵngcc5.DefaultValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.NzStringTemplateOutletDirective, ɵngcc7.NgIf, ɵngcc8.CdkConnectedOverlay, ɵngcc9.NzConnectedOverlayDirective, ɵngcc10.NzIconDirective, ɵngcc11.ɵNzTransitionPatchDirective, NzTimePickerPanelComponent, ɵngcc7.NgClass];\n    },\n    pipes: function pipes() {\n      return [ɵngcc7.AsyncPipe];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [slideMotion]\n    },\n    changeDetection: 0\n  });\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Number)], NzTimePickerComponent.prototype, \"nzHourStep\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Number)], NzTimePickerComponent.prototype, \"nzMinuteStep\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Number)], NzTimePickerComponent.prototype, \"nzSecondStep\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzTimePickerComponent.prototype, \"nzClearText\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzTimePickerComponent.prototype, \"nzNowText\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzTimePickerComponent.prototype, \"nzOkText\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzTimePickerComponent.prototype, \"nzPopupClassName\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", String)], NzTimePickerComponent.prototype, \"nzFormat\", void 0);\n\n  __decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTimePickerComponent.prototype, \"nzUse12Hours\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTimePickerComponent.prototype, \"nzSuffixIcon\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTimePickerComponent.prototype, \"nzHideDisabledOptions\", void 0);\n\n  __decorate([WithConfig(), InputBoolean(), __metadata(\"design:type\", Boolean)], NzTimePickerComponent.prototype, \"nzAllowEmpty\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTimePickerComponent.prototype, \"nzDisabled\", void 0);\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTimePickerComponent.prototype, \"nzAutoFocus\", void 0);\n\n  __decorate([WithConfig(), __metadata(\"design:type\", Object)], NzTimePickerComponent.prototype, \"nzBackdrop\", void 0);\n\n  return NzTimePickerComponent;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar TimeHolder = /*#__PURE__*/function () {\n  function TimeHolder() {\n    _classCallCheck(this, TimeHolder);\n\n    this.selected12Hours = undefined;\n    this._use12Hours = false;\n    this._changes = new Subject();\n  }\n\n  _createClass(TimeHolder, [{\n    key: \"setMinutes\",\n    value: function setMinutes(value, disabled) {\n      if (value !== this.minutes && !disabled) {\n        this.initValue();\n        this.value.setMinutes(value);\n        this.update();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setHours\",\n    value: function setHours(value, disabled) {\n      if (value !== this.hours && !disabled) {\n        this.initValue();\n\n        if (this._use12Hours) {\n          if (this.selected12Hours === 'PM' && value !== 12) {\n            this.value.setHours(value + 12);\n          } else if (this.selected12Hours === 'AM' && value === 12) {\n            this.value.setHours(0);\n          } else {\n            this.value.setHours(value);\n          }\n        } else {\n          this.value.setHours(value);\n        }\n\n        this.update();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setSeconds\",\n    value: function setSeconds(value, disabled) {\n      if (value !== this.seconds && !disabled) {\n        this.initValue();\n        this.value.setSeconds(value);\n        this.update();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setUse12Hours\",\n    value: function setUse12Hours(value) {\n      this._use12Hours = value;\n      return this;\n    }\n  }, {\n    key: \"changes\",\n    get: function get() {\n      return this._changes.asObservable();\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, use12Hours) {\n      if (isNotNil(use12Hours)) {\n        this._use12Hours = use12Hours;\n      }\n\n      if (value !== this.value) {\n        this._value = value;\n\n        if (isNotNil(this.value)) {\n          if (this._use12Hours && isNotNil(this.hours)) {\n            this.selected12Hours = this.hours >= 12 ? 'PM' : 'AM';\n          }\n        } else {\n          this._clear();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"initValue\",\n    value: function initValue() {\n      if (isNil(this.value)) {\n        this.setValue(new Date(), this._use12Hours);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._clear();\n\n      this.update();\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return !(isNotNil(this.hours) || isNotNil(this.minutes) || isNotNil(this.seconds));\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      this._value = undefined;\n      this.selected12Hours = undefined;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.isEmpty) {\n        this._value = undefined;\n      } else {\n        if (isNotNil(this.hours)) {\n          this.value.setHours(this.hours);\n        }\n\n        if (isNotNil(this.minutes)) {\n          this.value.setMinutes(this.minutes);\n        }\n\n        if (isNotNil(this.seconds)) {\n          this.value.setSeconds(this.seconds);\n        }\n\n        if (this._use12Hours) {\n          if (this.selected12Hours === 'PM' && this.hours < 12) {\n            this.value.setHours(this.hours + 12);\n          }\n\n          if (this.selected12Hours === 'AM' && this.hours >= 12) {\n            this.value.setHours(this.hours - 12);\n          }\n        }\n      }\n\n      this.changed();\n    }\n  }, {\n    key: \"changed\",\n    value: function changed() {\n      this._changes.next(this.value);\n    }\n    /**\n     * @description\n     * UI view hours\n     * Get viewHours which is selected in `time-picker-panel` and its range is [12, 1, 2, ..., 11]\n     */\n\n  }, {\n    key: \"viewHours\",\n    get: function get() {\n      return this._use12Hours && isNotNil(this.hours) ? this.calculateViewHour(this.hours) : this.hours;\n    }\n  }, {\n    key: \"setSelected12Hours\",\n    value: function setSelected12Hours(value) {\n      if (value.toUpperCase() !== this.selected12Hours) {\n        this.selected12Hours = value.toUpperCase();\n        this.update();\n      }\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value || this._defaultOpenValue;\n    }\n  }, {\n    key: \"hours\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.value) === null || _a === void 0 ? void 0 : _a.getHours();\n    }\n  }, {\n    key: \"minutes\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.value) === null || _a === void 0 ? void 0 : _a.getMinutes();\n    }\n  }, {\n    key: \"seconds\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.value) === null || _a === void 0 ? void 0 : _a.getSeconds();\n    }\n  }, {\n    key: \"setDefaultOpenValue\",\n    value: function setDefaultOpenValue(value) {\n      this._defaultOpenValue = value;\n      return this;\n    }\n  }, {\n    key: \"calculateViewHour\",\n    value: function calculateViewHour(value) {\n      var selected12Hours = this.selected12Hours;\n\n      if (selected12Hours === 'PM' && value > 12) {\n        return value - 12;\n      }\n\n      if (selected12Hours === 'AM' && value === 0) {\n        return 12;\n      }\n\n      return value;\n    }\n  }]);\n\n  return TimeHolder;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction makeRange(length) {\n  var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return new Array(Math.ceil(length / step)).fill(0).map(function (_, i) {\n    return (i + start) * step;\n  });\n}\n\nvar NzTimePickerPanelComponent = /*@__PURE__*/function () {\n  var NzTimePickerPanelComponent = /*#__PURE__*/function () {\n    function NzTimePickerPanelComponent(cdr, dateHelper, elementRef) {\n      _classCallCheck(this, NzTimePickerPanelComponent);\n\n      this.cdr = cdr;\n      this.dateHelper = dateHelper;\n      this.elementRef = elementRef;\n      this._nzHourStep = 1;\n      this._nzMinuteStep = 1;\n      this._nzSecondStep = 1;\n      this.unsubscribe$ = new Subject();\n      this._format = 'HH:mm:ss';\n\n      this._disabledHours = function () {\n        return [];\n      };\n\n      this._disabledMinutes = function () {\n        return [];\n      };\n\n      this._disabledSeconds = function () {\n        return [];\n      };\n\n      this._allowEmpty = true;\n      this.time = new TimeHolder();\n      this.hourEnabled = true;\n      this.minuteEnabled = true;\n      this.secondEnabled = true;\n      this.firstScrolled = false;\n      this.enabledColumns = 3;\n      this.nzInDatePicker = false; // If inside a date-picker, more diff works need to be done\n\n      this.nzHideDisabledOptions = false;\n      this.nzUse12Hours = false;\n      this.closePanel = new EventEmitter(); // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-picker-time-panel');\n    }\n\n    _createClass(NzTimePickerPanelComponent, [{\n      key: \"nzAllowEmpty\",\n      get: function get() {\n        return this._allowEmpty;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._allowEmpty = value;\n        }\n      }\n    }, {\n      key: \"nzDisabledHours\",\n      get: function get() {\n        return this._disabledHours;\n      },\n      set: function set(value) {\n        this._disabledHours = value;\n\n        if (!!this._disabledHours) {\n          this.buildHours();\n        }\n      }\n    }, {\n      key: \"nzDisabledMinutes\",\n      get: function get() {\n        return this._disabledMinutes;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._disabledMinutes = value;\n          this.buildMinutes();\n        }\n      }\n    }, {\n      key: \"nzDisabledSeconds\",\n      get: function get() {\n        return this._disabledSeconds;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._disabledSeconds = value;\n          this.buildSeconds();\n        }\n      }\n    }, {\n      key: \"format\",\n      get: function get() {\n        return this._format;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._format = value;\n          this.enabledColumns = 0;\n          var charSet = new Set(value);\n          this.hourEnabled = charSet.has('H') || charSet.has('h');\n          this.minuteEnabled = charSet.has('m');\n          this.secondEnabled = charSet.has('s');\n\n          if (this.hourEnabled) {\n            this.enabledColumns++;\n          }\n\n          if (this.minuteEnabled) {\n            this.enabledColumns++;\n          }\n\n          if (this.secondEnabled) {\n            this.enabledColumns++;\n          }\n\n          if (this.nzUse12Hours) {\n            this.build12Hours();\n          }\n        }\n      }\n    }, {\n      key: \"nzHourStep\",\n      get: function get() {\n        return this._nzHourStep;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._nzHourStep = value;\n          this.buildHours();\n        }\n      }\n    }, {\n      key: \"nzMinuteStep\",\n      get: function get() {\n        return this._nzMinuteStep;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._nzMinuteStep = value;\n          this.buildMinutes();\n        }\n      }\n    }, {\n      key: \"nzSecondStep\",\n      get: function get() {\n        return this._nzSecondStep;\n      },\n      set: function set(value) {\n        if (isNotNil(value)) {\n          this._nzSecondStep = value;\n          this.buildSeconds();\n        }\n      }\n    }, {\n      key: \"trackByFn\",\n      value: function trackByFn(index) {\n        return index;\n      }\n    }, {\n      key: \"buildHours\",\n      value: function buildHours() {\n        var _a;\n\n        var hourRanges = 24;\n        var disabledHours = (_a = this.nzDisabledHours) === null || _a === void 0 ? void 0 : _a.call(this);\n        var startIndex = 0;\n\n        if (this.nzUse12Hours) {\n          hourRanges = 12;\n\n          if (disabledHours) {\n            if (this.time.selected12Hours === 'PM') {\n              /**\n               * Filter and transform hours which greater or equal to 12\n               * [0, 1, 2, ..., 12, 13, 14, 15, ..., 23] => [12, 1, 2, 3, ..., 11]\n               */\n              disabledHours = disabledHours.filter(function (i) {\n                return i >= 12;\n              }).map(function (i) {\n                return i > 12 ? i - 12 : i;\n              });\n            } else {\n              /**\n               * Filter and transform hours which less than 12\n               * [0, 1, 2,..., 12, 13, 14, 15, ...23] => [12, 1, 2, 3, ..., 11]\n               */\n              disabledHours = disabledHours.filter(function (i) {\n                return i < 12 || i === 24;\n              }).map(function (i) {\n                return i === 24 || i === 0 ? 12 : i;\n              });\n            }\n          }\n\n          startIndex = 1;\n        }\n\n        this.hourRange = makeRange(hourRanges, this.nzHourStep, startIndex).map(function (r) {\n          return {\n            index: r,\n            disabled: !!disabledHours && disabledHours.indexOf(r) !== -1\n          };\n        });\n\n        if (this.nzUse12Hours && this.hourRange[this.hourRange.length - 1].index === 12) {\n          var temp = _toConsumableArray(this.hourRange);\n\n          temp.unshift(temp[temp.length - 1]);\n          temp.splice(temp.length - 1, 1);\n          this.hourRange = temp;\n        }\n      }\n    }, {\n      key: \"buildMinutes\",\n      value: function buildMinutes() {\n        var _this2 = this;\n\n        this.minuteRange = makeRange(60, this.nzMinuteStep).map(function (r) {\n          return {\n            index: r,\n            disabled: !!_this2.nzDisabledMinutes && _this2.nzDisabledMinutes(_this2.time.hours).indexOf(r) !== -1\n          };\n        });\n      }\n    }, {\n      key: \"buildSeconds\",\n      value: function buildSeconds() {\n        var _this3 = this;\n\n        this.secondRange = makeRange(60, this.nzSecondStep).map(function (r) {\n          return {\n            index: r,\n            disabled: !!_this3.nzDisabledSeconds && _this3.nzDisabledSeconds(_this3.time.hours, _this3.time.minutes).indexOf(r) !== -1\n          };\n        });\n      }\n    }, {\n      key: \"build12Hours\",\n      value: function build12Hours() {\n        var isUpperFormat = this._format.includes('A');\n\n        this.use12HoursRange = [{\n          index: 0,\n          value: isUpperFormat ? 'AM' : 'am'\n        }, {\n          index: 1,\n          value: isUpperFormat ? 'PM' : 'pm'\n        }];\n      }\n    }, {\n      key: \"buildTimes\",\n      value: function buildTimes() {\n        this.buildHours();\n        this.buildMinutes();\n        this.buildSeconds();\n        this.build12Hours();\n      }\n    }, {\n      key: \"scrollToTime\",\n      value: function scrollToTime() {\n        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        if (this.hourEnabled && this.hourListElement) {\n          this.scrollToSelected(this.hourListElement.nativeElement, this.time.viewHours, delay, 'hour');\n        }\n\n        if (this.minuteEnabled && this.minuteListElement) {\n          this.scrollToSelected(this.minuteListElement.nativeElement, this.time.minutes, delay, 'minute');\n        }\n\n        if (this.secondEnabled && this.secondListElement) {\n          this.scrollToSelected(this.secondListElement.nativeElement, this.time.seconds, delay, 'second');\n        }\n\n        if (this.nzUse12Hours && this.use12HoursListElement) {\n          var selectedHours = this.time.selected12Hours;\n          var index = selectedHours === 'AM' ? 0 : 1;\n          this.scrollToSelected(this.use12HoursListElement.nativeElement, index, delay, '12-hour');\n        }\n      }\n    }, {\n      key: \"selectHour\",\n      value: function selectHour(hour) {\n        this.time.setHours(hour.index, hour.disabled);\n\n        if (!!this._disabledMinutes) {\n          this.buildMinutes();\n        }\n\n        if (this._disabledSeconds || this._disabledMinutes) {\n          this.buildSeconds();\n        }\n      }\n    }, {\n      key: \"selectMinute\",\n      value: function selectMinute(minute) {\n        this.time.setMinutes(minute.index, minute.disabled);\n\n        if (!!this._disabledSeconds) {\n          this.buildSeconds();\n        }\n      }\n    }, {\n      key: \"selectSecond\",\n      value: function selectSecond(second) {\n        this.time.setSeconds(second.index, second.disabled);\n      }\n    }, {\n      key: \"select12Hours\",\n      value: function select12Hours(value) {\n        this.time.setSelected12Hours(value.value);\n\n        if (!!this._disabledHours) {\n          this.buildHours();\n        }\n\n        if (!!this._disabledMinutes) {\n          this.buildMinutes();\n        }\n\n        if (!!this._disabledSeconds) {\n          this.buildSeconds();\n        }\n      }\n    }, {\n      key: \"scrollToSelected\",\n      value: function scrollToSelected(instance, index) {\n        var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var unit = arguments.length > 3 ? arguments[3] : undefined;\n\n        if (!instance) {\n          return;\n        }\n\n        var transIndex = this.translateIndex(index, unit);\n        var currentOption = instance.children[transIndex] || instance.children[0];\n        this.scrollTo(instance, currentOption.offsetTop, duration);\n      }\n    }, {\n      key: \"translateIndex\",\n      value: function translateIndex(index, unit) {\n        var _a, _b, _c;\n\n        if (unit === 'hour') {\n          return this.calcIndex((_a = this.nzDisabledHours) === null || _a === void 0 ? void 0 : _a.call(this), this.hourRange.map(function (item) {\n            return item.index;\n          }).indexOf(index));\n        } else if (unit === 'minute') {\n          return this.calcIndex((_b = this.nzDisabledMinutes) === null || _b === void 0 ? void 0 : _b.call(this, this.time.hours), this.minuteRange.map(function (item) {\n            return item.index;\n          }).indexOf(index));\n        } else if (unit === 'second') {\n          // second\n          return this.calcIndex((_c = this.nzDisabledSeconds) === null || _c === void 0 ? void 0 : _c.call(this, this.time.hours, this.time.minutes), this.secondRange.map(function (item) {\n            return item.index;\n          }).indexOf(index));\n        } else {\n          // 12-hour\n          return this.calcIndex([], this.use12HoursRange.map(function (item) {\n            return item.index;\n          }).indexOf(index));\n        }\n      }\n    }, {\n      key: \"scrollTo\",\n      value: function scrollTo(element, to, duration) {\n        var _this4 = this;\n\n        if (duration <= 0) {\n          element.scrollTop = to;\n          return;\n        }\n\n        var difference = to - element.scrollTop;\n        var perTick = difference / duration * 10;\n        reqAnimFrame(function () {\n          element.scrollTop = element.scrollTop + perTick;\n\n          if (element.scrollTop === to) {\n            return;\n          }\n\n          _this4.scrollTo(element, to, duration - 10);\n        });\n      }\n    }, {\n      key: \"calcIndex\",\n      value: function calcIndex(array, index) {\n        if ((array === null || array === void 0 ? void 0 : array.length) && this.nzHideDisabledOptions) {\n          return index - array.reduce(function (pre, value) {\n            return pre + (value < index ? 1 : 0);\n          }, 0);\n        } else {\n          return index;\n        }\n      }\n    }, {\n      key: \"changed\",\n      value: function changed() {\n        if (this.onChange) {\n          this.onChange(this.time.value);\n        }\n      }\n    }, {\n      key: \"touched\",\n      value: function touched() {\n        if (this.onTouch) {\n          this.onTouch();\n        }\n      }\n    }, {\n      key: \"timeDisabled\",\n      value: function timeDisabled(value) {\n        var _a, _b, _c, _d, _e, _f;\n\n        var hour = value.getHours();\n        var minute = value.getMinutes();\n        var second = value.getSeconds();\n        return ((_b = (_a = this.nzDisabledHours) === null || _a === void 0 ? void 0 : _a.call(this).indexOf(hour)) !== null && _b !== void 0 ? _b : -1) > -1 || ((_d = (_c = this.nzDisabledMinutes) === null || _c === void 0 ? void 0 : _c.call(this, hour).indexOf(minute)) !== null && _d !== void 0 ? _d : -1) > -1 || ((_f = (_e = this.nzDisabledSeconds) === null || _e === void 0 ? void 0 : _e.call(this, hour, minute).indexOf(second)) !== null && _f !== void 0 ? _f : -1) > -1;\n      }\n    }, {\n      key: \"onClickNow\",\n      value: function onClickNow() {\n        var now = new Date();\n\n        if (this.timeDisabled(now)) {\n          return;\n        }\n\n        this.time.setValue(now);\n        this.changed();\n        this.closePanel.emit();\n      }\n    }, {\n      key: \"onClickOk\",\n      value: function onClickOk() {\n        this.closePanel.emit();\n      }\n    }, {\n      key: \"isSelectedHour\",\n      value: function isSelectedHour(hour) {\n        return hour.index === this.time.viewHours;\n      }\n    }, {\n      key: \"isSelectedMinute\",\n      value: function isSelectedMinute(minute) {\n        return minute.index === this.time.minutes;\n      }\n    }, {\n      key: \"isSelectedSecond\",\n      value: function isSelectedSecond(second) {\n        return second.index === this.time.seconds;\n      }\n    }, {\n      key: \"isSelected12Hours\",\n      value: function isSelected12Hours(value) {\n        return value.value.toUpperCase() === this.time.selected12Hours;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this5 = this;\n\n        this.time.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(function () {\n          _this5.changed();\n\n          _this5.touched();\n\n          _this5.scrollToTime(120);\n        });\n        this.buildTimes();\n        setTimeout(function () {\n          _this5.scrollToTime();\n\n          _this5.firstScrolled = true;\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzUse12Hours = changes.nzUse12Hours,\n            nzDefaultOpenValue = changes.nzDefaultOpenValue;\n\n        if (!(nzUse12Hours === null || nzUse12Hours === void 0 ? void 0 : nzUse12Hours.previousValue) && (nzUse12Hours === null || nzUse12Hours === void 0 ? void 0 : nzUse12Hours.currentValue)) {\n          this.build12Hours();\n          this.enabledColumns++;\n        }\n\n        if (nzDefaultOpenValue === null || nzDefaultOpenValue === void 0 ? void 0 : nzDefaultOpenValue.currentValue) {\n          this.time.setDefaultOpenValue(this.nzDefaultOpenValue || new Date());\n        }\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.time.setValue(value, this.nzUse12Hours);\n        this.buildTimes();\n\n        if (value && this.firstScrolled) {\n          this.scrollToTime(120);\n        } // Mark this component to be checked manually with internal properties changing (see: https://github.com/angular/angular/issues/10816)\n\n\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouch = fn;\n      }\n      /**\n       * Prevent input losing focus when click panel\n       * @param event\n       */\n\n    }, {\n      key: \"onMousedown\",\n      value: function onMousedown(event) {\n        event.preventDefault();\n      }\n    }]);\n\n    return NzTimePickerPanelComponent;\n  }();\n\n  NzTimePickerPanelComponent.ɵfac = function NzTimePickerPanelComponent_Factory(t) {\n    return new (t || NzTimePickerPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateHelperService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NzTimePickerPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTimePickerPanelComponent,\n    selectors: [[\"nz-time-picker-panel\"]],\n    viewQuery: function NzTimePickerPanelComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n        ɵngcc0.ɵɵviewQuery(_c4, 1);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hourListElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minuteListElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.secondListElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.use12HoursListElement = _t.first);\n      }\n    },\n    hostVars: 12,\n    hostBindings: function NzTimePickerPanelComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzTimePickerPanelComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onMousedown($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-picker-time-panel-column-0\", ctx.enabledColumns === 0 && !ctx.nzInDatePicker)(\"ant-picker-time-panel-column-1\", ctx.enabledColumns === 1 && !ctx.nzInDatePicker)(\"ant-picker-time-panel-column-2\", ctx.enabledColumns === 2 && !ctx.nzInDatePicker)(\"ant-picker-time-panel-column-3\", ctx.enabledColumns === 3 && !ctx.nzInDatePicker)(\"ant-picker-time-panel-narrow\", ctx.enabledColumns < 3)(\"ant-picker-time-panel-placement-bottomLeft\", !ctx.nzInDatePicker);\n      }\n    },\n    inputs: {\n      nzInDatePicker: \"nzInDatePicker\",\n      nzHideDisabledOptions: \"nzHideDisabledOptions\",\n      nzUse12Hours: \"nzUse12Hours\",\n      nzAllowEmpty: \"nzAllowEmpty\",\n      nzDisabledHours: \"nzDisabledHours\",\n      nzDisabledMinutes: \"nzDisabledMinutes\",\n      nzDisabledSeconds: \"nzDisabledSeconds\",\n      format: \"format\",\n      nzHourStep: \"nzHourStep\",\n      nzMinuteStep: \"nzMinuteStep\",\n      nzSecondStep: \"nzSecondStep\",\n      nzAddOn: \"nzAddOn\",\n      nzClearText: \"nzClearText\",\n      nzNowText: \"nzNowText\",\n      nzOkText: \"nzOkText\",\n      nzPlaceHolder: \"nzPlaceHolder\",\n      nzDefaultOpenValue: \"nzDefaultOpenValue\"\n    },\n    outputs: {\n      closePanel: \"closePanel\"\n    },\n    exportAs: [\"nzTimePickerPanel\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: NzTimePickerPanelComponent,\n      multi: true\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 7,\n    vars: 6,\n    consts: [[\"class\", \"ant-picker-header\", 4, \"ngIf\"], [1, \"ant-picker-content\"], [\"class\", \"ant-picker-time-panel-column\", \"style\", \"position: relative;\", 4, \"ngIf\"], [\"class\", \"ant-picker-footer\", 4, \"ngIf\"], [1, \"ant-picker-header\"], [1, \"ant-picker-header-view\"], [1, \"ant-picker-time-panel-column\", 2, \"position\", \"relative\"], [\"hourListElement\", \"\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"ant-picker-time-panel-cell\", 3, \"ant-picker-time-panel-cell-selected\", \"ant-picker-time-panel-cell-disabled\", \"click\", 4, \"ngIf\"], [1, \"ant-picker-time-panel-cell\", 3, \"click\"], [1, \"ant-picker-time-panel-cell-inner\"], [\"minuteListElement\", \"\"], [\"secondListElement\", \"\"], [\"use12HoursListElement\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"ant-picker-time-panel-cell\", 3, \"ant-picker-time-panel-cell-selected\", \"click\", 4, \"ngIf\"], [1, \"ant-picker-footer\"], [\"class\", \"ant-picker-footer-extra\", 4, \"ngIf\"], [1, \"ant-picker-ranges\"], [1, \"ant-picker-now\"], [3, \"click\"], [1, \"ant-picker-ok\"], [\"nz-button\", \"\", \"type\", \"button\", \"nzSize\", \"small\", \"nzType\", \"primary\", 3, \"click\"], [1, \"ant-picker-footer-extra\"], [3, \"ngTemplateOutlet\"]],\n    template: function NzTimePickerPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTimePickerPanelComponent_div_0_Template, 3, 1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NzTimePickerPanelComponent_ul_2_Template, 3, 2, \"ul\", 2);\n        ɵngcc0.ɵɵtemplate(3, NzTimePickerPanelComponent_ul_3_Template, 3, 2, \"ul\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzTimePickerPanelComponent_ul_4_Template, 3, 2, \"ul\", 2);\n        ɵngcc0.ɵɵtemplate(5, NzTimePickerPanelComponent_ul_5_Template, 3, 1, \"ul\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NzTimePickerPanelComponent_div_6_Template, 11, 7, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzInDatePicker);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hourEnabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.minuteEnabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.secondEnabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzUse12Hours);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.nzInDatePicker);\n      }\n    },\n    directives: [ɵngcc7.NgIf, ɵngcc7.NgForOf, ɵngcc12.NzButtonComponent, ɵngcc13.NzWaveDirective, ɵngcc11.ɵNzTransitionPatchDirective, ɵngcc7.NgTemplateOutlet],\n    pipes: [ɵngcc7.DecimalPipe, ɵngcc2.NzI18nPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTimePickerPanelComponent.prototype, \"nzUse12Hours\", void 0);\n\n  return NzTimePickerPanelComponent;\n}();\n\nvar NzTimePickerModule = /*@__PURE__*/function () {\n  var NzTimePickerModule = function NzTimePickerModule() {\n    _classCallCheck(this, NzTimePickerModule);\n  };\n\n  NzTimePickerModule.ɵfac = function NzTimePickerModule_Factory(t) {\n    return new (t || NzTimePickerModule)();\n  };\n\n  NzTimePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzTimePickerModule\n  });\n  NzTimePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, FormsModule, NzI18nModule, OverlayModule, NzIconModule, NzOverlayModule, NzOutletModule, NzButtonModule]]\n  });\n  return NzTimePickerModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTimePickerModule, {\n    declarations: function declarations() {\n      return [NzTimePickerComponent, NzTimePickerPanelComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, FormsModule, NzI18nModule, OverlayModule, NzIconModule, NzOverlayModule, NzOutletModule, NzButtonModule];\n    },\n    exports: function exports() {\n      return [NzTimePickerPanelComponent, NzTimePickerComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTimePickerComponent, NzTimePickerModule, NzTimePickerPanelComponent }; //# sourceMappingURL=ng-zorro-antd-time-picker.js.map","map":null,"metadata":{},"sourceType":"module"}