{"ast":null,"code":"import _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Regular Expressions for parsing tags and attributes\n\nimport * as ɵngcc0 from '@angular/core';\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // ! to ~ is the ASCII range.\n\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\n\nfunction encodeEntities(value) {\n  return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, function (match) {\n    var hi = match.charCodeAt(0);\n    var low = match.charCodeAt(1);\n    return \"&#\".concat((hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000, \";\");\n  }).replace(NON_ALPHANUMERIC_REGEXP, function (match) {\n    return \"&#\".concat(match.charCodeAt(0), \";\");\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nvar NzHighlightPipe = /*@__PURE__*/function () {\n  var NzHighlightPipe = /*#__PURE__*/function () {\n    function NzHighlightPipe() {\n      _classCallCheck(this, NzHighlightPipe);\n\n      this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n    }\n\n    _createClass(NzHighlightPipe, [{\n      key: \"transform\",\n      value: function transform(value, highlightValue, flags, klass) {\n        if (!highlightValue) {\n          return value;\n        } // Escapes regex keyword to interpret these characters literally\n\n\n        var searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n        var wrapValue = value.replace(searchValue, \"\".concat(this.UNIQUE_WRAPPERS[0], \"$&\").concat(this.UNIQUE_WRAPPERS[1]));\n        return encodeEntities(wrapValue).replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? \"<span class=\\\"\".concat(klass, \"\\\">\") : '<span>').replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n      }\n    }]);\n\n    return NzHighlightPipe;\n  }();\n\n  NzHighlightPipe.ɵfac = function NzHighlightPipe_Factory(t) {\n    return new (t || NzHighlightPipe)();\n  };\n\n  NzHighlightPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n    name: \"nzHighlight\",\n    type: NzHighlightPipe,\n    pure: true\n  });\n  return NzHighlightPipe;\n}();\n\nvar NzHighlightModule = /*@__PURE__*/function () {\n  var NzHighlightModule = function NzHighlightModule() {\n    _classCallCheck(this, NzHighlightModule);\n  };\n\n  NzHighlightModule.ɵfac = function NzHighlightModule_Factory(t) {\n    return new (t || NzHighlightModule)();\n  };\n\n  NzHighlightModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzHighlightModule\n  });\n  NzHighlightModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NzHighlightModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzHighlightModule, {\n    declarations: function declarations() {\n      return [NzHighlightPipe];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NzHighlightPipe];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzHighlightModule, NzHighlightPipe }; //# sourceMappingURL=ng-zorro-antd-core-highlight.js.map","map":null,"metadata":{},"sourceType":"module"}