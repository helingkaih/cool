{"ast":null,"code":"import _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Renderer2, ElementRef, Optional, Input, Output, NgModule } from '@angular/core';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.closeTag($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar NzTagComponent = /*@__PURE__*/function () {\n  var NzTagComponent = /*#__PURE__*/function () {\n    function NzTagComponent(cdr, renderer, elementRef, directionality) {\n      _classCallCheck(this, NzTagComponent);\n\n      this.cdr = cdr;\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this.isPresetColor = false;\n      this.nzMode = 'default';\n      this.nzChecked = false;\n      this.nzOnClose = new EventEmitter();\n      this.nzCheckedChange = new EventEmitter();\n      this.dir = 'ltr';\n      this.destroy$ = new Subject(); // TODO: move to host after View Engine deprecation\n\n      this.elementRef.nativeElement.classList.add('ant-tag');\n    }\n\n    _createClass(NzTagComponent, [{\n      key: \"updateCheckedStatus\",\n      value: function updateCheckedStatus() {\n        if (this.nzMode === 'checkable') {\n          this.nzChecked = !this.nzChecked;\n          this.nzCheckedChange.emit(this.nzChecked);\n        }\n      }\n    }, {\n      key: \"closeTag\",\n      value: function closeTag(e) {\n        this.nzOnClose.emit(e);\n\n        if (!e.defaultPrevented) {\n          this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n        }\n      }\n      /**\n       * @deprecated\n       * move to host after View Engine deprecation\n       * host: {\n       *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n       * }\n       */\n\n    }, {\n      key: \"clearPresetColor\",\n      value: function clearPresetColor() {\n        var _hostElement$classLis;\n\n        var hostElement = this.elementRef.nativeElement; // /(ant-tag-(?:pink|red|...))/g\n\n        var regexp = new RegExp(\"(ant-tag-(?:\".concat([].concat(_toConsumableArray(presetColors), _toConsumableArray(statusColors)).join('|'), \"))\"), 'g');\n        var classname = hostElement.classList.toString();\n        var matches = [];\n        var match = regexp.exec(classname);\n\n        while (match !== null) {\n          matches.push(match[1]);\n          match = regexp.exec(classname);\n        }\n\n        (_hostElement$classLis = hostElement.classList).remove.apply(_hostElement$classLis, matches);\n      }\n      /**\n       * @deprecated\n       * move to host after View Engine deprecation\n       * host: {\n       *   '[class]': `isPresetColor ? ('ant-tag-' + nzColor) : ''`\n       * }\n       */\n\n    }, {\n      key: \"setPresetColor\",\n      value: function setPresetColor() {\n        var hostElement = this.elementRef.nativeElement;\n        this.clearPresetColor();\n\n        if (!this.nzColor) {\n          this.isPresetColor = false;\n        } else {\n          this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n        }\n\n        if (this.isPresetColor) {\n          hostElement.classList.add(\"ant-tag-\".concat(this.nzColor));\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        var _a;\n\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n          _this.dir = direction;\n\n          _this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzColor = changes.nzColor;\n\n        if (nzColor) {\n          this.setPresetColor();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    }]);\n\n    return NzTagComponent;\n  }();\n\n  NzTagComponent.ɵfac = function NzTagComponent_Factory(t) {\n    return new (t || NzTagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8));\n  };\n\n  NzTagComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzTagComponent,\n    selectors: [[\"nz-tag\"]],\n    hostVars: 10,\n    hostBindings: function NzTagComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() {\n          return ctx.updateCheckedStatus();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n        ɵngcc0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzMode: \"nzMode\",\n      nzChecked: \"nzChecked\",\n      nzColor: \"nzColor\"\n    },\n    outputs: {\n      nzOnClose: \"nzOnClose\",\n      nzCheckedChange: \"nzCheckedChange\"\n    },\n    exportAs: [\"nzTag\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]],\n    template: function NzTagComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc3.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTagComponent.prototype, \"nzChecked\", void 0);\n\n  return NzTagComponent;\n}();\n\nvar NzTagModule = /*@__PURE__*/function () {\n  var NzTagModule = function NzTagModule() {\n    _classCallCheck(this, NzTagModule);\n  };\n\n  NzTagModule.ɵfac = function NzTagModule_Factory(t) {\n    return new (t || NzTagModule)();\n  };\n\n  NzTagModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzTagModule\n  });\n  NzTagModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]]\n  });\n  return NzTagModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTagModule, {\n    declarations: function declarations() {\n      return [NzTagComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, FormsModule, NzIconModule];\n    },\n    exports: function exports() {\n      return [NzTagComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTagComponent, NzTagModule }; //# sourceMappingURL=ng-zorro-antd-tag.js.map","map":null,"metadata":{},"sourceType":"module"}