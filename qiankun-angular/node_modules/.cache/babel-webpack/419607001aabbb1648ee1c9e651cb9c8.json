{"ast":null,"code":"import _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, RendererFactory2, Injectable, Optional, Inject, Self, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc3 from '@angular/common/http';\nvar NZ_ICONS_USED_BY_ZORRO = [BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, StarFill, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NZ_ICONS = new InjectionToken('nz_icons');\nvar NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nvar DEFAULT_TWOTONE_COLOR = '#1890ff';\n\nvar NzIconService = /*@__PURE__*/function () {\n  var NzIconService = /*#__PURE__*/function (_IconService) {\n    _inherits(NzIconService, _IconService);\n\n    var _super = _createSuper(NzIconService);\n\n    function NzIconService(rendererFactory, sanitizer, nzConfigService, handler, _document, icons) {\n      var _this2;\n\n      var _this;\n\n      _classCallCheck(this, NzIconService);\n\n      _this = _super.call(this, rendererFactory, handler, _document, sanitizer);\n      _this.nzConfigService = nzConfigService;\n      _this.configUpdated$ = new Subject();\n      _this.iconfontCache = new Set();\n\n      _this.onConfigChange();\n\n      (_this2 = _this).addIcon.apply(_this2, NZ_ICONS_USED_BY_ZORRO.concat(_toConsumableArray(icons || [])));\n\n      _this.configDefaultTwotoneColor();\n\n      _this.configDefaultTheme();\n\n      return _this;\n    }\n\n    _createClass(NzIconService, [{\n      key: \"normalizeSvgElement\",\n      value: function normalizeSvgElement(svg) {\n        if (!svg.getAttribute('viewBox')) {\n          this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n        }\n\n        if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n          this._renderer.setAttribute(svg, 'width', '1em');\n\n          this._renderer.setAttribute(svg, 'height', '1em');\n        }\n\n        if (!svg.getAttribute('fill')) {\n          this._renderer.setAttribute(svg, 'fill', 'currentColor');\n        }\n      }\n    }, {\n      key: \"fetchFromIconfont\",\n      value: function fetchFromIconfont(opt) {\n        var scriptUrl = opt.scriptUrl;\n\n        if (this._document && !this.iconfontCache.has(scriptUrl)) {\n          var script = this._renderer.createElement('script');\n\n          this._renderer.setAttribute(script, 'src', scriptUrl);\n\n          this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n\n          this._renderer.appendChild(this._document.body, script);\n\n          this.iconfontCache.add(scriptUrl);\n        }\n      }\n    }, {\n      key: \"createIconfontIcon\",\n      value: function createIconfontIcon(type) {\n        return this._createSVGElementFromString(\"<svg><use xlink:href=\\\"\".concat(type, \"\\\"></svg>\"));\n      }\n    }, {\n      key: \"onConfigChange\",\n      value: function onConfigChange() {\n        var _this3 = this;\n\n        this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(function () {\n          _this3.configDefaultTwotoneColor();\n\n          _this3.configDefaultTheme();\n\n          _this3.configUpdated$.next();\n        });\n      }\n    }, {\n      key: \"configDefaultTheme\",\n      value: function configDefaultTheme() {\n        var iconConfig = this.getConfig();\n        this.defaultTheme = iconConfig.nzTheme || 'outline';\n      }\n    }, {\n      key: \"configDefaultTwotoneColor\",\n      value: function configDefaultTwotoneColor() {\n        var iconConfig = this.getConfig();\n        var defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n        var primaryColor = DEFAULT_TWOTONE_COLOR;\n\n        if (defaultTwotoneColor) {\n          if (defaultTwotoneColor.startsWith('#')) {\n            primaryColor = defaultTwotoneColor;\n          } else {\n            warn('Twotone color must be a hex color!');\n          }\n        }\n\n        this.twoToneColor = {\n          primaryColor: primaryColor\n        };\n      }\n    }, {\n      key: \"getConfig\",\n      value: function getConfig() {\n        return this.nzConfigService.getConfigForComponent('icon') || {};\n      }\n    }]);\n\n    return NzIconService;\n  }(IconService);\n\n  NzIconService.ɵfac = function NzIconService_Factory(t) {\n    return new (t || NzIconService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵinject(ɵngcc2.NzConfigService), ɵngcc0.ɵɵinject(ɵngcc3.HttpBackend, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(NZ_ICONS, 8));\n  };\n\n  NzIconService.ɵprov = ɵɵdefineInjectable({\n    factory: function NzIconService_Factory() {\n      return new NzIconService(ɵɵinject(RendererFactory2), ɵɵinject(DomSanitizer), ɵɵinject(NzConfigService), ɵɵinject(HttpBackend, 8), ɵɵinject(DOCUMENT, 8), ɵɵinject(NZ_ICONS, 8));\n    },\n    token: NzIconService,\n    providedIn: \"root\"\n  });\n  return NzIconService;\n}();\n\nvar NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\n\nvar NzIconPatchService = /*@__PURE__*/function () {\n  var NzIconPatchService = /*#__PURE__*/function () {\n    function NzIconPatchService(extraIcons, rootIconService) {\n      _classCallCheck(this, NzIconPatchService);\n\n      this.extraIcons = extraIcons;\n      this.rootIconService = rootIconService;\n      this.patched = false;\n    }\n\n    _createClass(NzIconPatchService, [{\n      key: \"doPatch\",\n      value: function doPatch() {\n        var _this4 = this;\n\n        if (this.patched) {\n          return;\n        }\n\n        this.extraIcons.forEach(function (iconDefinition) {\n          return _this4.rootIconService.addIcon(iconDefinition);\n        });\n        this.patched = true;\n      }\n    }]);\n\n    return NzIconPatchService;\n  }();\n\n  NzIconPatchService.ɵfac = function NzIconPatchService_Factory(t) {\n    return new (t || NzIconPatchService)(ɵngcc0.ɵɵinject(NZ_ICONS_PATCH, 2), ɵngcc0.ɵɵinject(NzIconService));\n  };\n\n  NzIconPatchService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: NzIconPatchService,\n    factory: NzIconPatchService.ɵfac\n  });\n  return NzIconPatchService;\n}();\n\nvar NzIconDirective = /*@__PURE__*/function () {\n  var NzIconDirective = /*#__PURE__*/function (_IconDirective) {\n    _inherits(NzIconDirective, _IconDirective);\n\n    var _super2 = _createSuper(NzIconDirective);\n\n    function NzIconDirective(elementRef, iconService, renderer, iconPatch) {\n      var _this5;\n\n      _classCallCheck(this, NzIconDirective);\n\n      _this5 = _super2.call(this, iconService, elementRef, renderer);\n      _this5.iconService = iconService;\n      _this5.renderer = renderer;\n      _this5.cacheClassName = null;\n      _this5.nzRotate = 0;\n      _this5.spin = false;\n\n      if (iconPatch) {\n        iconPatch.doPatch();\n      }\n\n      _this5.el = elementRef.nativeElement;\n      return _this5;\n    }\n\n    _createClass(NzIconDirective, [{\n      key: \"nzSpin\",\n      set: function set(value) {\n        this.spin = value;\n      }\n    }, {\n      key: \"nzType\",\n      set: function set(value) {\n        this.type = value;\n      }\n    }, {\n      key: \"nzTheme\",\n      set: function set(value) {\n        this.theme = value;\n      }\n    }, {\n      key: \"nzTwotoneColor\",\n      set: function set(value) {\n        this.twoToneColor = value;\n      }\n    }, {\n      key: \"nzIconfont\",\n      set: function set(value) {\n        this.iconfont = value;\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var nzType = changes.nzType,\n            nzTwotoneColor = changes.nzTwotoneColor,\n            nzSpin = changes.nzSpin,\n            nzTheme = changes.nzTheme,\n            nzRotate = changes.nzRotate;\n\n        if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n          this.changeIcon2();\n        } else if (nzRotate) {\n          this.handleRotate(this.el.firstChild);\n        } else {\n          this._setSVGElement(this.iconService.createIconfontIcon(\"#\".concat(this.iconfont)));\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.renderer.setAttribute(this.el, 'class', \"anticon \".concat(this.el.className).trim());\n      }\n      /**\n       * If custom content is provided, try to normalize SVG elements.\n       */\n\n    }, {\n      key: \"ngAfterContentChecked\",\n      value: function ngAfterContentChecked() {\n        if (!this.type) {\n          var children = this.el.children;\n          var length = children.length;\n\n          if (!this.type && children.length) {\n            while (length--) {\n              var child = children[length];\n\n              if (child.tagName.toLowerCase() === 'svg') {\n                this.iconService.normalizeSvgElement(child);\n              }\n            }\n          }\n        }\n      }\n      /**\n       * Replacement of `changeIcon` for more modifications.\n       */\n\n    }, {\n      key: \"changeIcon2\",\n      value: function changeIcon2() {\n        var _this6 = this;\n\n        this.setClassName();\n\n        this._changeIcon().then(function (svgOrRemove) {\n          if (svgOrRemove) {\n            _this6.setSVGData(svgOrRemove);\n\n            _this6.handleSpin(svgOrRemove);\n\n            _this6.handleRotate(svgOrRemove);\n          }\n        });\n      }\n    }, {\n      key: \"handleSpin\",\n      value: function handleSpin(svg) {\n        if (this.spin || this.type === 'loading') {\n          this.renderer.addClass(svg, 'anticon-spin');\n        } else {\n          this.renderer.removeClass(svg, 'anticon-spin');\n        }\n      }\n    }, {\n      key: \"handleRotate\",\n      value: function handleRotate(svg) {\n        if (this.nzRotate) {\n          this.renderer.setAttribute(svg, 'style', \"transform: rotate(\".concat(this.nzRotate, \"deg)\"));\n        } else {\n          this.renderer.removeAttribute(svg, 'style');\n        }\n      }\n    }, {\n      key: \"setClassName\",\n      value: function setClassName() {\n        if (this.cacheClassName) {\n          this.renderer.removeClass(this.el, this.cacheClassName);\n        }\n\n        this.cacheClassName = \"anticon-\".concat(this.type);\n        this.renderer.addClass(this.el, this.cacheClassName);\n      }\n    }, {\n      key: \"setSVGData\",\n      value: function setSVGData(svg) {\n        this.renderer.setAttribute(svg, 'data-icon', this.type);\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n      }\n    }]);\n\n    return NzIconDirective;\n  }(IconDirective);\n\n  NzIconDirective.ɵfac = function NzIconDirective_Factory(t) {\n    return new (t || NzIconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzIconService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NzIconPatchService, 8));\n  };\n\n  NzIconDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzIconDirective,\n    selectors: [[\"\", \"nz-icon\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NzIconDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"anticon\", true);\n      }\n    },\n    inputs: {\n      nzRotate: \"nzRotate\",\n      nzSpin: \"nzSpin\",\n      nzType: \"nzType\",\n      nzTheme: \"nzTheme\",\n      nzTwotoneColor: \"nzTwotoneColor\",\n      nzIconfont: \"nzIconfont\"\n    },\n    exportAs: [\"nzIcon\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], NzIconDirective.prototype, \"nzSpin\", null);\n\n  return NzIconDirective;\n}();\n\nvar NzIconModule = /*@__PURE__*/function () {\n  var NzIconModule = /*#__PURE__*/function () {\n    function NzIconModule() {\n      _classCallCheck(this, NzIconModule);\n    }\n\n    _createClass(NzIconModule, null, [{\n      key: \"forRoot\",\n      value: function forRoot(icons) {\n        return {\n          ngModule: NzIconModule,\n          providers: [{\n            provide: NZ_ICONS,\n            useValue: icons\n          }]\n        };\n      }\n    }, {\n      key: \"forChild\",\n      value: function forChild(icons) {\n        return {\n          ngModule: NzIconModule,\n          providers: [NzIconPatchService, {\n            provide: NZ_ICONS_PATCH,\n            useValue: icons\n          }]\n        };\n      }\n    }]);\n\n    return NzIconModule;\n  }();\n\n  NzIconModule.ɵfac = function NzIconModule_Factory(t) {\n    return new (t || NzIconModule)();\n  };\n\n  NzIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzIconModule\n  });\n  NzIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[PlatformModule]]\n  });\n  return NzIconModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzIconModule, {\n    declarations: function declarations() {\n      return [NzIconDirective];\n    },\n    imports: function imports() {\n      return [PlatformModule];\n    },\n    exports: function exports() {\n      return [NzIconDirective];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService }; //# sourceMappingURL=ng-zorro-antd-icon.js.map","map":null,"metadata":{},"sourceType":"module"}