{"ast":null,"code":"import _toConsumableArray from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"F:/qiankun/qiankun-angular/node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayConfig, ConnectionPositionPair, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, forwardRef, EventEmitter, ElementRef, Component, ChangeDetectionStrategy, Optional, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ViewChild, TemplateRef, ViewChildren, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { __decorate, __metadata } from 'tslib';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, TAB, ESCAPE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS } from 'ng-zorro-antd/core/overlay';\nimport { getMentions as _getMentions, getCaretCoordinates, InputBoolean } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\nvar _c0 = [\"items\"];\n\nfunction NzMentionComponent_ng_template_1_li_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c1 = function _c1(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzMentionComponent_ng_template_1_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzMentionComponent_ng_template_1_li_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var suggestion_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.suggestionTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, suggestion_r4));\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_li_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var suggestion_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.nzValueWith(suggestion_r4));\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function NzMentionComponent_ng_template_1_li_1_Template_li_mousedown_0_listener($event) {\n      return $event.preventDefault();\n    })(\"click\", function NzMentionComponent_ng_template_1_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var suggestion_r4 = ctx.$implicit;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r14.selectSuggestion(suggestion_r4);\n    });\n    ɵngcc0.ɵɵtemplate(2, NzMentionComponent_ng_template_1_li_1_ng_container_2_Template, 2, 4, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(3, NzMentionComponent_ng_template_1_li_1_ng_template_3_Template, 1, 1, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r5 = ctx.index;\n\n    var _r8 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"focus\", i_r5 === ctx_r2.activeIndex);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.suggestionTemplate)(\"ngIfElse\", _r8);\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_li_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵelement(1, \"i\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_li_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.nzNotFoundContent);\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 9);\n    ɵngcc0.ɵɵtemplate(1, NzMentionComponent_ng_template_1_li_2_span_1_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, NzMentionComponent_ng_template_1_li_2_span_2_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.nzLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.nzLoading);\n  }\n}\n\nfunction NzMentionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 1);\n    ɵngcc0.ɵɵtemplate(1, NzMentionComponent_ng_template_1_li_1_Template, 5, 4, \"li\", 2);\n    ɵngcc0.ɵɵtemplate(2, NzMentionComponent_ng_template_1_li_2_Template, 3, 2, \"li\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.filteredSuggestions);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.filteredSuggestions.length === 0);\n  }\n}\n\nvar _c2 = [\"*\"];\n\nvar NzMentionSuggestionDirective = /*@__PURE__*/function () {\n  var NzMentionSuggestionDirective = function NzMentionSuggestionDirective() {\n    _classCallCheck(this, NzMentionSuggestionDirective);\n  };\n\n  NzMentionSuggestionDirective.ɵfac = function NzMentionSuggestionDirective_Factory(t) {\n    return new (t || NzMentionSuggestionDirective)();\n  };\n\n  NzMentionSuggestionDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzMentionSuggestionDirective,\n    selectors: [[\"\", \"nzMentionSuggestion\", \"\"]],\n    exportAs: [\"nzMentionSuggestion\"]\n  });\n  return NzMentionSuggestionDirective;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_MENTION_CONFIG = {\n  split: ' '\n};\n\nvar NzMentionService = /*@__PURE__*/function () {\n  var NzMentionService = /*#__PURE__*/function () {\n    function NzMentionService() {\n      _classCallCheck(this, NzMentionService);\n\n      this.triggerChange$ = new Subject();\n    }\n\n    _createClass(NzMentionService, [{\n      key: \"triggerChanged\",\n      value: function triggerChanged() {\n        return this.triggerChange$.asObservable();\n      }\n    }, {\n      key: \"registerTrigger\",\n      value: function registerTrigger(trigger) {\n        if (this.trigger !== trigger) {\n          this.trigger = trigger;\n          this.triggerChange$.next(trigger);\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.triggerChange$.complete();\n      }\n    }]);\n\n    return NzMentionService;\n  }();\n\n  NzMentionService.ɵfac = function NzMentionService_Factory(t) {\n    return new (t || NzMentionService)();\n  };\n\n  NzMentionService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: NzMentionService,\n    factory: NzMentionService.ɵfac\n  });\n  return NzMentionService;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_MENTION_TRIGGER_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NzMentionTriggerDirective;\n  }),\n  multi: true\n};\n\nvar NzMentionTriggerDirective = /*@__PURE__*/function () {\n  var NzMentionTriggerDirective = /*#__PURE__*/function () {\n    function NzMentionTriggerDirective(el, nzMentionService) {\n      _classCallCheck(this, NzMentionTriggerDirective);\n\n      this.el = el;\n      this.nzMentionService = nzMentionService;\n\n      this.onChange = function () {};\n\n      this.onTouched = function () {};\n\n      this.onFocusin = new EventEmitter();\n      this.onBlur = new EventEmitter();\n      this.onInput = new EventEmitter();\n      this.onKeydown = new EventEmitter();\n      this.onClick = new EventEmitter();\n    }\n\n    _createClass(NzMentionTriggerDirective, [{\n      key: \"completeEvents\",\n      value: function completeEvents() {\n        this.onFocusin.complete();\n        this.onBlur.complete();\n        this.onInput.complete();\n        this.onKeydown.complete();\n        this.onClick.complete();\n      }\n    }, {\n      key: \"focus\",\n      value: function focus(caretPos) {\n        this.el.nativeElement.focus();\n        this.el.nativeElement.setSelectionRange(caretPos, caretPos);\n      }\n    }, {\n      key: \"insertMention\",\n      value: function insertMention(mention) {\n        var value = this.el.nativeElement.value;\n        var insertValue = \"\".concat(mention.mention).concat(NZ_MENTION_CONFIG.split);\n        var newValue = [value.slice(0, mention.startPos + 1), insertValue, value.slice(mention.endPos, value.length)].join('');\n        this.el.nativeElement.value = newValue;\n        this.focus(mention.startPos + insertValue.length + 1);\n        this.onChange(newValue);\n        this.value = newValue;\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.value = value;\n\n        if (typeof value === 'string') {\n          this.el.nativeElement.value = value;\n        } else {\n          this.el.nativeElement.value = '';\n        }\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouched = fn;\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.nzMentionService.registerTrigger(this);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.completeEvents();\n      }\n    }]);\n\n    return NzMentionTriggerDirective;\n  }();\n\n  NzMentionTriggerDirective.ɵfac = function NzMentionTriggerDirective_Factory(t) {\n    return new (t || NzMentionTriggerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzMentionService));\n  };\n\n  NzMentionTriggerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: NzMentionTriggerDirective,\n    selectors: [[\"input\", \"nzMentionTrigger\", \"\"], [\"textarea\", \"nzMentionTrigger\", \"\"]],\n    hostAttrs: [\"autocomplete\", \"off\"],\n    hostBindings: function NzMentionTriggerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function NzMentionTriggerDirective_focusin_HostBindingHandler() {\n          return ctx.onFocusin.emit();\n        })(\"blur\", function NzMentionTriggerDirective_blur_HostBindingHandler() {\n          return ctx.onBlur.emit();\n        })(\"input\", function NzMentionTriggerDirective_input_HostBindingHandler($event) {\n          return ctx.onInput.emit($event);\n        })(\"keydown\", function NzMentionTriggerDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeydown.emit($event);\n        })(\"click\", function NzMentionTriggerDirective_click_HostBindingHandler($event) {\n          return ctx.onClick.emit($event);\n        });\n      }\n    },\n    exportAs: [\"nzMentionTrigger\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([NZ_MENTION_TRIGGER_ACCESSOR])]\n  });\n  return NzMentionTriggerDirective;\n}();\n\nvar NzMentionComponent = /*@__PURE__*/function () {\n  var NzMentionComponent = /*#__PURE__*/function () {\n    function NzMentionComponent(ngDocument, cdr, overlay, viewContainerRef, nzMentionService) {\n      _classCallCheck(this, NzMentionComponent);\n\n      this.ngDocument = ngDocument;\n      this.cdr = cdr;\n      this.overlay = overlay;\n      this.viewContainerRef = viewContainerRef;\n      this.nzMentionService = nzMentionService;\n\n      this.nzValueWith = function (value) {\n        return value;\n      };\n\n      this.nzPrefix = '@';\n      this.nzLoading = false;\n      this.nzNotFoundContent = '无匹配结果，轻敲空格完成输入';\n      this.nzPlacement = 'bottom';\n      this.nzSuggestions = [];\n      this.nzOnSelect = new EventEmitter();\n      this.nzOnSearchChange = new EventEmitter();\n      this.isOpen = false;\n      this.filteredSuggestions = [];\n      this.suggestionTemplate = null;\n      this.activeIndex = -1;\n      this.previousValue = null;\n      this.cursorMention = null;\n      this.overlayRef = null;\n    }\n\n    _createClass(NzMentionComponent, [{\n      key: \"suggestionChild\",\n      set: function set(value) {\n        if (value) {\n          this.suggestionTemplate = value;\n        }\n      }\n    }, {\n      key: \"triggerNativeElement\",\n      get: function get() {\n        return this.trigger.el.nativeElement;\n      }\n    }, {\n      key: \"focusItemElement\",\n      get: function get() {\n        var _a;\n\n        var itemArr = (_a = this.items) === null || _a === void 0 ? void 0 : _a.toArray();\n\n        if (itemArr && itemArr[this.activeIndex]) {\n          return itemArr[this.activeIndex].nativeElement;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.nzMentionService.triggerChanged().subscribe(function (trigger) {\n          _this.trigger = trigger;\n\n          _this.bindTriggerEvents();\n\n          _this.closeDropdown();\n\n          _this.overlayRef = null;\n        });\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        if (changes.hasOwnProperty('nzSuggestions')) {\n          if (this.isOpen) {\n            this.previousValue = null;\n            this.activeIndex = -1;\n            this.resetDropdown(false);\n          }\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.closeDropdown();\n      }\n    }, {\n      key: \"closeDropdown\",\n      value: function closeDropdown() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n          this.overlayRef.detach();\n          this.overlayOutsideClickSubscription.unsubscribe();\n          this.isOpen = false;\n          this.cdr.markForCheck();\n        }\n      }\n    }, {\n      key: \"openDropdown\",\n      value: function openDropdown() {\n        this.attachOverlay();\n        this.isOpen = true;\n        this.cdr.markForCheck();\n      }\n    }, {\n      key: \"getMentions\",\n      value: function getMentions() {\n        return this.trigger ? _getMentions(this.trigger.value, this.nzPrefix) : [];\n      }\n    }, {\n      key: \"selectSuggestion\",\n      value: function selectSuggestion(suggestion) {\n        var value = this.nzValueWith(suggestion);\n        this.trigger.insertMention({\n          mention: value,\n          startPos: this.cursorMentionStart,\n          endPos: this.cursorMentionEnd\n        });\n        this.nzOnSelect.emit(suggestion);\n        this.closeDropdown();\n        this.activeIndex = -1;\n      }\n    }, {\n      key: \"handleInput\",\n      value: function handleInput(event) {\n        var target = event.target;\n        this.trigger.onChange(target.value);\n        this.trigger.value = target.value;\n        this.resetDropdown();\n      }\n    }, {\n      key: \"handleKeydown\",\n      value: function handleKeydown(event) {\n        var keyCode = event.keyCode;\n\n        if (this.isOpen && keyCode === ENTER && this.activeIndex !== -1 && this.filteredSuggestions.length) {\n          this.selectSuggestion(this.filteredSuggestions[this.activeIndex]);\n          event.preventDefault();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n          this.resetDropdown();\n          event.stopPropagation();\n        } else {\n          if (this.isOpen && (keyCode === TAB || keyCode === ESCAPE)) {\n            this.closeDropdown();\n            return;\n          }\n\n          if (this.isOpen && keyCode === UP_ARROW) {\n            this.setPreviousItemActive();\n            event.preventDefault();\n            event.stopPropagation();\n          }\n\n          if (this.isOpen && keyCode === DOWN_ARROW) {\n            this.setNextItemActive();\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      }\n    }, {\n      key: \"handleClick\",\n      value: function handleClick() {\n        this.resetDropdown();\n      }\n    }, {\n      key: \"bindTriggerEvents\",\n      value: function bindTriggerEvents() {\n        var _this2 = this;\n\n        this.trigger.onInput.subscribe(function (e) {\n          return _this2.handleInput(e);\n        });\n        this.trigger.onKeydown.subscribe(function (e) {\n          return _this2.handleKeydown(e);\n        });\n        this.trigger.onClick.subscribe(function () {\n          return _this2.handleClick();\n        });\n      }\n    }, {\n      key: \"suggestionsFilter\",\n      value: function suggestionsFilter(value, emit) {\n        var _this3 = this;\n\n        var suggestions = value.substring(1);\n        /**\n         * Should always emit (nzOnSearchChange) when value empty\n         *\n         * @[something]... @[empty]... @[empty]\n         *     ^             ^           ^\n         * preValue        preValue  (should emit)\n         */\n\n        if (this.previousValue === value && value !== this.cursorMention[0]) {\n          return;\n        }\n\n        this.previousValue = value;\n\n        if (emit) {\n          this.nzOnSearchChange.emit({\n            value: this.cursorMention.substring(1),\n            prefix: this.cursorMention[0]\n          });\n        }\n\n        var searchValue = suggestions.toLowerCase();\n        this.filteredSuggestions = this.nzSuggestions.filter(function (suggestion) {\n          return _this3.nzValueWith(suggestion).toLowerCase().includes(searchValue);\n        });\n      }\n    }, {\n      key: \"resetDropdown\",\n      value: function resetDropdown() {\n        var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        this.resetCursorMention();\n\n        if (typeof this.cursorMention !== 'string' || !this.canOpen()) {\n          this.closeDropdown();\n          return;\n        }\n\n        this.suggestionsFilter(this.cursorMention, emit);\n        var activeIndex = this.filteredSuggestions.indexOf(this.cursorMention.substring(1));\n        this.activeIndex = activeIndex >= 0 ? activeIndex : 0;\n        this.openDropdown();\n      }\n    }, {\n      key: \"setNextItemActive\",\n      value: function setNextItemActive() {\n        this.activeIndex = this.activeIndex + 1 <= this.filteredSuggestions.length - 1 ? this.activeIndex + 1 : 0;\n        this.cdr.markForCheck();\n        this.scrollToFocusItem();\n      }\n    }, {\n      key: \"setPreviousItemActive\",\n      value: function setPreviousItemActive() {\n        this.activeIndex = this.activeIndex - 1 < 0 ? this.filteredSuggestions.length - 1 : this.activeIndex - 1;\n        this.cdr.markForCheck();\n        this.scrollToFocusItem();\n      }\n    }, {\n      key: \"scrollToFocusItem\",\n      value: function scrollToFocusItem() {\n        if (this.focusItemElement) {\n          this.focusItemElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest'\n          });\n        }\n      }\n    }, {\n      key: \"canOpen\",\n      value: function canOpen() {\n        var element = this.triggerNativeElement;\n        return !element.readOnly && !element.disabled;\n      }\n    }, {\n      key: \"resetCursorMention\",\n      value: function resetCursorMention() {\n        var value = this.triggerNativeElement.value.replace(/[\\r\\n]/g, NZ_MENTION_CONFIG.split) || '';\n        var selectionStart = this.triggerNativeElement.selectionStart;\n        var prefix = typeof this.nzPrefix === 'string' ? [this.nzPrefix] : this.nzPrefix;\n        var i = prefix.length;\n\n        while (i >= 0) {\n          var startPos = value.lastIndexOf(prefix[i], selectionStart);\n          var endPos = value.indexOf(NZ_MENTION_CONFIG.split, selectionStart) > -1 ? value.indexOf(NZ_MENTION_CONFIG.split, selectionStart) : value.length;\n          var mention = value.substring(startPos, endPos);\n\n          if (startPos > 0 && value[startPos - 1] !== NZ_MENTION_CONFIG.split || startPos < 0 || mention.includes(prefix[i], 1) || mention.includes(NZ_MENTION_CONFIG.split)) {\n            this.cursorMention = null;\n            this.cursorMentionStart = -1;\n            this.cursorMentionEnd = -1;\n          } else {\n            this.cursorMention = mention;\n            this.cursorMentionStart = startPos;\n            this.cursorMentionEnd = endPos;\n            return;\n          }\n\n          i--;\n        }\n      }\n    }, {\n      key: \"updatePositions\",\n      value: function updatePositions() {\n        var coordinates = getCaretCoordinates(this.triggerNativeElement, this.cursorMentionStart);\n        var top = coordinates.top - this.triggerNativeElement.getBoundingClientRect().height - this.triggerNativeElement.scrollTop + (this.nzPlacement === 'bottom' ? coordinates.height - 6 : -6);\n        var left = coordinates.left - this.triggerNativeElement.scrollLeft;\n        this.positionStrategy.withDefaultOffsetX(left).withDefaultOffsetY(top);\n\n        if (this.nzPlacement === 'bottom') {\n          this.positionStrategy.withPositions(_toConsumableArray(DEFAULT_MENTION_BOTTOM_POSITIONS));\n        }\n\n        if (this.nzPlacement === 'top') {\n          this.positionStrategy.withPositions(_toConsumableArray(DEFAULT_MENTION_TOP_POSITIONS));\n        }\n\n        this.positionStrategy.apply();\n      }\n    }, {\n      key: \"subscribeOverlayOutsideClick\",\n      value: function subscribeOverlayOutsideClick() {\n        var _this4 = this;\n\n        return merge(this.overlayRef.outsidePointerEvents(), fromEvent(this.ngDocument, 'touchend')).subscribe(function (event) {\n          var _a;\n\n          var clickTarget = event.target;\n\n          if (_this4.isOpen && clickTarget !== _this4.trigger.el.nativeElement && !((_a = _this4.overlayRef) === null || _a === void 0 ? void 0 : _a.overlayElement.contains(clickTarget))) {\n            _this4.closeDropdown();\n          }\n        });\n      }\n    }, {\n      key: \"attachOverlay\",\n      value: function attachOverlay() {\n        if (!this.overlayRef) {\n          this.portal = new TemplatePortal(this.suggestionsTemp, this.viewContainerRef);\n          this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        }\n\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n          this.overlayRef.attach(this.portal);\n          this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n        }\n\n        this.updatePositions();\n      }\n    }, {\n      key: \"getOverlayConfig\",\n      value: function getOverlayConfig() {\n        return new OverlayConfig({\n          positionStrategy: this.getOverlayPosition(),\n          scrollStrategy: this.overlay.scrollStrategies.reposition(),\n          disposeOnNavigation: true\n        });\n      }\n    }, {\n      key: \"getOverlayPosition\",\n      value: function getOverlayPosition() {\n        var positions = [new ConnectionPositionPair({\n          originX: 'start',\n          originY: 'bottom'\n        }, {\n          overlayX: 'start',\n          overlayY: 'top'\n        }), new ConnectionPositionPair({\n          originX: 'start',\n          originY: 'top'\n        }, {\n          overlayX: 'start',\n          overlayY: 'bottom'\n        })];\n        this.positionStrategy = this.overlay.position().flexibleConnectedTo(this.trigger.el).withPositions(positions).withFlexibleDimensions(false).withPush(false);\n        return this.positionStrategy;\n      }\n    }]);\n\n    return NzMentionComponent;\n  }();\n\n  NzMentionComponent.ɵfac = function NzMentionComponent_Factory(t) {\n    return new (t || NzMentionComponent)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NzMentionService));\n  };\n\n  NzMentionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NzMentionComponent,\n    selectors: [[\"nz-mention\"]],\n    contentQueries: function NzMentionComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzMentionSuggestionDirective, 1, TemplateRef);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.suggestionChild = _t.first);\n      }\n    },\n    viewQuery: function NzMentionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 1);\n        ɵngcc0.ɵɵviewQuery(_c0, 1, ElementRef);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.suggestionsTemp = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    inputs: {\n      nzValueWith: \"nzValueWith\",\n      nzPrefix: \"nzPrefix\",\n      nzLoading: \"nzLoading\",\n      nzNotFoundContent: \"nzNotFoundContent\",\n      nzPlacement: \"nzPlacement\",\n      nzSuggestions: \"nzSuggestions\"\n    },\n    outputs: {\n      nzOnSelect: \"nzOnSelect\",\n      nzOnSearchChange: \"nzOnSearchChange\"\n    },\n    exportAs: [\"nzMention\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([NzMentionService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 0,\n    consts: [[\"suggestions\", \"\"], [1, \"ant-mention-dropdown\"], [\"class\", \"ant-mention-dropdown-item\", 3, \"focus\", \"mousedown\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"ant-mention-dropdown-notfound ant-mention-dropdown-item\", 4, \"ngIf\"], [1, \"ant-mention-dropdown-item\", 3, \"mousedown\", \"click\"], [\"items\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"defaultSuggestion\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-mention-dropdown-notfound\", \"ant-mention-dropdown-item\"], [4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]],\n    template: function NzMentionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NzMentionComponent_ng_template_1_Template, 3, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc3.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzMentionComponent.prototype, \"nzLoading\", void 0);\n\n  return NzMentionComponent;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar COMPONENTS = [NzMentionComponent, NzMentionTriggerDirective, NzMentionSuggestionDirective];\n\nvar NzMentionModule = /*@__PURE__*/function () {\n  var NzMentionModule = function NzMentionModule() {\n    _classCallCheck(this, NzMentionModule);\n  };\n\n  NzMentionModule.ɵfac = function NzMentionModule_Factory(t) {\n    return new (t || NzMentionModule)();\n  };\n\n  NzMentionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NzMentionModule\n  });\n  NzMentionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[BidiModule, CommonModule, FormsModule, OverlayModule, NzIconModule]]\n  });\n  return NzMentionModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzMentionModule, {\n    declarations: function declarations() {\n      return [NzMentionComponent, NzMentionTriggerDirective, NzMentionSuggestionDirective];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, FormsModule, OverlayModule, NzIconModule];\n    },\n    exports: function exports() {\n      return [NzMentionComponent, NzMentionTriggerDirective, NzMentionSuggestionDirective];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_MENTION_TRIGGER_ACCESSOR, NzMentionComponent, NzMentionModule, NzMentionService, NzMentionSuggestionDirective, NzMentionTriggerDirective }; //# sourceMappingURL=ng-zorro-antd-mention.js.map","map":null,"metadata":{},"sourceType":"module"}