{"version":3,"file":"node.d.ts","sources":["node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\nimport { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';\nimport { NzTreeView } from './tree';\nexport interface NzTreeVirtualNodeData<T> {\n    data: T;\n    context: CdkTreeNodeOutletContext<T>;\n    nodeDef: CdkTreeNodeDef<T>;\n}\nexport declare class NzTreeNodeComponent<T> extends CdkTreeNode<T> implements OnDestroy, OnInit {\n    protected elementRef: ElementRef<HTMLElement>;\n    protected tree: NzTreeView<T>;\n    private renderer;\n    private cdr;\n    indents: boolean[];\n    disabled: boolean;\n    selected: boolean;\n    isLeaf: boolean;\n    constructor(elementRef: ElementRef<HTMLElement>, tree: NzTreeView<T>, renderer: Renderer2, cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    disable(): void;\n    enable(): void;\n    select(): void;\n    deselect(): void;\n    setIndents(indents: boolean[]): void;\n    private updateSelectedClass;\n    private updateDisabledClass;\n}\nexport declare class NzTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n    when: (index: number, nodeData: T) => boolean;\n}\nexport declare class NzTreeVirtualScrollNodeOutletDirective<T> implements OnChanges {\n    private _viewContainerRef;\n    private _viewRef;\n    data: NzTreeVirtualNodeData<T>;\n    constructor(_viewContainerRef: ViewContainerRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    private shouldRecreateView;\n    private hasContextShapeChanged;\n    private updateExistingContext;\n}\n"]}