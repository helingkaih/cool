{"version":3,"file":"ng-zorro-antd-calendar.js","sources":["../../components/calendar/calendar-cells.ts","../../components/calendar/calendar-header.component.ts","../../components/calendar/calendar.component.ts","../../components/calendar/calendar.module.ts","../../components/calendar/public-api.ts","../../components/calendar/ng-zorro-antd-calendar.ts"],"names":["I18n","DateCell","DateFullCell","MonthCell","MonthFullCell"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAOa,mBAAmB;AAAG;+CAJlC,SAAS,SAAC,kBACT,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,YAAY,cACvB,kGACI;AAAC,MAMO,oBAAoB;AAAG;gDAJnC,SAAS,SAAC,kBACT,QAAQ,EAAE,eAAe;WACzB,QAAQ,EAAE,aAAa,cACxB,sGACI;AAAC,MAMO,uBAAuB;AAAG;mDAJtC,SAAS,SAAC,kBACT,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,gBAAgB,cAC3B,kHACI;AAAC,MAMO,wBAAwB;AAAG;oDAJvC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB;OAC7B,QAAQ,EAAE,iBAAiB,cAC5B,sHACI;AAAC;AC7BN;AACA;AACA;AACA;AACA,MA4Ca,yBAAyB;AAAG,IAmCvC,YAAoB,IAAU,EAAU,UAA6B,EAAU,UAAsB;AACvG,QADsB,SAAI,GAAJ,IAAI,CAAM;AAAC,QAAS,eAAU,GAAV,UAAU,CAAmB;AAAC,QAAS,eAAU,GAAV,UAAU,CAAY;AAAC,QAlC7F,SAAI,GAAqB,OAAO,CAAC;AAC5C,QAAW,eAAU,GAAY,IAAI,CAAC;AACtC,QAAW,eAAU,GAAc,IAAI,SAAS,EAAE,CAAC;AACnD,QACqB,eAAU,GAAmC,IAAI,YAAY,EAAE,CAAC;AACrF,QAAqB,eAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;AAC3E,QAAqB,gBAAW,GAAyB,IAAI,YAAY,EAAE,CAAC;AAC5E;AAEK,QAAH,eAAU,GAAW,EAAE,CAAC;AAC1B,QAAE,cAAS,GAAW,EAAE,CAAC;AACzB,QAAE,UAAK,GAA4C,EAAE,CAAC;AACtD,QAAE,WAAM,GAA4C,EAAE,CAAC;AACvD;AAE8B,QAqB1B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;AAC3E,KAAG;AACH,IAxBE,IAAI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AACrC,KAAG;AACH,IACE,IAAI,WAAW;AAAK,QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AACtC,KAAG;AACH,IACE,IAAI,IAAI;AAAK,QACX,OAAO,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,OAAO,CAAC;AACjD,KAAG;AACH,IACE,IAAI,YAAY;AAAK,QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AACpD,KAAG;AACH,IACE,IAAI,aAAa;AAAK,QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACrD,KAAG;AACH,IAME,QAAQ;AAAK,QACX,IAAI,CAAC,UAAU,EAAE,CAAC;AACtB,QAAI,IAAI,CAAC,WAAW,EAAE,CAAC;AACvB,KAAG;AACH,IACE,UAAU,CAAC,IAAY;AAAI,QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACH,IACU,UAAU,CAAC,IAAa;AAAI,QAClC,MAAM,KAAK,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;AAC9D,QAAI,MAAM,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACpB,QAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACtC,YAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACnD,SAAK;AACL,KAAG;AACH,IACU,WAAW;AAAK,QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACrB,QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACjC,YAAM,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtD,YAAM,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC9E,YAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACvD,SAAK;AACL,KAAG;AACH;qDA3GC,SAAS,SAAC,kBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI,kBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,QAAQ,EAAE,oBAAoB,kBAC9B,QAAQ,EAAE;WAAkB,kBAC5B,QAAQ,EAAE;;i2BA4BT,kBACD,IAAI,EAAE,sBACJ,iBAAiB,EAAE,SAAS;GAC7B,cACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8QACI;AAAC;AAAmD,YAzCZA,aAAI;AAAI,YAA5C,iBAAiB;AAAI,YAFe,UAAU;AAAG;AAAG;AAA6C,mBA4CvG,KAAK;AAAK,yBACV,KAAK;AAAK,yBACV,KAAK;AAAK,yBAEV,MAAM;AAAK,yBACX,MAAM;AAAK,0BACX,MAAM;AAAI;AAAG;ACvDhB;AACA;AACA;AACA;AACA,MA2Fa,mBAAmB;AAAG,IAkDjC,YAAoB,GAAsB,EAAU,UAAsB,EAAsB,cAA8B;AAChI,QADsB,QAAG,GAAH,GAAG,CAAmB;AAAC,QAAS,eAAU,GAAV,UAAU,CAAY;AAAC,QAAqB,mBAAc,GAAd,cAAc,CAAgB;AAAC,QA/C/H,eAAU,GAAc,IAAI,SAAS,EAAE,CAAC;AAC1C,QAAE,cAAS,GAAW,qBAAqB,CAAC;AAC5C,QAAU,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AACzC,QAAE,QAAG,GAAc,KAAK,CAAC;AACzB,QACU,eAAU,GAAyB,SAAQ,CAAC;AACtD,QAAU,cAAS,GAAe,SAAQ,CAAC;AAC3C,QACW,WAAM,GAAmB,OAAO,CAAC;AAC5C,QAGqB,iBAAY,GAAiC,IAAI,YAAY,EAAE,CAAC;AACrF,QAAqB,kBAAa,GAAuD,IAAI,YAAY,EAAE,CAAC;AAC5G,QAAqB,mBAAc,GAAuB,IAAI,YAAY,EAAE,CAAC;AAC7E,QAAqB,kBAAa,GAAuB,IAAI,YAAY,EAAE,CAAC;AAC5E,QA6B2B,iBAAY,GAAY,IAAI,CAAC;AACxD;AAC2D,QAEvD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACvE,KAAG;AACH,IA5BE,IAAI,QAAQ;AAAK,QACf,QAAQ,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,eAAe,EAAG;AACtD,KAAG;AACH,IAGE,IAAI,YAAY;AAAK,QACnB,QAAQ,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,mBAAmB,EAAG;AAC9D,KAAG;AACH,IAGE,IAAI,SAAS;AAAK,QAChB,QAAQ,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,EAAG;AACxD,KAAG;AACH,IAGE,IAAI,aAAa;AAAK,QACpB,QAAQ,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,oBAAoB,EAAG;AAChE,KAAG;AACH,IAQE,QAAQ;AAAK;AACL,QAAN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACzC,QAAI,MAAA,IAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC;AACzE,YAAM,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AAC3C,SAAK,EAAE;AACP,KAAG;AACH,IACE,YAAY,CAAC,IAAoB;AAAI,QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,QAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AACxE,KAAG;AACH,IACE,YAAY,CAAC,IAAY;AAAI,QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACH,IACE,aAAa,CAAC,KAAa;AAAI,QAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjD,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACH,IACE,YAAY,CAAC,IAAe;AAAI;AACS;AAEzC,QAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAG;AACH,IACE,UAAU,CAAC,KAAkB;AAAI,QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,KAAa,CAAC,EAAE,KAAK,CAAC,CAAC;AACzD,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,KAAG;AACH,IACE,gBAAgB,CAAC,EAAwB;AAAI,QAC3C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,KAAG;AACH,IACE,iBAAiB,CAAC,EAAc;AAAI,QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH,IACU,UAAU,CAAC,IAAe,EAAE,UAAmB,IAAI;AAAI,QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3B,QACI,IAAI,OAAO,EAAE;AACjB,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvC,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,YAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,YAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C,SAAK;AACL,KAAG;AACH,IACE,WAAW,CAAC,OAAsB;AAAI,QACpC,IAAI,OAAO,CAAC,OAAO,EAAE;AACzB,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAK;AACL,KAAG;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,KAAG;AACH;+CA3KC,SAAS,SAAC,kBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI,kBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,QAAQ,EAAE,aAAa,kBACvB,QAAQ,EAAE;MAAY,kBACtB,QAAQ,EAAE;;;;;;;;;;;;;0LAyCT,kBACD,IAAI,EAAE,sBACJ,kCAAkC,EAAE,cAAc,sBAClD,kCAAkC,EAAE,eAAe,sBACnD,iCAAiC,EAAE,eAAe,kBACnD,kBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,cAC7G;;;;;;;;;;;;;;;;;;;;;gKACI;AAAC;AAA6C,YAvFjD,iBAAiB;AACjB,YAEA,UAAU;AACV,YAPkB,cAAc,uBA4I6C,QAAQ;AAAM;AAAG;AAC7F,qBAxCA,KAAK;AAAK,sBACV,KAAK;AAAK,6BACV,KAAK;AAAK,2BAEV,MAAM;AAAK,4BACX,MAAM;AAAK,6BACX,MAAM;AAAK,4BACX,MAAM;AAAK,yBAMX,KAAK;AAAK,8BACV,YAAY,SAACC,mBAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE;AAAO,6BAKlE,KAAK;AAAK,kCACV,YAAY,SAACC,uBAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE;AAAO,0BAKtE,KAAK;AAAK,+BACV,YAAY,SAACC,oBAAS,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE;AAAO,8BAKnE,KAAK;AAAK,mCACV,YAAY,SAACC,wBAAa,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE;AAAO,2BAKvE,KAAK;AAAI;AAAe;AAAa,IAA5B,YAAY,EAAE;AAAE;AAEnB,yDAF+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACxD;AACA;ACjJA;AACA;AACA;AACA;AACA,MA2Ba,gBAAgB;AAAG;4CAZ/B,QAAQ,SAAC,kBACR,YAAY,EAAE;WACZ,yBAAyB,sBACzB;AAAmB,sBACnB,mBAAmB,sBACnB,uBAAuB,sBACvB,oBAAoB,sBACpB;OAAwB,kBACzB,kBACD,OAAO,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,wBAAwB,CAAC,kBAC5H,OAAO,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,eAAe,CAAC,cAC/G;;;;;;;;;;;;;;;0BACI;AAAC;AC/BN;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AAC6I","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nzDateCell]',\n  exportAs: 'nzDateCell'\n})\nexport class NzDateCellDirective {}\n\n@Directive({\n  selector: '[nzMonthCell]',\n  exportAs: 'nzMonthCell'\n})\nexport class NzMonthCellDirective {}\n\n@Directive({\n  selector: '[nzDateFullCell]',\n  exportAs: 'nzDateFullCell'\n})\nexport class NzDateFullCellDirective {}\n\n@Directive({\n  selector: '[nzMonthFullCell]',\n  exportAs: 'nzMonthFullCell'\n})\nexport class NzMonthFullCellDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { DateHelperService, NzI18nService as I18n } from 'ng-zorro-antd/i18n';\nimport { NzSelectSizeType } from 'ng-zorro-antd/select';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-calendar-header',\n  exportAs: 'nzCalendarHeader',\n  template: `\n    <div class=\"ant-picker-calendar-header\">\n      <nz-select\n        class=\"ant-picker-calendar-year-select\"\n        [nzSize]=\"size\"\n        [nzDropdownMatchSelectWidth]=\"false\"\n        [ngModel]=\"activeYear\"\n        (ngModelChange)=\"updateYear($event)\"\n      >\n        <nz-option *ngFor=\"let year of years\" [nzLabel]=\"year.label\" [nzValue]=\"year.value\"></nz-option>\n      </nz-select>\n\n      <nz-select\n        *ngIf=\"mode === 'month'\"\n        class=\"ant-picker-calendar-month-select\"\n        [nzSize]=\"size\"\n        [nzDropdownMatchSelectWidth]=\"false\"\n        [ngModel]=\"activeMonth\"\n        (ngModelChange)=\"monthChange.emit($event)\"\n      >\n        <nz-option *ngFor=\"let month of months\" [nzLabel]=\"month.label\" [nzValue]=\"month.value\"></nz-option>\n      </nz-select>\n\n      <nz-radio-group class=\"ant-picker-calendar-mode-switch\" [(ngModel)]=\"mode\" (ngModelChange)=\"modeChange.emit($event)\" [nzSize]=\"size\">\n        <label nz-radio-button nzValue=\"month\">{{ monthTypeText }}</label>\n        <label nz-radio-button nzValue=\"year\">{{ yearTypeText }}</label>\n      </nz-radio-group>\n    </div>\n  `,\n  host: {\n    '[style.display]': `'block'`\n  }\n})\nexport class NzCalendarHeaderComponent implements OnInit {\n  @Input() mode: 'month' | 'year' = 'month';\n  @Input() fullscreen: boolean = true;\n  @Input() activeDate: CandyDate = new CandyDate();\n\n  @Output() readonly modeChange: EventEmitter<'month' | 'year'> = new EventEmitter();\n  @Output() readonly yearChange: EventEmitter<number> = new EventEmitter();\n  @Output() readonly monthChange: EventEmitter<number> = new EventEmitter();\n  // @Output() readonly valueChange: EventEmitter<CandyDate> = new EventEmitter();\n\n  yearOffset: number = 10;\n  yearTotal: number = 20;\n  years: Array<{ label: string; value: number }> = [];\n  months: Array<{ label: string; value: number }> = [];\n\n  get activeYear(): number {\n    return this.activeDate.getYear();\n  }\n\n  get activeMonth(): number {\n    return this.activeDate.getMonth();\n  }\n\n  get size(): NzSelectSizeType {\n    return this.fullscreen ? 'default' : 'small';\n  }\n\n  get yearTypeText(): string {\n    return this.i18n.getLocale().Calendar.lang.year;\n  }\n\n  get monthTypeText(): string {\n    return this.i18n.getLocale().Calendar.lang.month;\n  }\n\n  constructor(private i18n: I18n, private dateHelper: DateHelperService, private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-fullcalendar-header');\n  }\n\n  ngOnInit(): void {\n    this.setUpYears();\n    this.setUpMonths();\n  }\n\n  updateYear(year: number): void {\n    this.yearChange.emit(year);\n    this.setUpYears(year);\n  }\n\n  private setUpYears(year?: number): void {\n    const start = (year || this.activeYear) - this.yearOffset;\n    const end = start + this.yearTotal;\n\n    this.years = [];\n    for (let i = start; i < end; i++) {\n      this.years.push({ label: `${i}`, value: i });\n    }\n  }\n\n  private setUpMonths(): void {\n    this.months = [];\n\n    for (let i = 0; i < 12; i++) {\n      const dateInMonth = this.activeDate.setMonth(i);\n      const monthText = this.dateHelper.format(dateInMonth.nativeDate, 'MMM');\n      this.months.push({ label: monthText, value: i });\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { CandyDate } from 'ng-zorro-antd/core/time';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  NzDateCellDirective as DateCell,\n  NzDateFullCellDirective as DateFullCell,\n  NzMonthCellDirective as MonthCell,\n  NzMonthFullCellDirective as MonthFullCell\n} from './calendar-cells';\n\nexport type NzCalendarMode = 'month' | 'year';\ntype NzCalendarDateTemplate = TemplateRef<{ $implicit: Date }>;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-calendar',\n  exportAs: 'nzCalendar',\n  template: `\n    <nz-calendar-header\n      [fullscreen]=\"nzFullscreen\"\n      [activeDate]=\"activeDate\"\n      [(mode)]=\"nzMode\"\n      (modeChange)=\"onModeChange($event)\"\n      (yearChange)=\"onYearSelect($event)\"\n      (monthChange)=\"onMonthSelect($event)\"\n    ></nz-calendar-header>\n\n    <div class=\"ant-picker-panel\">\n      <div class=\"ant-picker-{{ nzMode === 'month' ? 'date' : 'month' }}-panel\">\n        <div class=\"ant-picker-body\">\n          <ng-container *ngIf=\"nzMode === 'month'; then monthModeTable; else yearModeTable\"></ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #monthModeTable>\n      <!--  TODO(@wenqi73) [cellRender] [fullCellRender] -->\n      <date-table\n        [prefixCls]=\"prefixCls\"\n        [value]=\"activeDate\"\n        [activeDate]=\"activeDate\"\n        [cellRender]=\"$any(dateCell)\"\n        [fullCellRender]=\"$any(dateFullCell)\"\n        [disabledDate]=\"nzDisabledDate\"\n        (valueChange)=\"onDateSelect($event)\"\n      ></date-table>\n    </ng-template>\n\n    <!--  TODO(@wenqi73) [cellRender] [fullCellRender] -->\n    <ng-template #yearModeTable>\n      <month-table\n        [prefixCls]=\"prefixCls\"\n        [value]=\"activeDate\"\n        [activeDate]=\"activeDate\"\n        [cellRender]=\"$any(monthCell)\"\n        [fullCellRender]=\"$any(monthFullCell)\"\n        (valueChange)=\"onDateSelect($event)\"\n      ></month-table>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-picker-calendar-full]': 'nzFullscreen',\n    '[class.ant-picker-calendar-mini]': '!nzFullscreen',\n    '[class.ant-picker-calendar-rtl]': `dir === 'rtl'`\n  },\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NzCalendarComponent), multi: true }]\n})\nexport class NzCalendarComponent implements ControlValueAccessor, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzFullscreen: BooleanInput;\n\n  activeDate: CandyDate = new CandyDate();\n  prefixCls: string = 'ant-picker-calendar';\n  private destroy$ = new Subject<void>();\n  dir: Direction = 'ltr';\n\n  private onChangeFn: (date: Date) => void = () => {};\n  private onTouchFn: () => void = () => {};\n\n  @Input() nzMode: NzCalendarMode = 'month';\n  @Input() nzValue?: Date;\n  @Input() nzDisabledDate?: (date: Date) => boolean;\n\n  @Output() readonly nzModeChange: EventEmitter<NzCalendarMode> = new EventEmitter();\n  @Output() readonly nzPanelChange: EventEmitter<{ date: Date; mode: NzCalendarMode }> = new EventEmitter();\n  @Output() readonly nzSelectChange: EventEmitter<Date> = new EventEmitter();\n  @Output() readonly nzValueChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * Cannot use @Input and @ContentChild on one variable\n   * because { static: false } will make @Input property get delayed\n   **/\n  @Input() nzDateCell?: NzCalendarDateTemplate;\n  @ContentChild(DateCell, { static: false, read: TemplateRef }) nzDateCellChild?: NzCalendarDateTemplate;\n  get dateCell(): NzCalendarDateTemplate {\n    return (this.nzDateCell || this.nzDateCellChild)!;\n  }\n\n  @Input() nzDateFullCell?: NzCalendarDateTemplate;\n  @ContentChild(DateFullCell, { static: false, read: TemplateRef }) nzDateFullCellChild?: NzCalendarDateTemplate;\n  get dateFullCell(): NzCalendarDateTemplate {\n    return (this.nzDateFullCell || this.nzDateFullCellChild)!;\n  }\n\n  @Input() nzMonthCell?: NzCalendarDateTemplate;\n  @ContentChild(MonthCell, { static: false, read: TemplateRef }) nzMonthCellChild?: NzCalendarDateTemplate;\n  get monthCell(): NzCalendarDateTemplate {\n    return (this.nzMonthCell || this.nzMonthCellChild)!;\n  }\n\n  @Input() nzMonthFullCell?: NzCalendarDateTemplate;\n  @ContentChild(MonthFullCell, { static: false, read: TemplateRef }) nzMonthFullCellChild?: NzCalendarDateTemplate;\n  get monthFullCell(): NzCalendarDateTemplate {\n    return (this.nzMonthFullCell || this.nzMonthFullCellChild)!;\n  }\n\n  @Input() @InputBoolean() nzFullscreen: boolean = true;\n\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef, @Optional() private directionality: Directionality) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-picker-calendar');\n  }\n\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.dir = this.directionality.value;\n    });\n  }\n\n  onModeChange(mode: NzCalendarMode): void {\n    this.nzModeChange.emit(mode);\n    this.nzPanelChange.emit({ date: this.activeDate.nativeDate, mode });\n  }\n\n  onYearSelect(year: number): void {\n    const date = this.activeDate.setYear(year);\n    this.updateDate(date);\n  }\n\n  onMonthSelect(month: number): void {\n    const date = this.activeDate.setMonth(month);\n    this.updateDate(date);\n  }\n\n  onDateSelect(date: CandyDate): void {\n    // Only activeDate is enough in calendar\n    // this.value = date;\n    this.updateDate(date);\n  }\n\n  writeValue(value: Date | null): void {\n    this.updateDate(new CandyDate(value as Date), false);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (date: Date) => void): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouchFn = fn;\n  }\n\n  private updateDate(date: CandyDate, touched: boolean = true): void {\n    this.activeDate = date;\n\n    if (touched) {\n      this.onChangeFn(date.nativeDate);\n      this.onTouchFn();\n      this.nzSelectChange.emit(date.nativeDate);\n      this.nzValueChange.emit(date.nativeDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.updateDate(new CandyDate(this.nzValue), false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { LibPackerModule } from 'ng-zorro-antd/date-picker';\n\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\n\nimport { NzDateCellDirective, NzDateFullCellDirective, NzMonthCellDirective, NzMonthFullCellDirective } from './calendar-cells';\nimport { NzCalendarHeaderComponent } from './calendar-header.component';\nimport { NzCalendarComponent } from './calendar.component';\n\n@NgModule({\n  declarations: [\n    NzCalendarHeaderComponent,\n    NzCalendarComponent,\n    NzDateCellDirective,\n    NzDateFullCellDirective,\n    NzMonthCellDirective,\n    NzMonthFullCellDirective\n  ],\n  exports: [NzCalendarComponent, NzDateCellDirective, NzDateFullCellDirective, NzMonthCellDirective, NzMonthFullCellDirective],\n  imports: [BidiModule, CommonModule, FormsModule, NzI18nModule, NzRadioModule, NzSelectModule, LibPackerModule]\n})\nexport class NzCalendarModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './calendar.module';\nexport * from './calendar.component';\nexport * from './calendar-cells';\nexport * from './calendar-header.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}