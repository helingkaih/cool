{"version":3,"file":"image.directive.d.ts","sources":["image.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzImageGroupComponent } from './image-group.component';\nimport { NzImageService } from './image.service';\nexport declare type ImageStatusType = 'error' | 'loading' | 'normal';\nexport declare class NzImageDirective implements OnInit, OnChanges, OnDestroy {\n    private document;\n    nzConfigService: NzConfigService;\n    private elementRef;\n    private nzImageService;\n    protected cdr: ChangeDetectorRef;\n    private parentGroup;\n    private directionality;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzDisablePreview: BooleanInput;\n    nzSrc: string;\n    nzDisablePreview: boolean;\n    nzFallback: string | null;\n    nzPlaceholder: string | null;\n    dir?: Direction;\n    backLoadImage: HTMLImageElement;\n    private status;\n    private destroy$;\n    get previewable(): boolean;\n    constructor(document: NzSafeAny, nzConfigService: NzConfigService, elementRef: ElementRef, nzImageService: NzImageService, cdr: ChangeDetectorRef, parentGroup: NzImageGroupComponent, directionality: Directionality);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onPreview(): void;\n    getElement(): ElementRef<HTMLImageElement>;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * use internal Image object handle fallback & placeholder\n     * @private\n     */\n    private backLoad;\n}\n"]}