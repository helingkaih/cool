{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzDragService, NzResizeService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzCarouselContentDirective } from './carousel-content.directive';\nimport { NzCarouselBaseStrategy } from './strategies/base-strategy';\nimport { FromToInterface, NzCarouselDotPosition, NzCarouselEffects, NzCarouselStrategyRegistryItem } from './typings';\nexport declare class NzCarouselComponent implements AfterContentInit, AfterViewInit, OnDestroy, OnChanges, OnInit {\n    readonly nzConfigService: NzConfigService;\n    private readonly renderer;\n    private readonly cdr;\n    private readonly platform;\n    private readonly resizeService;\n    private readonly nzDragService;\n    private directionality;\n    private customStrategies;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzEnableSwipe: BooleanInput;\n    static ngAcceptInputType_nzDots: BooleanInput;\n    static ngAcceptInputType_nzAutoPlay: BooleanInput;\n    static ngAcceptInputType_nzAutoPlaySpeed: NumberInput;\n    static ngAcceptInputType_nzTransitionSpeed: NumberInput;\n    carouselContents: QueryList<NzCarouselContentDirective>;\n    slickList?: ElementRef;\n    slickTrack?: ElementRef;\n    nzDotRender?: TemplateRef<{\n        $implicit: number;\n    }>;\n    nzEffect: NzCarouselEffects;\n    nzEnableSwipe: boolean;\n    nzDots: boolean;\n    nzAutoPlay: boolean;\n    nzAutoPlaySpeed: number;\n    nzTransitionSpeed: number;\n    /**\n     * this property is passed directly to an NzCarouselBaseStrategy\n     */\n    nzStrategyOptions: NzSafeAny;\n    set nzDotPosition(value: NzCarouselDotPosition);\n    get nzDotPosition(): NzCarouselDotPosition;\n    private _dotPosition;\n    readonly nzBeforeChange: EventEmitter<FromToInterface>;\n    readonly nzAfterChange: EventEmitter<number>;\n    activeIndex: number;\n    el: HTMLElement;\n    slickListEl: HTMLElement;\n    slickTrackEl: HTMLElement;\n    strategy?: NzCarouselBaseStrategy;\n    vertical: boolean;\n    transitionInProgress: number | null;\n    dir: Direction;\n    private destroy$;\n    private gestureRect;\n    private pointerDelta;\n    private isTransiting;\n    private isDragging;\n    constructor(elementRef: ElementRef, nzConfigService: NzConfigService, renderer: Renderer2, cdr: ChangeDetectorRef, platform: Platform, resizeService: NzResizeService, nzDragService: NzDragService, directionality: Directionality, customStrategies: NzCarouselStrategyRegistryItem[]);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    onKeyDown(e: KeyboardEvent): void;\n    onLiClick: (index: number) => void;\n    next(): void;\n    pre(): void;\n    goTo(index: number): void;\n    private switchStrategy;\n    private scheduleNextTransition;\n    private clearScheduledTransition;\n    private markContentActive;\n    /**\n     * Drag carousel.\n     */\n    pointerDown: (event: TouchEvent | MouseEvent) => void;\n    layout(): void;\n}\n"]}